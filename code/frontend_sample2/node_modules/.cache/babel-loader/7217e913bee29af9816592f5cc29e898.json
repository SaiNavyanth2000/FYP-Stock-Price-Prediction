{"ast":null,"code":"export default {\n  props: {\n    stockdata: Object\n  },\n\n  data() {\n    return {};\n  },\n\n  created() {\n    console.log(this.stockdata); // this.stockdata = { abc: 'abcd' };\n    // if (this.stockdata !== undefined && Object.keys(this.stockdata).length > 0) {\n    //   console.log(Object.values(this.stockdata['Adj Close']));\n    // }\n  }\n\n};","map":{"version":3,"mappings":"AAiDA,eAAe;AACbA,OAAK,EAAE;AACLC,aAAS,EAAEC;AADN,GADM;;AAIbC,MAAI,GAAG;AACL,WAAO,EAAP;AACD,GANY;;AAObC,SAAO,GAAG;AACRC,WAAO,CAACC,GAAR,CAAY,KAAKL,SAAjB,EADQ,CAER;AACA;AACA;AACA;AACD;;AAbY,CAAf","names":["props","stockdata","Object","data","created","console","log"],"sourceRoot":"","sources":["C:\\Users\\saina\\OneDrive - City University of Hong Kong\\Desktop\\cityu\\Cityu Year 4\\FYP\\code\\frontend_sample2\\src\\components\\LSModel.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <p>\n      LSTM (Long Short Term Memory) network has been trained with\n      100 timestamps.\n    </p>\n    <p>So, this is how it splits the data:</p>\n    <img src=\"../../public/images/multi_lstm/prediction_demo.jpg\" />\n    <p>\n      Based on the past 100 days of data, the model will predict the closing\n      price of the next day.\n    </p>\n    <br /><br />\n\n    <p>\n      Different models have been trained with different layers. After\n      hyperparameter tuning, this is the best model for stock price data:\n    </p>\n    <img src=\"../../public/images/multi_lstm/model_summary.jpg\" />\n\n    <div class=\"table-wrapper-scroll-y my-custom-scrollbar mt-5\">\n      <table\n        class=\"table table-bordered table-striped\"\n\n        v-if=\"stockdata !== null && stockdata !== undefined && Object.keys(stockdata).length > 0\"\n      >\n        <thead>\n          <tr>\n            <th\n              v-for=\"(key, index) in Object.keys(Object.values(stockdata)[0])\"\n              :key=\"index\"\n            >\n              {{ key }}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(key, index) in Object.values(stockdata)\" :key=\"index\">\n            <td v-for=\"(key2, index2) in Object.values(key)\" :key=\"index2\">\n              {{ parseFloat(key2).toFixed(2) }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    stockdata: Object,\n  },\n  data() {\n    return {};\n  },\n  created() {\n    console.log(this.stockdata);\n    // this.stockdata = { abc: 'abcd' };\n    // if (this.stockdata !== undefined && Object.keys(this.stockdata).length > 0) {\n    //   console.log(Object.values(this.stockdata['Adj Close']));\n    // }\n  },\n};\n</script>\n\n<style>\n.my-custom-scrollbar {\n  position: relative;\n  height: 20vh;\n  overflow: auto;\n}\n.my-custom-scrollbar thead th {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  background: #ffffff;\n}\n.table-wrapper-scroll-y {\n  display: block;\n}\ntable {\n  border: 'solid 10px black';\n}\nth {\n  background: #ffffff;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}