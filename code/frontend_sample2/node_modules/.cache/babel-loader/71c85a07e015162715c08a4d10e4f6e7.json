{"ast":null,"code":"function clean(link) {\n  // allow time for iOS\n  setTimeout(() => {\n    window.URL.revokeObjectURL(link.href);\n  }, 10000);\n  link.remove();\n}\n/**\n * Forces browser to download file with specified content\n *\n * @param {*} fileName - String\n * @param {*} rawData - String | ArrayBuffer | ArrayBufferView | Blob\n * @param {*} opts - String (mimeType) or Object\n *                   Object form: { mimeType?: String, byteOrderMark?: String | Uint8Array, encoding?: String }\n * @returns Boolean | Error\n *\n * mimeType       - Examples: 'application/octect-stream' (default), 'text/plain', 'application/json',\n *                  'text/plain;charset=UTF-8', 'video/mp4', 'image/png', 'application/pdf'\n *                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n *\n * byteOrderMark  - (BOM) Example: '\\uFEFF'\n *                  https://en.wikipedia.org/wiki/Byte_order_mark\n *\n * encoding       - Performs a TextEncoder.encode() over the rawData;\n *                  Example: 'windows-1252' (ANSI, a subset of ISO-8859-1)\n *                  https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n */\n\n\nexport default function (fileName, rawData, opts = {}) {\n  const {\n    mimeType,\n    byteOrderMark,\n    encoding\n  } = typeof opts === 'string' ? {\n    mimeType: opts\n  } : opts;\n  const data = encoding !== void 0 ? new TextEncoder(encoding).encode([rawData]) : rawData;\n  const blobData = byteOrderMark !== void 0 ? [byteOrderMark, data] : [data];\n  const blob = new Blob(blobData, {\n    type: mimeType || 'application/octet-stream'\n  });\n  const link = document.createElement('a');\n  link.href = window.URL.createObjectURL(blob);\n  link.setAttribute('download', fileName); // Check for \"download\" attribute support;\n  // If not supported, open this in new window\n\n  if (typeof link.download === 'undefined') {\n    link.setAttribute('target', '_blank');\n  }\n\n  link.classList.add('hidden');\n  link.style.position = 'fixed'; // avoid scrolling to bottom\n\n  document.body.appendChild(link);\n\n  try {\n    link.click();\n    clean(link);\n    return true;\n  } catch (err) {\n    clean(link);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/utils/export-file.js"],"names":["clean","link","setTimeout","window","URL","revokeObjectURL","href","remove","fileName","rawData","opts","mimeType","byteOrderMark","encoding","data","TextEncoder","encode","blobData","blob","Blob","type","document","createElement","createObjectURL","setAttribute","download","classList","add","style","position","body","appendChild","click","err"],"mappings":"AAAA,SAASA,KAAT,CAAgBC,IAAhB,EAAsB;AACpB;AACAC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAAI,CAACK,IAAhC;AACD,GAFS,EAEP,KAFO,CAAV;AAIAL,EAAAA,IAAI,CAACM,MAAL;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,UAAUC,QAAV,EAAoBC,OAApB,EAA6BC,IAAI,GAAG,EAApC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA;AAA3B,MAAwC,OAAOH,IAAP,KAAgB,QAAhB,GAC1C;AAAEC,IAAAA,QAAQ,EAAED;AAAZ,GAD0C,GAE1CA,IAFJ;AAIA,QAAMI,IAAI,GAAGD,QAAQ,KAAK,KAAK,CAAlB,GACR,IAAIE,WAAJ,CAAgBF,QAAhB,CAAD,CAA4BG,MAA5B,CAAmC,CAAEP,OAAF,CAAnC,CADS,GAETA,OAFJ;AAIA,QAAMQ,QAAQ,GAAGL,aAAa,KAAK,KAAK,CAAvB,GAA2B,CAAEA,aAAF,EAAiBE,IAAjB,CAA3B,GAAqD,CAAEA,IAAF,CAAtE;AACA,QAAMI,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAT,EAAmB;AAAEG,IAAAA,IAAI,EAAET,QAAQ,IAAI;AAApB,GAAnB,CAAb;AACA,QAAMV,IAAI,GAAGoB,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AAEArB,EAAAA,IAAI,CAACK,IAAL,GAAYH,MAAM,CAACC,GAAP,CAAWmB,eAAX,CAA2BL,IAA3B,CAAZ;AACAjB,EAAAA,IAAI,CAACuB,YAAL,CAAkB,UAAlB,EAA8BhB,QAA9B,EAdqD,CAgBrD;AACA;;AACA,MAAI,OAAOP,IAAI,CAACwB,QAAZ,KAAyB,WAA7B,EAA0C;AACxCxB,IAAAA,IAAI,CAACuB,YAAL,CAAkB,QAAlB,EAA4B,QAA5B;AACD;;AAEDvB,EAAAA,IAAI,CAACyB,SAAL,CAAeC,GAAf,CAAmB,QAAnB;AACA1B,EAAAA,IAAI,CAAC2B,KAAL,CAAWC,QAAX,GAAsB,OAAtB,CAvBqD,CAuBvB;;AAC9BR,EAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0B9B,IAA1B;;AAEA,MAAI;AACFA,IAAAA,IAAI,CAAC+B,KAAL;AACAhC,IAAAA,KAAK,CAACC,IAAD,CAAL;AACA,WAAO,IAAP;AACD,GAJD,CAKA,OAAOgC,GAAP,EAAY;AACVjC,IAAAA,KAAK,CAACC,IAAD,CAAL;AACA,WAAOgC,GAAP;AACD;AACF","sourcesContent":["function clean (link) {\n  // allow time for iOS\n  setTimeout(() => {\n    window.URL.revokeObjectURL(link.href)\n  }, 10000)\n\n  link.remove()\n}\n\n/**\n * Forces browser to download file with specified content\n *\n * @param {*} fileName - String\n * @param {*} rawData - String | ArrayBuffer | ArrayBufferView | Blob\n * @param {*} opts - String (mimeType) or Object\n *                   Object form: { mimeType?: String, byteOrderMark?: String | Uint8Array, encoding?: String }\n * @returns Boolean | Error\n *\n * mimeType       - Examples: 'application/octect-stream' (default), 'text/plain', 'application/json',\n *                  'text/plain;charset=UTF-8', 'video/mp4', 'image/png', 'application/pdf'\n *                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n *\n * byteOrderMark  - (BOM) Example: '\\uFEFF'\n *                  https://en.wikipedia.org/wiki/Byte_order_mark\n *\n * encoding       - Performs a TextEncoder.encode() over the rawData;\n *                  Example: 'windows-1252' (ANSI, a subset of ISO-8859-1)\n *                  https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n */\nexport default function (fileName, rawData, opts = {}) {\n  const { mimeType, byteOrderMark, encoding } = typeof opts === 'string'\n    ? { mimeType: opts }\n    : opts\n\n  const data = encoding !== void 0\n    ? (new TextEncoder(encoding)).encode([ rawData ])\n    : rawData\n\n  const blobData = byteOrderMark !== void 0 ? [ byteOrderMark, data ] : [ data ]\n  const blob = new Blob(blobData, { type: mimeType || 'application/octet-stream' })\n  const link = document.createElement('a')\n\n  link.href = window.URL.createObjectURL(blob)\n  link.setAttribute('download', fileName)\n\n  // Check for \"download\" attribute support;\n  // If not supported, open this in new window\n  if (typeof link.download === 'undefined') {\n    link.setAttribute('target', '_blank')\n  }\n\n  link.classList.add('hidden')\n  link.style.position = 'fixed' // avoid scrolling to bottom\n  document.body.appendChild(link)\n\n  try {\n    link.click()\n    clean(link)\n    return true\n  }\n  catch (err) {\n    clean(link)\n    return err\n  }\n}\n"]},"metadata":{},"sourceType":"module"}