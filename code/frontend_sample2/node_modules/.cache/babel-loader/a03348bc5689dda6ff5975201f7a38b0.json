{"ast":null,"code":"import { h, ref, computed, watch, onBeforeUpdate, onUpdated, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue';\nimport QField from '../field/QField.js';\nimport QIcon from '../icon/QIcon.js';\nimport QChip from '../chip/QChip.js';\nimport QItem from '../item/QItem.js';\nimport QItemSection from '../item/QItemSection.js';\nimport QItemLabel from '../item/QItemLabel.js';\nimport QMenu from '../menu/QMenu.js';\nimport QDialog from '../dialog/QDialog.js';\nimport useField, { useFieldState, useFieldProps, useFieldEmits, fieldValueIsFilled } from '../../composables/private/use-field.js';\nimport { useVirtualScroll, useVirtualScrollProps } from '../virtual-scroll/use-virtual-scroll.js';\nimport { useFormProps, useFormInputNameAttr } from '../../composables/private/use-form.js';\nimport useKeyComposition from '../../composables/private/use-key-composition.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { isDeepEqual } from '../../utils/private/is.js';\nimport { stop, prevent, stopAndPrevent } from '../../utils/event.js';\nimport { normalizeToInterval } from '../../utils/format.js';\nimport { shouldIgnoreKey, isKeyCode } from '../../utils/private/key-composition.js';\nimport { hMergeSlot } from '../../utils/private/render.js';\n\nconst validateNewValueMode = v => ['add', 'add-unique', 'toggle'].includes(v);\n\nconst reEscapeList = '.*+?^${}()|[]\\\\';\nconst fieldPropsList = Object.keys(useFieldProps);\nexport default createComponent({\n  name: 'QSelect',\n  inheritAttrs: false,\n  props: { ...useVirtualScrollProps,\n    ...useFormProps,\n    ...useFieldProps,\n    modelValue: {\n      required: true\n    },\n    multiple: Boolean,\n    displayValue: [String, Number],\n    displayValueHtml: Boolean,\n    dropdownIcon: String,\n    options: {\n      type: Array,\n      default: () => []\n    },\n    optionValue: [Function, String],\n    optionLabel: [Function, String],\n    optionDisable: [Function, String],\n    hideSelected: Boolean,\n    hideDropdownIcon: Boolean,\n    fillInput: Boolean,\n    maxValues: [Number, String],\n    optionsDense: Boolean,\n    optionsDark: {\n      type: Boolean,\n      default: null\n    },\n    optionsSelectedClass: String,\n    optionsHtml: Boolean,\n    optionsCover: Boolean,\n    menuShrink: Boolean,\n    menuAnchor: String,\n    menuSelf: String,\n    menuOffset: Array,\n    popupContentClass: String,\n    popupContentStyle: [String, Array, Object],\n    useInput: Boolean,\n    useChips: Boolean,\n    newValueMode: {\n      type: String,\n      validator: validateNewValueMode\n    },\n    mapOptions: Boolean,\n    emitValue: Boolean,\n    inputDebounce: {\n      type: [Number, String],\n      default: 500\n    },\n    inputClass: [Array, String, Object],\n    inputStyle: [Array, String, Object],\n    tabindex: {\n      type: [String, Number],\n      default: 0\n    },\n    autocomplete: String,\n    transitionShow: String,\n    transitionHide: String,\n    transitionDuration: [String, Number],\n    behavior: {\n      type: String,\n      validator: v => ['default', 'menu', 'dialog'].includes(v),\n      default: 'default'\n    },\n    virtualScrollItemSize: {\n      type: [Number, String],\n      default: void 0\n    },\n    onNewValue: Function,\n    onFilter: Function\n  },\n  emits: [...useFieldEmits, 'add', 'remove', 'input-value', 'keyup', 'keypress', 'keydown', 'filter-abort'],\n\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const {\n      $q\n    } = proxy;\n    const menu = ref(false);\n    const dialog = ref(false);\n    const optionIndex = ref(-1);\n    const inputValue = ref('');\n    const dialogFieldFocused = ref(false);\n    const innerLoadingIndicator = ref(false);\n    let inputTimer, innerValueCache, hasDialog, userInputValue, filterId, defaultInputValue, transitionShowComputed, searchBuffer, searchBufferExp;\n    const inputRef = ref(null);\n    const targetRef = ref(null);\n    const menuRef = ref(null);\n    const dialogRef = ref(null);\n    const menuContentRef = ref(null);\n    const nameProp = useFormInputNameAttr(props);\n    const onComposition = useKeyComposition(onInput);\n    const virtualScrollLength = computed(() => Array.isArray(props.options) ? props.options.length : 0);\n    const virtualScrollItemSizeComputed = computed(() => props.virtualScrollItemSize === void 0 ? props.dense === true ? 24 : 48 : props.virtualScrollItemSize);\n    const {\n      virtualScrollSliceRange,\n      virtualScrollSliceSizeComputed,\n      localResetVirtualScroll,\n      padVirtualScroll,\n      onVirtualScrollEvt,\n      reset,\n      scrollTo,\n      setVirtualScrollSize\n    } = useVirtualScroll({\n      virtualScrollLength,\n      getVirtualScrollTarget,\n      getVirtualScrollEl,\n      virtualScrollItemSizeComputed\n    });\n    const state = useFieldState();\n    const innerValue = computed(() => {\n      const mapNull = props.mapOptions === true && props.multiple !== true,\n            val = props.modelValue !== void 0 && (props.modelValue !== null || mapNull === true) ? props.multiple === true && Array.isArray(props.modelValue) ? props.modelValue : [props.modelValue] : [];\n\n      if (props.mapOptions === true && Array.isArray(props.options) === true) {\n        const cache = props.mapOptions === true && innerValueCache !== void 0 ? innerValueCache : [];\n        const values = val.map(v => getOption(v, cache));\n        return props.modelValue === null && mapNull === true ? values.filter(v => v !== null) : values;\n      }\n\n      return val;\n    });\n    const innerFieldProps = computed(() => {\n      const acc = {};\n      fieldPropsList.forEach(key => {\n        const val = props[key];\n\n        if (val !== void 0) {\n          acc[key] = val;\n        }\n      });\n      return acc;\n    });\n    const isOptionsDark = computed(() => props.optionsDark === null ? state.isDark.value : props.optionsDark);\n    const hasValue = computed(() => fieldValueIsFilled(innerValue.value));\n    const computedInputClass = computed(() => {\n      let cls = 'q-field__input q-placeholder col';\n\n      if (props.hideSelected === true || innerValue.value.length === 0) {\n        return [cls, props.inputClass];\n      }\n\n      cls += ' q-field__input--padding';\n      return props.inputClass === void 0 ? cls : [cls, props.inputClass];\n    });\n    const menuContentClass = computed(() => (props.virtualScrollHorizontal === true ? 'q-virtual-scroll--horizontal' : '') + (props.popupContentClass ? ' ' + props.popupContentClass : ''));\n    const noOptions = computed(() => virtualScrollLength.value === 0);\n    const selectedString = computed(() => innerValue.value.map(opt => getOptionLabel.value(opt)).join(', '));\n    const needsHtmlFn = computed(() => props.optionsHtml === true ? () => true : opt => opt !== void 0 && opt !== null && opt.html === true);\n    const valueAsHtml = computed(() => props.displayValueHtml === true || props.displayValue === void 0 && (props.optionsHtml === true || innerValue.value.some(needsHtmlFn.value)));\n    const tabindex = computed(() => state.focused.value === true ? props.tabindex : -1);\n    const comboboxAttrs = computed(() => ({\n      tabindex: props.tabindex,\n      role: 'combobox',\n      'aria-label': props.label,\n      'aria-autocomplete': props.useInput === true ? 'list' : 'none',\n      'aria-expanded': menu.value === true ? 'true' : 'false',\n      'aria-owns': `${state.targetUid.value}_lb`,\n      'aria-controls': `${state.targetUid.value}_lb`\n    }));\n    const listboxAttrs = computed(() => {\n      const attrs = {\n        id: `${state.targetUid.value}_lb`,\n        role: 'listbox',\n        'aria-multiselectable': props.multiple === true ? 'true' : 'false'\n      };\n\n      if (optionIndex.value >= 0) {\n        attrs['aria-activedescendant'] = `${state.targetUid.value}_${optionIndex.value}`;\n      }\n\n      return attrs;\n    });\n    const selectedScope = computed(() => {\n      return innerValue.value.map((opt, i) => ({\n        index: i,\n        opt,\n        html: needsHtmlFn.value(opt),\n        selected: true,\n        removeAtIndex: removeAtIndexAndFocus,\n        toggleOption,\n        tabindex: tabindex.value\n      }));\n    });\n    const optionScope = computed(() => {\n      if (virtualScrollLength.value === 0) {\n        return [];\n      }\n\n      const {\n        from,\n        to\n      } = virtualScrollSliceRange.value;\n      return props.options.slice(from, to).map((opt, i) => {\n        const disable = isOptionDisabled.value(opt) === true;\n        const index = from + i;\n        const itemProps = {\n          clickable: true,\n          active: false,\n          activeClass: computedOptionsSelectedClass.value,\n          manualFocus: true,\n          focused: false,\n          disable,\n          tabindex: -1,\n          dense: props.optionsDense,\n          dark: isOptionsDark.value,\n          role: 'option',\n          id: `${state.targetUid.value}_${index}`,\n          onClick: () => {\n            toggleOption(opt);\n          }\n        };\n\n        if (disable !== true) {\n          isOptionSelected(opt) === true && (itemProps.active = true);\n          optionIndex.value === index && (itemProps.focused = true);\n          itemProps['aria-selected'] = itemProps.active === true ? 'true' : 'false';\n\n          if ($q.platform.is.desktop === true) {\n            itemProps.onMousemove = () => {\n              menu.value === true && setOptionIndex(index);\n            };\n          }\n        }\n\n        return {\n          index,\n          opt,\n          html: needsHtmlFn.value(opt),\n          label: getOptionLabel.value(opt),\n          selected: itemProps.active,\n          focused: itemProps.focused,\n          toggleOption,\n          setOptionIndex,\n          itemProps\n        };\n      });\n    });\n    const dropdownArrowIcon = computed(() => props.dropdownIcon !== void 0 ? props.dropdownIcon : $q.iconSet.arrow.dropdown);\n    const squaredMenu = computed(() => props.optionsCover === false && props.outlined !== true && props.standout !== true && props.borderless !== true && props.rounded !== true);\n    const computedOptionsSelectedClass = computed(() => props.optionsSelectedClass !== void 0 ? props.optionsSelectedClass : props.color !== void 0 ? `text-${props.color}` : ''); // returns method to get value of an option;\n    // takes into account 'option-value' prop\n\n    const getOptionValue = computed(() => getPropValueFn(props.optionValue, 'value')); // returns method to get label of an option;\n    // takes into account 'option-label' prop\n\n    const getOptionLabel = computed(() => getPropValueFn(props.optionLabel, 'label')); // returns method to tell if an option is disabled;\n    // takes into account 'option-disable' prop\n\n    const isOptionDisabled = computed(() => getPropValueFn(props.optionDisable, 'disable'));\n    const innerOptionsValue = computed(() => innerValue.value.map(opt => getOptionValue.value(opt)));\n    const inputControlEvents = computed(() => {\n      const evt = {\n        onInput,\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        onChange: onComposition,\n        onKeydown: onTargetKeydown,\n        onKeyup: onTargetAutocomplete,\n        onKeypress: onTargetKeypress,\n        onFocus: selectInputText,\n\n        onClick(e) {\n          hasDialog === true && stop(e);\n        }\n\n      };\n      evt.onCompositionstart = evt.onCompositionupdate = evt.onCompositionend = onComposition;\n      return evt;\n    });\n    watch(innerValue, val => {\n      innerValueCache = val;\n\n      if (props.useInput === true && props.fillInput === true && props.multiple !== true // Prevent re-entering in filter while filtering\n      // Also prevent clearing inputValue while filtering\n      && state.innerLoading.value !== true && (dialog.value !== true && menu.value !== true || hasValue.value !== true)) {\n        userInputValue !== true && resetInputValue();\n\n        if (dialog.value === true || menu.value === true) {\n          filter('');\n        }\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.fillInput, resetInputValue);\n    watch(menu, updateMenu);\n    watch(virtualScrollLength, rerenderMenu);\n\n    function getEmittingOptionValue(opt) {\n      return props.emitValue === true ? getOptionValue.value(opt) : opt;\n    }\n\n    function removeAtIndex(index) {\n      if (index > -1 && index < innerValue.value.length) {\n        if (props.multiple === true) {\n          const model = props.modelValue.slice();\n          emit('remove', {\n            index,\n            value: model.splice(index, 1)[0]\n          });\n          emit('update:modelValue', model);\n        } else {\n          emit('update:modelValue', null);\n        }\n      }\n    }\n\n    function removeAtIndexAndFocus(index) {\n      removeAtIndex(index);\n      state.focus();\n    }\n\n    function add(opt, unique) {\n      const val = getEmittingOptionValue(opt);\n\n      if (props.multiple !== true) {\n        props.fillInput === true && updateInputValue(getOptionLabel.value(opt), true, true);\n        emit('update:modelValue', val);\n        return;\n      }\n\n      if (innerValue.value.length === 0) {\n        emit('add', {\n          index: 0,\n          value: val\n        });\n        emit('update:modelValue', props.multiple === true ? [val] : val);\n        return;\n      }\n\n      if (unique === true && isOptionSelected(opt) === true) {\n        return;\n      }\n\n      if (props.maxValues !== void 0 && props.modelValue.length >= props.maxValues) {\n        return;\n      }\n\n      const model = props.modelValue.slice();\n      emit('add', {\n        index: model.length,\n        value: val\n      });\n      model.push(val);\n      emit('update:modelValue', model);\n    }\n\n    function toggleOption(opt, keepOpen) {\n      if (state.editable.value !== true || opt === void 0 || isOptionDisabled.value(opt) === true) {\n        return;\n      }\n\n      const optValue = getOptionValue.value(opt);\n\n      if (props.multiple !== true) {\n        if (keepOpen !== true) {\n          updateInputValue(props.fillInput === true ? getOptionLabel.value(opt) : '', true, true);\n          hidePopup();\n        }\n\n        targetRef.value !== null && targetRef.value.focus();\n\n        if (innerValue.value.length === 0 || isDeepEqual(getOptionValue.value(innerValue.value[0]), optValue) !== true) {\n          emit('update:modelValue', props.emitValue === true ? optValue : opt);\n        }\n\n        return;\n      }\n\n      (hasDialog !== true || dialogFieldFocused.value === true) && state.focus();\n      selectInputText();\n\n      if (innerValue.value.length === 0) {\n        const val = props.emitValue === true ? optValue : opt;\n        emit('add', {\n          index: 0,\n          value: val\n        });\n        emit('update:modelValue', props.multiple === true ? [val] : val);\n        return;\n      }\n\n      const model = props.modelValue.slice(),\n            index = innerOptionsValue.value.findIndex(v => isDeepEqual(v, optValue));\n\n      if (index > -1) {\n        emit('remove', {\n          index,\n          value: model.splice(index, 1)[0]\n        });\n      } else {\n        if (props.maxValues !== void 0 && model.length >= props.maxValues) {\n          return;\n        }\n\n        const val = props.emitValue === true ? optValue : opt;\n        emit('add', {\n          index: model.length,\n          value: val\n        });\n        model.push(val);\n      }\n\n      emit('update:modelValue', model);\n    }\n\n    function setOptionIndex(index) {\n      if ($q.platform.is.desktop !== true) {\n        return;\n      }\n\n      const val = index > -1 && index < virtualScrollLength.value ? index : -1;\n\n      if (optionIndex.value !== val) {\n        optionIndex.value = val;\n      }\n    }\n\n    function moveOptionSelection(offset = 1, skipInputValue) {\n      if (menu.value === true) {\n        let index = optionIndex.value;\n\n        do {\n          index = normalizeToInterval(index + offset, -1, virtualScrollLength.value - 1);\n        } while (index !== -1 && index !== optionIndex.value && isOptionDisabled.value(props.options[index]) === true);\n\n        if (optionIndex.value !== index) {\n          setOptionIndex(index);\n          scrollTo(index);\n\n          if (skipInputValue !== true && props.useInput === true && props.fillInput === true) {\n            setInputValue(index >= 0 ? getOptionLabel.value(props.options[index]) : defaultInputValue);\n          }\n        }\n      }\n    }\n\n    function getOption(value, valueCache) {\n      const fn = opt => isDeepEqual(getOptionValue.value(opt), value);\n\n      return props.options.find(fn) || valueCache.find(fn) || value;\n    }\n\n    function getPropValueFn(propValue, defaultVal) {\n      const val = propValue !== void 0 ? propValue : defaultVal;\n      return typeof val === 'function' ? val : opt => opt !== null && typeof opt === 'object' && val in opt ? opt[val] : opt;\n    }\n\n    function isOptionSelected(opt) {\n      const val = getOptionValue.value(opt);\n      return innerOptionsValue.value.find(v => isDeepEqual(v, val)) !== void 0;\n    }\n\n    function selectInputText(e) {\n      if (props.useInput === true && targetRef.value !== null && (e === void 0 || targetRef.value === e.target && e.target.value === selectedString.value)) {\n        targetRef.value.select();\n      }\n    }\n\n    function onTargetKeyup(e) {\n      // if ESC and we have an opened menu\n      // then stop propagation (might be caught by a QDialog\n      // and so it will also close the QDialog, which is wrong)\n      if (isKeyCode(e, 27) === true && menu.value === true) {\n        stop(e); // on ESC we need to close the dialog also\n\n        hidePopup();\n        resetInputValue();\n      }\n\n      emit('keyup', e);\n    }\n\n    function onTargetAutocomplete(e) {\n      const {\n        value\n      } = e.target;\n\n      if (e.keyCode !== void 0) {\n        onTargetKeyup(e);\n        return;\n      }\n\n      e.target.value = '';\n      clearTimeout(inputTimer);\n      resetInputValue();\n\n      if (typeof value === 'string' && value.length > 0) {\n        const needle = value.toLocaleLowerCase();\n\n        const findFn = extractFn => {\n          const option = props.options.find(opt => extractFn.value(opt).toLocaleLowerCase() === needle);\n\n          if (option === void 0) {\n            return false;\n          }\n\n          if (innerValue.value.indexOf(option) === -1) {\n            toggleOption(option);\n          } else {\n            hidePopup();\n          }\n\n          return true;\n        };\n\n        const fillFn = afterFilter => {\n          if (findFn(getOptionValue) === true) {\n            return;\n          }\n\n          if (findFn(getOptionLabel) === true || afterFilter === true) {\n            return;\n          }\n\n          filter(value, true, () => fillFn(true));\n        };\n\n        fillFn();\n      } else {\n        state.clearValue(e);\n      }\n    }\n\n    function onTargetKeypress(e) {\n      emit('keypress', e);\n    }\n\n    function onTargetKeydown(e) {\n      emit('keydown', e);\n\n      if (shouldIgnoreKey(e) === true) {\n        return;\n      }\n\n      const newValueModeValid = inputValue.value.length > 0 && (props.newValueMode !== void 0 || props.onNewValue !== void 0);\n      const tabShouldSelect = e.shiftKey !== true && props.multiple !== true && (optionIndex.value > -1 || newValueModeValid === true); // escape\n\n      if (e.keyCode === 27) {\n        prevent(e); // prevent clearing the inputValue\n\n        return;\n      } // tab\n\n\n      if (e.keyCode === 9 && tabShouldSelect === false) {\n        closeMenu();\n        return;\n      }\n\n      if (e.target === void 0 || e.target.id !== state.targetUid.value) {\n        return;\n      } // down\n\n\n      if (e.keyCode === 40 && state.innerLoading.value !== true && menu.value === false) {\n        stopAndPrevent(e);\n        showPopup();\n        return;\n      } // backspace\n\n\n      if (e.keyCode === 8 && props.hideSelected !== true && inputValue.value.length === 0) {\n        if (props.multiple === true && Array.isArray(props.modelValue) === true) {\n          removeAtIndex(props.modelValue.length - 1);\n        } else if (props.multiple !== true && props.modelValue !== null) {\n          emit('update:modelValue', null);\n        }\n\n        return;\n      } // home, end - 36, 35\n\n\n      if ((e.keyCode === 35 || e.keyCode === 36) && (typeof inputValue.value !== 'string' || inputValue.value.length === 0)) {\n        stopAndPrevent(e);\n        optionIndex.value = -1;\n        moveOptionSelection(e.keyCode === 36 ? 1 : -1, props.multiple);\n      } // pg up, pg down - 33, 34\n\n\n      if ((e.keyCode === 33 || e.keyCode === 34) && virtualScrollSliceSizeComputed.value !== void 0) {\n        stopAndPrevent(e);\n        optionIndex.value = Math.max(-1, Math.min(virtualScrollLength.value, optionIndex.value + (e.keyCode === 33 ? -1 : 1) * virtualScrollSliceSizeComputed.value.view));\n        moveOptionSelection(e.keyCode === 33 ? 1 : -1, props.multiple);\n      } // up, down\n\n\n      if (e.keyCode === 38 || e.keyCode === 40) {\n        stopAndPrevent(e);\n        moveOptionSelection(e.keyCode === 38 ? -1 : 1, props.multiple);\n      }\n\n      const optionsLength = virtualScrollLength.value; // clear search buffer if expired\n\n      if (searchBuffer === void 0 || searchBufferExp < Date.now()) {\n        searchBuffer = '';\n      } // keyboard search when not having use-input\n\n\n      if (optionsLength > 0 && props.useInput !== true && e.key !== void 0 && e.key.length === 1 // printable char\n      && e.altKey === e.ctrlKey // not kbd shortcut\n      && (e.keyCode !== 32 || searchBuffer.length > 0) // space in middle of search\n      ) {\n        menu.value !== true && showPopup(e);\n        const char = e.key.toLocaleLowerCase(),\n              keyRepeat = searchBuffer.length === 1 && searchBuffer[0] === char;\n        searchBufferExp = Date.now() + 1500;\n\n        if (keyRepeat === false) {\n          stopAndPrevent(e);\n          searchBuffer += char;\n        }\n\n        const searchRe = new RegExp('^' + searchBuffer.split('').map(l => reEscapeList.indexOf(l) > -1 ? '\\\\' + l : l).join('.*'), 'i');\n        let index = optionIndex.value;\n\n        if (keyRepeat === true || index < 0 || searchRe.test(getOptionLabel.value(props.options[index])) !== true) {\n          do {\n            index = normalizeToInterval(index + 1, -1, optionsLength - 1);\n          } while (index !== optionIndex.value && (isOptionDisabled.value(props.options[index]) === true || searchRe.test(getOptionLabel.value(props.options[index])) !== true));\n        }\n\n        if (optionIndex.value !== index) {\n          nextTick(() => {\n            setOptionIndex(index);\n            scrollTo(index);\n\n            if (index >= 0 && props.useInput === true && props.fillInput === true) {\n              setInputValue(getOptionLabel.value(props.options[index]));\n            }\n          });\n        }\n\n        return;\n      } // enter, space (when not using use-input and not in search), or tab (when not using multiple and option selected)\n      // same target is checked above\n\n\n      if (e.keyCode !== 13 && (e.keyCode !== 32 || props.useInput === true || searchBuffer !== '') && (e.keyCode !== 9 || tabShouldSelect === false)) {\n        return;\n      }\n\n      e.keyCode !== 9 && stopAndPrevent(e);\n\n      if (optionIndex.value > -1 && optionIndex.value < optionsLength) {\n        toggleOption(props.options[optionIndex.value]);\n        return;\n      }\n\n      if (newValueModeValid === true) {\n        const done = (val, mode) => {\n          if (mode) {\n            if (validateNewValueMode(mode) !== true) {\n              return;\n            }\n          } else {\n            mode = props.newValueMode;\n          }\n\n          if (val === void 0 || val === null) {\n            return;\n          }\n\n          updateInputValue('', props.multiple !== true, true);\n          const fn = mode === 'toggle' ? toggleOption : add;\n          fn(val, mode === 'add-unique');\n\n          if (props.multiple !== true) {\n            targetRef.value !== null && targetRef.value.focus();\n            hidePopup();\n          }\n        };\n\n        if (props.onNewValue !== void 0) {\n          emit('new-value', inputValue.value, done);\n        } else {\n          done(inputValue.value);\n        }\n\n        if (props.multiple !== true) {\n          return;\n        }\n      }\n\n      if (menu.value === true) {\n        closeMenu();\n      } else if (state.innerLoading.value !== true) {\n        showPopup();\n      }\n    }\n\n    function getVirtualScrollEl() {\n      return hasDialog === true ? menuContentRef.value : menuRef.value !== null && menuRef.value.__qPortalInnerRef.value !== null ? menuRef.value.__qPortalInnerRef.value : void 0;\n    }\n\n    function getVirtualScrollTarget() {\n      return getVirtualScrollEl();\n    }\n\n    function getSelection() {\n      if (props.hideSelected === true) {\n        return [];\n      }\n\n      if (slots['selected-item'] !== void 0) {\n        return selectedScope.value.map(scope => slots['selected-item'](scope)).slice();\n      }\n\n      if (slots.selected !== void 0) {\n        return [].concat(slots.selected());\n      }\n\n      if (props.useChips === true) {\n        return selectedScope.value.map((scope, i) => h(QChip, {\n          key: 'option-' + i,\n          removable: state.editable.value === true && isOptionDisabled.value(scope.opt) !== true,\n          dense: true,\n          textColor: props.color,\n          tabindex: tabindex.value,\n\n          onRemove() {\n            scope.removeAtIndex(i);\n          }\n\n        }, () => h('span', {\n          class: 'ellipsis',\n          [scope.html === true ? 'innerHTML' : 'textContent']: getOptionLabel.value(scope.opt)\n        })));\n      }\n\n      return [h('span', {\n        [valueAsHtml.value === true ? 'innerHTML' : 'textContent']: props.displayValue !== void 0 ? props.displayValue : selectedString.value\n      })];\n    }\n\n    function getAllOptions() {\n      if (noOptions.value === true) {\n        return slots['no-option'] !== void 0 ? slots['no-option']({\n          inputValue: inputValue.value\n        }) : void 0;\n      }\n\n      const fn = slots.option !== void 0 ? slots.option : scope => {\n        return h(QItem, {\n          key: scope.index,\n          ...scope.itemProps\n        }, () => {\n          return h(QItemSection, () => h(QItemLabel, () => h('span', {\n            [scope.html === true ? 'innerHTML' : 'textContent']: scope.label\n          })));\n        });\n      };\n      let options = padVirtualScroll('div', optionScope.value.map(fn));\n\n      if (slots['before-options'] !== void 0) {\n        options = slots['before-options']().concat(options);\n      }\n\n      return hMergeSlot(slots['after-options'], options);\n    }\n\n    function getInput(fromDialog, isTarget) {\n      const attrs = isTarget === true ? { ...comboboxAttrs.value,\n        ...state.splitAttrs.attributes.value\n      } : void 0;\n      const data = {\n        ref: isTarget === true ? targetRef : void 0,\n        key: 'i_t',\n        class: computedInputClass.value,\n        style: props.inputStyle,\n        value: inputValue.value !== void 0 ? inputValue.value : '',\n        // required for Android in order to show ENTER key when in form\n        type: 'search',\n        ...attrs,\n        id: isTarget === true ? state.targetUid.value : void 0,\n        maxlength: props.maxlength,\n        autocomplete: props.autocomplete,\n        'data-autofocus': fromDialog !== true && props.autofocus === true || void 0,\n        disabled: props.disable === true,\n        readonly: props.readonly === true,\n        ...inputControlEvents.value\n      };\n\n      if (fromDialog !== true && hasDialog === true) {\n        if (Array.isArray(data.class) === true) {\n          data.class = [...data.class, 'no-pointer-events'];\n        } else {\n          data.class += ' no-pointer-events';\n        }\n      }\n\n      return h('input', data);\n    }\n\n    function onInput(e) {\n      clearTimeout(inputTimer);\n\n      if (e && e.target && e.target.composing === true) {\n        return;\n      }\n\n      setInputValue(e.target.value || ''); // mark it here as user input so that if updateInputValue is called\n      // before filter is called the indicator is reset\n\n      userInputValue = true;\n      defaultInputValue = inputValue.value;\n\n      if (state.focused.value !== true && (hasDialog !== true || dialogFieldFocused.value === true)) {\n        state.focus();\n      }\n\n      if (props.onFilter !== void 0) {\n        inputTimer = setTimeout(() => {\n          filter(inputValue.value);\n        }, props.inputDebounce);\n      }\n    }\n\n    function setInputValue(val) {\n      if (inputValue.value !== val) {\n        inputValue.value = val;\n        emit('input-value', val);\n      }\n    }\n\n    function updateInputValue(val, noFiltering, internal) {\n      userInputValue = internal !== true;\n\n      if (props.useInput === true) {\n        setInputValue(val);\n\n        if (noFiltering === true || internal !== true) {\n          defaultInputValue = val;\n        }\n\n        noFiltering !== true && filter(val);\n      }\n    }\n\n    function filter(val, keepClosed, afterUpdateFn) {\n      if (props.onFilter === void 0 || keepClosed !== true && state.focused.value !== true) {\n        return;\n      }\n\n      if (state.innerLoading.value === true) {\n        emit('filter-abort');\n      } else {\n        state.innerLoading.value = true;\n        innerLoadingIndicator.value = true;\n      }\n\n      if (val !== '' && props.multiple !== true && innerValue.value.length > 0 && userInputValue !== true && val === getOptionLabel.value(innerValue.value[0])) {\n        val = '';\n      }\n\n      const localFilterId = setTimeout(() => {\n        menu.value === true && (menu.value = false);\n      }, 10);\n      clearTimeout(filterId);\n      filterId = localFilterId;\n      emit('filter', val, (fn, afterFn) => {\n        if ((keepClosed === true || state.focused.value === true) && filterId === localFilterId) {\n          clearTimeout(filterId);\n          typeof fn === 'function' && fn(); // hide indicator to allow arrow to animate\n\n          innerLoadingIndicator.value = false;\n          nextTick(() => {\n            state.innerLoading.value = false;\n\n            if (state.editable.value === true) {\n              if (keepClosed === true) {\n                menu.value === true && hidePopup();\n              } else if (menu.value === true) {\n                updateMenu(true);\n              } else {\n                menu.value = true;\n              }\n            }\n\n            typeof afterFn === 'function' && nextTick(() => {\n              afterFn(proxy);\n            });\n            typeof afterUpdateFn === 'function' && nextTick(() => {\n              afterUpdateFn(proxy);\n            });\n          });\n        }\n      }, () => {\n        if (state.focused.value === true && filterId === localFilterId) {\n          clearTimeout(filterId);\n          state.innerLoading.value = false;\n          innerLoadingIndicator.value = false;\n        }\n\n        menu.value === true && (menu.value = false);\n      });\n    }\n\n    function getMenu() {\n      return h(QMenu, {\n        ref: menuRef,\n        class: menuContentClass.value,\n        style: props.popupContentStyle,\n        modelValue: menu.value,\n        fit: props.menuShrink !== true,\n        cover: props.optionsCover === true && noOptions.value !== true && props.useInput !== true,\n        anchor: props.menuAnchor,\n        self: props.menuSelf,\n        offset: props.menuOffset,\n        dark: isOptionsDark.value,\n        noParentEvent: true,\n        noRefocus: true,\n        noFocus: true,\n        square: squaredMenu.value,\n        transitionShow: props.transitionShow,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        separateClosePopup: true,\n        ...listboxAttrs.value,\n        onScrollPassive: onVirtualScrollEvt,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onMenuBeforeHide,\n        onShow: onMenuShow\n      }, getAllOptions);\n    }\n\n    function onMenuBeforeHide(e) {\n      onControlPopupHide(e);\n      closeMenu();\n    }\n\n    function onMenuShow() {\n      setVirtualScrollSize();\n    }\n\n    function onDialogFieldFocus(e) {\n      stop(e);\n      targetRef.value !== null && targetRef.value.focus();\n      dialogFieldFocused.value = true;\n      window.scrollTo(window.pageXOffset || window.scrollX || document.body.scrollLeft || 0, 0);\n    }\n\n    function onDialogFieldBlur(e) {\n      stop(e);\n      nextTick(() => {\n        dialogFieldFocused.value = false;\n      });\n    }\n\n    function getDialog() {\n      const content = [h(QField, {\n        class: `col-auto ${state.fieldClass.value}`,\n        ...innerFieldProps.value,\n        for: state.targetUid.value,\n        dark: isOptionsDark.value,\n        square: true,\n        loading: innerLoadingIndicator.value,\n        itemAligned: false,\n        filled: true,\n        stackLabel: inputValue.value.length > 0,\n        ...state.splitAttrs.listeners.value,\n        onFocus: onDialogFieldFocus,\n        onBlur: onDialogFieldBlur\n      }, { ...slots,\n        rawControl: () => state.getControl(true),\n        before: void 0,\n        after: void 0\n      })];\n      menu.value === true && content.push(h('div', {\n        ref: menuContentRef,\n        class: menuContentClass.value + ' scroll',\n        style: props.popupContentStyle,\n        ...listboxAttrs.value,\n        onClick: prevent,\n        onScrollPassive: onVirtualScrollEvt\n      }, getAllOptions()));\n      return h(QDialog, {\n        ref: dialogRef,\n        modelValue: dialog.value,\n        position: props.useInput === true ? 'top' : void 0,\n        transitionShow: transitionShowComputed,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onDialogBeforeHide,\n        onHide: onDialogHide,\n        onShow: onDialogShow\n      }, () => h('div', {\n        class: 'q-select__dialog' + (isOptionsDark.value === true ? ' q-select__dialog--dark q-dark' : '') + (dialogFieldFocused.value === true ? ' q-select__dialog--focused' : '')\n      }, content));\n    }\n\n    function onDialogBeforeHide(e) {\n      onControlPopupHide(e);\n\n      if (dialogRef.value !== null) {\n        dialogRef.value.__updateRefocusTarget(state.rootRef.value.querySelector('.q-field__native > [tabindex]:last-child'));\n      }\n\n      state.focused.value = false;\n    }\n\n    function onDialogHide(e) {\n      hidePopup();\n      state.focused.value === false && emit('blur', e);\n      resetInputValue();\n    }\n\n    function onDialogShow() {\n      const el = document.activeElement;\n\n      if ((el === null || el.id !== state.targetUid.value) && targetRef.value !== null && targetRef.value !== el) {\n        targetRef.value.focus();\n      }\n\n      setVirtualScrollSize();\n    }\n\n    function closeMenu() {\n      if (dialog.value === true) {\n        return;\n      }\n\n      optionIndex.value = -1;\n\n      if (menu.value === true) {\n        menu.value = false;\n      }\n\n      if (state.focused.value === false) {\n        clearTimeout(filterId);\n        filterId = void 0;\n\n        if (state.innerLoading.value === true) {\n          emit('filter-abort');\n          state.innerLoading.value = false;\n          innerLoadingIndicator.value = false;\n        }\n      }\n    }\n\n    function showPopup(e) {\n      if (state.editable.value !== true) {\n        return;\n      }\n\n      if (hasDialog === true) {\n        state.onControlFocusin(e);\n        dialog.value = true;\n        nextTick(() => {\n          state.focus();\n        });\n      } else {\n        state.focus();\n      }\n\n      if (props.onFilter !== void 0) {\n        filter(inputValue.value);\n      } else if (noOptions.value !== true || slots['no-option'] !== void 0) {\n        menu.value = true;\n      }\n    }\n\n    function hidePopup() {\n      dialog.value = false;\n      closeMenu();\n    }\n\n    function resetInputValue() {\n      props.useInput === true && updateInputValue(props.multiple !== true && props.fillInput === true && innerValue.value.length > 0 ? getOptionLabel.value(innerValue.value[0]) || '' : '', true, true);\n    }\n\n    function updateMenu(show) {\n      let optionIndex = -1;\n\n      if (show === true) {\n        if (innerValue.value.length > 0) {\n          const val = getOptionValue.value(innerValue.value[0]);\n          optionIndex = props.options.findIndex(v => isDeepEqual(getOptionValue.value(v), val));\n        }\n\n        localResetVirtualScroll(optionIndex);\n      }\n\n      setOptionIndex(optionIndex);\n    }\n\n    function rerenderMenu() {\n      if (menu.value === true && state.innerLoading.value === false) {\n        reset();\n        nextTick(() => {\n          if (menu.value === true && state.innerLoading.value === false) {\n            updateMenu(true);\n          }\n        });\n      }\n    }\n\n    function updateMenuPosition() {\n      if (dialog.value === false && menuRef.value !== null) {\n        menuRef.value.updatePosition();\n      }\n    }\n\n    function onControlPopupShow(e) {\n      e !== void 0 && stop(e);\n      emit('popup-show', e);\n      state.hasPopupOpen = true;\n      state.onControlFocusin(e);\n    }\n\n    function onControlPopupHide(e) {\n      e !== void 0 && stop(e);\n      emit('popup-hide', e);\n      state.hasPopupOpen = false;\n      state.onControlFocusout(e);\n    }\n\n    function updatePreState() {\n      hasDialog = $q.platform.is.mobile !== true && props.behavior !== 'dialog' ? false : props.behavior !== 'menu' && (props.useInput === true ? slots['no-option'] !== void 0 || props.onFilter !== void 0 || noOptions.value === false : true);\n      transitionShowComputed = $q.platform.is.ios === true && hasDialog === true && props.useInput === true ? 'fade' : props.transitionShow;\n    }\n\n    onBeforeUpdate(updatePreState);\n    onUpdated(updateMenuPosition);\n    updatePreState();\n    onBeforeUnmount(() => {\n      clearTimeout(inputTimer);\n    }); // expose public methods\n\n    Object.assign(proxy, {\n      showPopup,\n      hidePopup,\n      removeAtIndex,\n      add,\n      toggleOption,\n      getOptionIndex: () => optionIndex.value,\n      setOptionIndex,\n      moveOptionSelection,\n      filter,\n      updateMenuPosition,\n      updateInputValue,\n      isOptionSelected,\n      getEmittingOptionValue,\n      isOptionDisabled: (...args) => isOptionDisabled.value.apply(null, args) === true,\n      getOptionValue: (...args) => getOptionValue.value.apply(null, args),\n      getOptionLabel: (...args) => getOptionLabel.value.apply(null, args)\n    });\n    Object.assign(state, {\n      innerValue,\n      fieldClass: computed(() => `q-select q-field--auto-height q-select--with${props.useInput !== true ? 'out' : ''}-input` + ` q-select--with${props.useChips !== true ? 'out' : ''}-chips` + ` q-select--${props.multiple === true ? 'multiple' : 'single'}`),\n      inputRef,\n      targetRef,\n      hasValue,\n      showPopup,\n      floatingLabel: computed(() => (props.hideSelected === true ? inputValue.value.length > 0 : hasValue.value === true) || fieldValueIsFilled(props.displayValue)),\n      getControlChild: () => {\n        if (state.editable.value !== false && (dialog.value === true // dialog always has menu displayed, so need to render it\n        || noOptions.value !== true || slots['no-option'] !== void 0)) {\n          return hasDialog === true ? getDialog() : getMenu();\n        } else if (state.hasPopupOpen === true) {\n          // explicitly set it otherwise TAB will not blur component\n          state.hasPopupOpen = false;\n        }\n      },\n      controlEvents: {\n        onFocusin(e) {\n          state.onControlFocusin(e);\n        },\n\n        onFocusout(e) {\n          state.onControlFocusout(e, () => {\n            resetInputValue();\n            closeMenu();\n          });\n        },\n\n        onClick(e) {\n          // label from QField will propagate click on the input\n          prevent(e);\n\n          if (hasDialog !== true && menu.value === true) {\n            closeMenu();\n            targetRef.value !== null && targetRef.value.focus();\n            return;\n          }\n\n          showPopup(e);\n        }\n\n      },\n      getControl: fromDialog => {\n        const child = getSelection();\n        const isTarget = fromDialog === true || dialog.value !== true || hasDialog !== true;\n\n        if (props.useInput === true) {\n          child.push(getInput(fromDialog, isTarget));\n        } // there can be only one (when dialog is opened the control in dialog should be target)\n        else if (state.editable.value === true) {\n          const attrs = isTarget === true ? comboboxAttrs.value : void 0;\n          child.push(h('input', {\n            ref: isTarget === true ? targetRef : void 0,\n            key: 'd_t',\n            class: 'q-select__focus-target',\n            id: isTarget === true ? state.targetUid.value : void 0,\n            readonly: true,\n            ...attrs,\n            onKeydown: onTargetKeydown,\n            onKeyup: onTargetKeyup,\n            onKeypress: onTargetKeypress\n          }));\n\n          if (isTarget === true && typeof props.autocomplete === 'string' && props.autocomplete.length > 0) {\n            child.push(h('input', {\n              class: 'q-select__autocomplete-input',\n              autocomplete: props.autocomplete,\n              onKeyup: onTargetAutocomplete\n            }));\n          }\n        }\n\n        if (nameProp.value !== void 0 && props.disable !== true && innerOptionsValue.value.length > 0) {\n          const opts = innerOptionsValue.value.map(value => h('option', {\n            value,\n            selected: true\n          }));\n          child.push(h('select', {\n            class: 'hidden',\n            name: nameProp.value,\n            multiple: props.multiple\n          }, opts));\n        }\n\n        const attrs = props.useInput === true || isTarget !== true ? void 0 : state.splitAttrs.attributes.value;\n        return h('div', {\n          class: 'q-field__native row items-center',\n          ...attrs\n        }, child);\n      },\n      getInnerAppend: () => props.loading !== true && innerLoadingIndicator.value !== true && props.hideDropdownIcon !== true ? [h(QIcon, {\n        class: 'q-select__dropdown-icon' + (menu.value === true ? ' rotate-180' : ''),\n        name: dropdownArrowIcon.value\n      })] : null\n    });\n    return useField(state);\n  }\n\n});","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/components/select/QSelect.js"],"names":["h","ref","computed","watch","onBeforeUpdate","onUpdated","onBeforeUnmount","nextTick","getCurrentInstance","QField","QIcon","QChip","QItem","QItemSection","QItemLabel","QMenu","QDialog","useField","useFieldState","useFieldProps","useFieldEmits","fieldValueIsFilled","useVirtualScroll","useVirtualScrollProps","useFormProps","useFormInputNameAttr","useKeyComposition","createComponent","isDeepEqual","stop","prevent","stopAndPrevent","normalizeToInterval","shouldIgnoreKey","isKeyCode","hMergeSlot","validateNewValueMode","v","includes","reEscapeList","fieldPropsList","Object","keys","name","inheritAttrs","props","modelValue","required","multiple","Boolean","displayValue","String","Number","displayValueHtml","dropdownIcon","options","type","Array","default","optionValue","Function","optionLabel","optionDisable","hideSelected","hideDropdownIcon","fillInput","maxValues","optionsDense","optionsDark","optionsSelectedClass","optionsHtml","optionsCover","menuShrink","menuAnchor","menuSelf","menuOffset","popupContentClass","popupContentStyle","useInput","useChips","newValueMode","validator","mapOptions","emitValue","inputDebounce","inputClass","inputStyle","tabindex","autocomplete","transitionShow","transitionHide","transitionDuration","behavior","virtualScrollItemSize","onNewValue","onFilter","emits","setup","slots","emit","proxy","$q","menu","dialog","optionIndex","inputValue","dialogFieldFocused","innerLoadingIndicator","inputTimer","innerValueCache","hasDialog","userInputValue","filterId","defaultInputValue","transitionShowComputed","searchBuffer","searchBufferExp","inputRef","targetRef","menuRef","dialogRef","menuContentRef","nameProp","onComposition","onInput","virtualScrollLength","isArray","length","virtualScrollItemSizeComputed","dense","virtualScrollSliceRange","virtualScrollSliceSizeComputed","localResetVirtualScroll","padVirtualScroll","onVirtualScrollEvt","reset","scrollTo","setVirtualScrollSize","getVirtualScrollTarget","getVirtualScrollEl","state","innerValue","mapNull","val","cache","values","map","getOption","filter","innerFieldProps","acc","forEach","key","isOptionsDark","isDark","value","hasValue","computedInputClass","cls","menuContentClass","virtualScrollHorizontal","noOptions","selectedString","opt","getOptionLabel","join","needsHtmlFn","html","valueAsHtml","some","focused","comboboxAttrs","role","label","targetUid","listboxAttrs","attrs","id","selectedScope","i","index","selected","removeAtIndex","removeAtIndexAndFocus","toggleOption","optionScope","from","to","slice","disable","isOptionDisabled","itemProps","clickable","active","activeClass","computedOptionsSelectedClass","manualFocus","dark","onClick","isOptionSelected","platform","is","desktop","onMousemove","setOptionIndex","dropdownArrowIcon","iconSet","arrow","dropdown","squaredMenu","outlined","standout","borderless","rounded","color","getOptionValue","getPropValueFn","innerOptionsValue","inputControlEvents","evt","onChange","onKeydown","onTargetKeydown","onKeyup","onTargetAutocomplete","onKeypress","onTargetKeypress","onFocus","selectInputText","e","onCompositionstart","onCompositionupdate","onCompositionend","innerLoading","resetInputValue","immediate","updateMenu","rerenderMenu","getEmittingOptionValue","model","splice","focus","add","unique","updateInputValue","push","keepOpen","editable","optValue","hidePopup","findIndex","moveOptionSelection","offset","skipInputValue","setInputValue","valueCache","fn","find","propValue","defaultVal","target","select","onTargetKeyup","keyCode","clearTimeout","needle","toLocaleLowerCase","findFn","extractFn","option","indexOf","fillFn","afterFilter","clearValue","newValueModeValid","tabShouldSelect","shiftKey","closeMenu","showPopup","Math","max","min","view","optionsLength","Date","now","altKey","ctrlKey","char","keyRepeat","searchRe","RegExp","split","l","test","done","mode","__qPortalInnerRef","getSelection","scope","concat","removable","textColor","onRemove","class","getAllOptions","getInput","fromDialog","isTarget","splitAttrs","attributes","data","style","maxlength","autofocus","disabled","readonly","composing","setTimeout","noFiltering","internal","keepClosed","afterUpdateFn","localFilterId","afterFn","getMenu","fit","cover","anchor","self","noParentEvent","noRefocus","noFocus","square","separateClosePopup","onScrollPassive","onBeforeShow","onControlPopupShow","onBeforeHide","onMenuBeforeHide","onShow","onMenuShow","onControlPopupHide","onDialogFieldFocus","window","pageXOffset","scrollX","document","body","scrollLeft","onDialogFieldBlur","getDialog","content","fieldClass","for","loading","itemAligned","filled","stackLabel","listeners","onBlur","rawControl","getControl","before","after","position","onDialogBeforeHide","onHide","onDialogHide","onDialogShow","__updateRefocusTarget","rootRef","querySelector","el","activeElement","onControlFocusin","show","updateMenuPosition","updatePosition","hasPopupOpen","onControlFocusout","updatePreState","mobile","ios","assign","getOptionIndex","args","apply","floatingLabel","getControlChild","controlEvents","onFocusin","onFocusout","child","opts","getInnerAppend"],"mappings":"AAAA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,cAAlC,EAAkDC,SAAlD,EAA6DC,eAA7D,EAA8EC,QAA9E,EAAwFC,kBAAxF,QAAkH,KAAlH;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,QAAP,IAAmBC,aAAnB,EAAkCC,aAAlC,EAAiDC,aAAjD,EAAgEC,kBAAhE,QAA0F,wCAA1F;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,yCAAxD;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,uCAAnD;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,QAA8C,sBAA9C;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,wCAA3C;AACA,SAASC,UAAT,QAA2B,+BAA3B;;AAEA,MAAMC,oBAAoB,GAAGC,CAAC,IAAI,CAAE,KAAF,EAAS,YAAT,EAAuB,QAAvB,EAAkCC,QAAlC,CAA2CD,CAA3C,CAAlC;;AACA,MAAME,YAAY,GAAG,iBAArB;AACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYvB,aAAZ,CAAvB;AAEA,eAAeQ,eAAe,CAAC;AAC7BgB,EAAAA,IAAI,EAAE,SADuB;AAG7BC,EAAAA,YAAY,EAAE,KAHe;AAK7BC,EAAAA,KAAK,EAAE,EACL,GAAGtB,qBADE;AAEL,OAAGC,YAFE;AAGL,OAAGL,aAHE;AAKL2B,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA,KALP;AASLC,IAAAA,QAAQ,EAAEC,OATL;AAWLC,IAAAA,YAAY,EAAE,CAAEC,MAAF,EAAUC,MAAV,CAXT;AAYLC,IAAAA,gBAAgB,EAAEJ,OAZb;AAaLK,IAAAA,YAAY,EAAEH,MAbT;AAeLI,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEC,KADC;AAEPC,MAAAA,OAAO,EAAE,MAAM;AAFR,KAfJ;AAoBLC,IAAAA,WAAW,EAAE,CAAEC,QAAF,EAAYT,MAAZ,CApBR;AAqBLU,IAAAA,WAAW,EAAE,CAAED,QAAF,EAAYT,MAAZ,CArBR;AAsBLW,IAAAA,aAAa,EAAE,CAAEF,QAAF,EAAYT,MAAZ,CAtBV;AAwBLY,IAAAA,YAAY,EAAEd,OAxBT;AAyBLe,IAAAA,gBAAgB,EAAEf,OAzBb;AA0BLgB,IAAAA,SAAS,EAAEhB,OA1BN;AA4BLiB,IAAAA,SAAS,EAAE,CAAEd,MAAF,EAAUD,MAAV,CA5BN;AA8BLgB,IAAAA,YAAY,EAAElB,OA9BT;AA+BLmB,IAAAA,WAAW,EAAE;AACXZ,MAAAA,IAAI,EAAEP,OADK;AAEXS,MAAAA,OAAO,EAAE;AAFE,KA/BR;AAmCLW,IAAAA,oBAAoB,EAAElB,MAnCjB;AAoCLmB,IAAAA,WAAW,EAAErB,OApCR;AAsCLsB,IAAAA,YAAY,EAAEtB,OAtCT;AAwCLuB,IAAAA,UAAU,EAAEvB,OAxCP;AAyCLwB,IAAAA,UAAU,EAAEtB,MAzCP;AA0CLuB,IAAAA,QAAQ,EAAEvB,MA1CL;AA2CLwB,IAAAA,UAAU,EAAElB,KA3CP;AA6CLmB,IAAAA,iBAAiB,EAAEzB,MA7Cd;AA8CL0B,IAAAA,iBAAiB,EAAE,CAAE1B,MAAF,EAAUM,KAAV,EAAiBhB,MAAjB,CA9Cd;AAgDLqC,IAAAA,QAAQ,EAAE7B,OAhDL;AAiDL8B,IAAAA,QAAQ,EAAE9B,OAjDL;AAmDL+B,IAAAA,YAAY,EAAE;AACZxB,MAAAA,IAAI,EAAEL,MADM;AAEZ8B,MAAAA,SAAS,EAAE7C;AAFC,KAnDT;AAwDL8C,IAAAA,UAAU,EAAEjC,OAxDP;AAyDLkC,IAAAA,SAAS,EAAElC,OAzDN;AA2DLmC,IAAAA,aAAa,EAAE;AACb5B,MAAAA,IAAI,EAAE,CAAEJ,MAAF,EAAUD,MAAV,CADO;AAEbO,MAAAA,OAAO,EAAE;AAFI,KA3DV;AAgEL2B,IAAAA,UAAU,EAAE,CAAE5B,KAAF,EAASN,MAAT,EAAiBV,MAAjB,CAhEP;AAiEL6C,IAAAA,UAAU,EAAE,CAAE7B,KAAF,EAASN,MAAT,EAAiBV,MAAjB,CAjEP;AAmEL8C,IAAAA,QAAQ,EAAE;AACR/B,MAAAA,IAAI,EAAE,CAAEL,MAAF,EAAUC,MAAV,CADE;AAERM,MAAAA,OAAO,EAAE;AAFD,KAnEL;AAwEL8B,IAAAA,YAAY,EAAErC,MAxET;AA0ELsC,IAAAA,cAAc,EAAEtC,MA1EX;AA2ELuC,IAAAA,cAAc,EAAEvC,MA3EX;AA4ELwC,IAAAA,kBAAkB,EAAE,CAAExC,MAAF,EAAUC,MAAV,CA5Ef;AA8ELwC,IAAAA,QAAQ,EAAE;AACRpC,MAAAA,IAAI,EAAEL,MADE;AAER8B,MAAAA,SAAS,EAAE5C,CAAC,IAAI,CAAE,SAAF,EAAa,MAAb,EAAqB,QAArB,EAAgCC,QAAhC,CAAyCD,CAAzC,CAFR;AAGRqB,MAAAA,OAAO,EAAE;AAHD,KA9EL;AAoFLmC,IAAAA,qBAAqB,EAAE;AACrBrC,MAAAA,IAAI,EAAE,CAAEJ,MAAF,EAAUD,MAAV,CADe;AAErBO,MAAAA,OAAO,EAAE,KAAK;AAFO,KApFlB;AAyFLoC,IAAAA,UAAU,EAAElC,QAzFP;AA0FLmC,IAAAA,QAAQ,EAAEnC;AA1FL,GALsB;AAkG7BoC,EAAAA,KAAK,EAAE,CACL,GAAG5E,aADE,EAEL,KAFK,EAEE,QAFF,EAEY,aAFZ,EAGL,OAHK,EAGI,UAHJ,EAGgB,SAHhB,EAIL,cAJK,CAlGsB;;AAyG7B6E,EAAAA,KAAK,CAAEpD,KAAF,EAAS;AAAEqD,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAT,EAA0B;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAY5F,kBAAkB,EAApC;AACA,UAAM;AAAE6F,MAAAA;AAAF,QAASD,KAAf;AAEA,UAAME,IAAI,GAAGrG,GAAG,CAAC,KAAD,CAAhB;AACA,UAAMsG,MAAM,GAAGtG,GAAG,CAAC,KAAD,CAAlB;AACA,UAAMuG,WAAW,GAAGvG,GAAG,CAAC,CAAC,CAAF,CAAvB;AACA,UAAMwG,UAAU,GAAGxG,GAAG,CAAC,EAAD,CAAtB;AACA,UAAMyG,kBAAkB,GAAGzG,GAAG,CAAC,KAAD,CAA9B;AACA,UAAM0G,qBAAqB,GAAG1G,GAAG,CAAC,KAAD,CAAjC;AAEA,QAAI2G,UAAJ,EAAgBC,eAAhB,EACEC,SADF,EACaC,cADb,EAC6BC,QAD7B,EACuCC,iBADvC,EAEEC,sBAFF,EAE0BC,YAF1B,EAEwCC,eAFxC;AAIA,UAAMC,QAAQ,GAAGpH,GAAG,CAAC,IAAD,CAApB;AACA,UAAMqH,SAAS,GAAGrH,GAAG,CAAC,IAAD,CAArB;AACA,UAAMsH,OAAO,GAAGtH,GAAG,CAAC,IAAD,CAAnB;AACA,UAAMuH,SAAS,GAAGvH,GAAG,CAAC,IAAD,CAArB;AACA,UAAMwH,cAAc,GAAGxH,GAAG,CAAC,IAAD,CAA1B;AAEA,UAAMyH,QAAQ,GAAGjG,oBAAoB,CAACoB,KAAD,CAArC;AAEA,UAAM8E,aAAa,GAAGjG,iBAAiB,CAACkG,OAAD,CAAvC;AAEA,UAAMC,mBAAmB,GAAG3H,QAAQ,CAAC,MACnCuD,KAAK,CAACqE,OAAN,CAAcjF,KAAK,CAACU,OAApB,IACIV,KAAK,CAACU,OAAN,CAAcwE,MADlB,GAEI,CAH8B,CAApC;AAMA,UAAMC,6BAA6B,GAAG9H,QAAQ,CAAC,MAC7C2C,KAAK,CAACgD,qBAAN,KAAgC,KAAK,CAArC,GACKhD,KAAK,CAACoF,KAAN,KAAgB,IAAhB,GAAuB,EAAvB,GAA4B,EADjC,GAEIpF,KAAK,CAACgD,qBAHkC,CAA9C;AAMA,UAAM;AACJqC,MAAAA,uBADI;AAEJC,MAAAA,8BAFI;AAGJC,MAAAA,uBAHI;AAIJC,MAAAA,gBAJI;AAKJC,MAAAA,kBALI;AAMJC,MAAAA,KANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA;AARI,QASFnH,gBAAgB,CAAC;AACnBuG,MAAAA,mBADmB;AACEa,MAAAA,sBADF;AAC0BC,MAAAA,kBAD1B;AAEnBX,MAAAA;AAFmB,KAAD,CATpB;AAcA,UAAMY,KAAK,GAAG1H,aAAa,EAA3B;AAEA,UAAM2H,UAAU,GAAG3I,QAAQ,CAAC,MAAM;AAChC,YACE4I,OAAO,GAAGjG,KAAK,CAACqC,UAAN,KAAqB,IAArB,IAA6BrC,KAAK,CAACG,QAAN,KAAmB,IAD5D;AAAA,YAEE+F,GAAG,GAAGlG,KAAK,CAACC,UAAN,KAAqB,KAAK,CAA1B,KAAgCD,KAAK,CAACC,UAAN,KAAqB,IAArB,IAA6BgG,OAAO,KAAK,IAAzE,IACDjG,KAAK,CAACG,QAAN,KAAmB,IAAnB,IAA2BS,KAAK,CAACqE,OAAN,CAAcjF,KAAK,CAACC,UAApB,CAA3B,GAA6DD,KAAK,CAACC,UAAnE,GAAgF,CAAED,KAAK,CAACC,UAAR,CAD/E,GAEF,EAJN;;AAMA,UAAID,KAAK,CAACqC,UAAN,KAAqB,IAArB,IAA6BzB,KAAK,CAACqE,OAAN,CAAcjF,KAAK,CAACU,OAApB,MAAiC,IAAlE,EAAwE;AACtE,cAAMyF,KAAK,GAAGnG,KAAK,CAACqC,UAAN,KAAqB,IAArB,IAA6B2B,eAAe,KAAK,KAAK,CAAtD,GACVA,eADU,GAEV,EAFJ;AAGA,cAAMoC,MAAM,GAAGF,GAAG,CAACG,GAAJ,CAAQ7G,CAAC,IAAI8G,SAAS,CAAC9G,CAAD,EAAI2G,KAAJ,CAAtB,CAAf;AAEA,eAAOnG,KAAK,CAACC,UAAN,KAAqB,IAArB,IAA6BgG,OAAO,KAAK,IAAzC,GACHG,MAAM,CAACG,MAAP,CAAc/G,CAAC,IAAIA,CAAC,KAAK,IAAzB,CADG,GAEH4G,MAFJ;AAGD;;AAED,aAAOF,GAAP;AACD,KAnB0B,CAA3B;AAqBA,UAAMM,eAAe,GAAGnJ,QAAQ,CAAC,MAAM;AACrC,YAAMoJ,GAAG,GAAG,EAAZ;AACA9G,MAAAA,cAAc,CAAC+G,OAAf,CAAuBC,GAAG,IAAI;AAC5B,cAAMT,GAAG,GAAGlG,KAAK,CAAE2G,GAAF,CAAjB;;AACA,YAAIT,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBO,UAAAA,GAAG,CAAEE,GAAF,CAAH,GAAaT,GAAb;AACD;AACF,OALD;AAMA,aAAOO,GAAP;AACD,KAT+B,CAAhC;AAWA,UAAMG,aAAa,GAAGvJ,QAAQ,CAAC,MAC7B2C,KAAK,CAACuB,WAAN,KAAsB,IAAtB,GACIwE,KAAK,CAACc,MAAN,CAAaC,KADjB,GAEI9G,KAAK,CAACuB,WAHkB,CAA9B;AAMA,UAAMwF,QAAQ,GAAG1J,QAAQ,CAAC,MAAMmB,kBAAkB,CAACwH,UAAU,CAACc,KAAZ,CAAzB,CAAzB;AAEA,UAAME,kBAAkB,GAAG3J,QAAQ,CAAC,MAAM;AACxC,UAAI4J,GAAG,GAAG,kCAAV;;AAEA,UAAIjH,KAAK,CAACkB,YAAN,KAAuB,IAAvB,IAA+B8E,UAAU,CAACc,KAAX,CAAiB5B,MAAjB,KAA4B,CAA/D,EAAkE;AAChE,eAAO,CAAE+B,GAAF,EAAOjH,KAAK,CAACwC,UAAb,CAAP;AACD;;AAEDyE,MAAAA,GAAG,IAAI,0BAAP;AAEA,aAAOjH,KAAK,CAACwC,UAAN,KAAqB,KAAK,CAA1B,GACHyE,GADG,GAEH,CAAEA,GAAF,EAAOjH,KAAK,CAACwC,UAAb,CAFJ;AAGD,KAZkC,CAAnC;AAcA,UAAM0E,gBAAgB,GAAG7J,QAAQ,CAAC,MAChC,CAAC2C,KAAK,CAACmH,uBAAN,KAAkC,IAAlC,GAAyC,8BAAzC,GAA0E,EAA3E,KACGnH,KAAK,CAAC+B,iBAAN,GAA0B,MAAM/B,KAAK,CAAC+B,iBAAtC,GAA0D,EAD7D,CAD+B,CAAjC;AAKA,UAAMqF,SAAS,GAAG/J,QAAQ,CAAC,MAAM2H,mBAAmB,CAAC8B,KAApB,KAA8B,CAArC,CAA1B;AAEA,UAAMO,cAAc,GAAGhK,QAAQ,CAAC,MAC9B2I,UAAU,CAACc,KAAX,CACGT,GADH,CACOiB,GAAG,IAAIC,cAAc,CAACT,KAAf,CAAqBQ,GAArB,CADd,EAEGE,IAFH,CAEQ,IAFR,CAD6B,CAA/B;AAMA,UAAMC,WAAW,GAAGpK,QAAQ,CAAC,MAC3B2C,KAAK,CAACyB,WAAN,KAAsB,IAAtB,GACI,MAAM,IADV,GAEI6F,GAAG,IAAIA,GAAG,KAAK,KAAK,CAAb,IAAkBA,GAAG,KAAK,IAA1B,IAAkCA,GAAG,CAACI,IAAJ,KAAa,IAHhC,CAA5B;AAMA,UAAMC,WAAW,GAAGtK,QAAQ,CAAC,MAC3B2C,KAAK,CAACQ,gBAAN,KAA2B,IAA3B,IACER,KAAK,CAACK,YAAN,KAAuB,KAAK,CAA5B,KACEL,KAAK,CAACyB,WAAN,KAAsB,IAAtB,IACGuE,UAAU,CAACc,KAAX,CAAiBc,IAAjB,CAAsBH,WAAW,CAACX,KAAlC,CAFL,CAFwB,CAA5B;AASA,UAAMpE,QAAQ,GAAGrF,QAAQ,CAAC,MAAO0I,KAAK,CAAC8B,OAAN,CAAcf,KAAd,KAAwB,IAAxB,GAA+B9G,KAAK,CAAC0C,QAArC,GAAgD,CAAC,CAAzD,CAAzB;AAEA,UAAMoF,aAAa,GAAGzK,QAAQ,CAAC,OAAO;AACpCqF,MAAAA,QAAQ,EAAE1C,KAAK,CAAC0C,QADoB;AAEpCqF,MAAAA,IAAI,EAAE,UAF8B;AAGpC,oBAAc/H,KAAK,CAACgI,KAHgB;AAIpC,2BAAqBhI,KAAK,CAACiC,QAAN,KAAmB,IAAnB,GAA0B,MAA1B,GAAmC,MAJpB;AAKpC,uBAAiBwB,IAAI,CAACqD,KAAL,KAAe,IAAf,GAAsB,MAAtB,GAA+B,OALZ;AAMpC,mBAAc,GAAGf,KAAK,CAACkC,SAAN,CAAgBnB,KAAO,KANJ;AAOpC,uBAAkB,GAAGf,KAAK,CAACkC,SAAN,CAAgBnB,KAAO;AAPR,KAAP,CAAD,CAA9B;AAUA,UAAMoB,YAAY,GAAG7K,QAAQ,CAAC,MAAM;AAClC,YAAM8K,KAAK,GAAG;AACZC,QAAAA,EAAE,EAAG,GAAGrC,KAAK,CAACkC,SAAN,CAAgBnB,KAAO,KADnB;AAEZiB,QAAAA,IAAI,EAAE,SAFM;AAGZ,gCAAwB/H,KAAK,CAACG,QAAN,KAAmB,IAAnB,GAA0B,MAA1B,GAAmC;AAH/C,OAAd;;AAMA,UAAIwD,WAAW,CAACmD,KAAZ,IAAqB,CAAzB,EAA4B;AAC1BqB,QAAAA,KAAK,CAAE,uBAAF,CAAL,GAAoC,GAAGpC,KAAK,CAACkC,SAAN,CAAgBnB,KAAO,IAAInD,WAAW,CAACmD,KAAO,EAArF;AACD;;AAED,aAAOqB,KAAP;AACD,KAZ4B,CAA7B;AAcA,UAAME,aAAa,GAAGhL,QAAQ,CAAC,MAAM;AACnC,aAAO2I,UAAU,CAACc,KAAX,CAAiBT,GAAjB,CAAqB,CAACiB,GAAD,EAAMgB,CAAN,MAAa;AACvCC,QAAAA,KAAK,EAAED,CADgC;AAEvChB,QAAAA,GAFuC;AAGvCI,QAAAA,IAAI,EAAED,WAAW,CAACX,KAAZ,CAAkBQ,GAAlB,CAHiC;AAIvCkB,QAAAA,QAAQ,EAAE,IAJ6B;AAKvCC,QAAAA,aAAa,EAAEC,qBALwB;AAMvCC,QAAAA,YANuC;AAOvCjG,QAAAA,QAAQ,EAAEA,QAAQ,CAACoE;AAPoB,OAAb,CAArB,CAAP;AASD,KAV6B,CAA9B;AAYA,UAAM8B,WAAW,GAAGvL,QAAQ,CAAC,MAAM;AACjC,UAAI2H,mBAAmB,CAAC8B,KAApB,KAA8B,CAAlC,EAAqC;AACnC,eAAO,EAAP;AACD;;AAED,YAAM;AAAE+B,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAezD,uBAAuB,CAACyB,KAA7C;AAEA,aAAO9G,KAAK,CAACU,OAAN,CAAcqI,KAAd,CAAoBF,IAApB,EAA0BC,EAA1B,EAA8BzC,GAA9B,CAAkC,CAACiB,GAAD,EAAMgB,CAAN,KAAY;AACnD,cAAMU,OAAO,GAAGC,gBAAgB,CAACnC,KAAjB,CAAuBQ,GAAvB,MAAgC,IAAhD;AACA,cAAMiB,KAAK,GAAGM,IAAI,GAAGP,CAArB;AAEA,cAAMY,SAAS,GAAG;AAChBC,UAAAA,SAAS,EAAE,IADK;AAEhBC,UAAAA,MAAM,EAAE,KAFQ;AAGhBC,UAAAA,WAAW,EAAEC,4BAA4B,CAACxC,KAH1B;AAIhByC,UAAAA,WAAW,EAAE,IAJG;AAKhB1B,UAAAA,OAAO,EAAE,KALO;AAMhBmB,UAAAA,OANgB;AAOhBtG,UAAAA,QAAQ,EAAE,CAAC,CAPK;AAQhB0C,UAAAA,KAAK,EAAEpF,KAAK,CAACsB,YARG;AAShBkI,UAAAA,IAAI,EAAE5C,aAAa,CAACE,KATJ;AAUhBiB,UAAAA,IAAI,EAAE,QAVU;AAWhBK,UAAAA,EAAE,EAAG,GAAGrC,KAAK,CAACkC,SAAN,CAAgBnB,KAAO,IAAIyB,KAAO,EAX1B;AAYhBkB,UAAAA,OAAO,EAAE,MAAM;AAAEd,YAAAA,YAAY,CAACrB,GAAD,CAAZ;AAAmB;AAZpB,SAAlB;;AAeA,YAAI0B,OAAO,KAAK,IAAhB,EAAsB;AACpBU,UAAAA,gBAAgB,CAACpC,GAAD,CAAhB,KAA0B,IAA1B,KAAmC4B,SAAS,CAACE,MAAV,GAAmB,IAAtD;AACAzF,UAAAA,WAAW,CAACmD,KAAZ,KAAsByB,KAAtB,KAAgCW,SAAS,CAACrB,OAAV,GAAoB,IAApD;AAEAqB,UAAAA,SAAS,CAAE,eAAF,CAAT,GAA+BA,SAAS,CAACE,MAAV,KAAqB,IAArB,GAA4B,MAA5B,GAAqC,OAApE;;AAEA,cAAI5F,EAAE,CAACmG,QAAH,CAAYC,EAAZ,CAAeC,OAAf,KAA2B,IAA/B,EAAqC;AACnCX,YAAAA,SAAS,CAACY,WAAV,GAAwB,MAAM;AAAErG,cAAAA,IAAI,CAACqD,KAAL,KAAe,IAAf,IAAuBiD,cAAc,CAACxB,KAAD,CAArC;AAA8C,aAA9E;AACD;AACF;;AAED,eAAO;AACLA,UAAAA,KADK;AAELjB,UAAAA,GAFK;AAGLI,UAAAA,IAAI,EAAED,WAAW,CAACX,KAAZ,CAAkBQ,GAAlB,CAHD;AAILU,UAAAA,KAAK,EAAET,cAAc,CAACT,KAAf,CAAqBQ,GAArB,CAJF;AAKLkB,UAAAA,QAAQ,EAAEU,SAAS,CAACE,MALf;AAMLvB,UAAAA,OAAO,EAAEqB,SAAS,CAACrB,OANd;AAOLc,UAAAA,YAPK;AAQLoB,UAAAA,cARK;AASLb,UAAAA;AATK,SAAP;AAWD,OAzCM,CAAP;AA0CD,KAjD2B,CAA5B;AAmDA,UAAMc,iBAAiB,GAAG3M,QAAQ,CAAC,MACjC2C,KAAK,CAACS,YAAN,KAAuB,KAAK,CAA5B,GACIT,KAAK,CAACS,YADV,GAEI+C,EAAE,CAACyG,OAAH,CAAWC,KAAX,CAAiBC,QAHW,CAAlC;AAMA,UAAMC,WAAW,GAAG/M,QAAQ,CAAC,MAC3B2C,KAAK,CAAC0B,YAAN,KAAuB,KAAvB,IACG1B,KAAK,CAACqK,QAAN,KAAmB,IADtB,IAEGrK,KAAK,CAACsK,QAAN,KAAmB,IAFtB,IAGGtK,KAAK,CAACuK,UAAN,KAAqB,IAHxB,IAIGvK,KAAK,CAACwK,OAAN,KAAkB,IALK,CAA5B;AAQA,UAAMlB,4BAA4B,GAAGjM,QAAQ,CAAC,MAC5C2C,KAAK,CAACwB,oBAAN,KAA+B,KAAK,CAApC,GACIxB,KAAK,CAACwB,oBADV,GAEKxB,KAAK,CAACyK,KAAN,KAAgB,KAAK,CAArB,GAA0B,QAAQzK,KAAK,CAACyK,KAAO,EAA/C,GAAmD,EAHb,CAA7C,CA9O6B,CAoP7B;AACA;;AACA,UAAMC,cAAc,GAAGrN,QAAQ,CAAC,MAAMsN,cAAc,CAAC3K,KAAK,CAACc,WAAP,EAAoB,OAApB,CAArB,CAA/B,CAtP6B,CAwP7B;AACA;;AACA,UAAMyG,cAAc,GAAGlK,QAAQ,CAAC,MAAMsN,cAAc,CAAC3K,KAAK,CAACgB,WAAP,EAAoB,OAApB,CAArB,CAA/B,CA1P6B,CA4P7B;AACA;;AACA,UAAMiI,gBAAgB,GAAG5L,QAAQ,CAAC,MAAMsN,cAAc,CAAC3K,KAAK,CAACiB,aAAP,EAAsB,SAAtB,CAArB,CAAjC;AAEA,UAAM2J,iBAAiB,GAAGvN,QAAQ,CAAC,MAAM2I,UAAU,CAACc,KAAX,CAAiBT,GAAjB,CAAqBiB,GAAG,IAAIoD,cAAc,CAAC5D,KAAf,CAAqBQ,GAArB,CAA5B,CAAP,CAAlC;AAEA,UAAMuD,kBAAkB,GAAGxN,QAAQ,CAAC,MAAM;AACxC,YAAMyN,GAAG,GAAG;AACV/F,QAAAA,OADU;AAEV;AACA;AACA;AACA;AACAgG,QAAAA,QAAQ,EAAEjG,aANA;AAOVkG,QAAAA,SAAS,EAAEC,eAPD;AAQVC,QAAAA,OAAO,EAAEC,oBARC;AASVC,QAAAA,UAAU,EAAEC,gBATF;AAUVC,QAAAA,OAAO,EAAEC,eAVC;;AAWV9B,QAAAA,OAAO,CAAE+B,CAAF,EAAK;AAAEvH,UAAAA,SAAS,KAAK,IAAd,IAAsBjF,IAAI,CAACwM,CAAD,CAA1B;AAA+B;;AAXnC,OAAZ;AAcAV,MAAAA,GAAG,CAACW,kBAAJ,GAAyBX,GAAG,CAACY,mBAAJ,GAA0BZ,GAAG,CAACa,gBAAJ,GAAuB7G,aAA1E;AAEA,aAAOgG,GAAP;AACD,KAlBkC,CAAnC;AAoBAxN,IAAAA,KAAK,CAAC0I,UAAD,EAAaE,GAAG,IAAI;AACvBlC,MAAAA,eAAe,GAAGkC,GAAlB;;AAEA,UACElG,KAAK,CAACiC,QAAN,KAAmB,IAAnB,IACGjC,KAAK,CAACoB,SAAN,KAAoB,IADvB,IAEGpB,KAAK,CAACG,QAAN,KAAmB,IAFtB,CAGA;AACA;AAJA,SAKG4F,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,KAA6B,IALhC,KAMKpD,MAAM,CAACoD,KAAP,KAAiB,IAAjB,IAAyBrD,IAAI,CAACqD,KAAL,KAAe,IAAzC,IAAkDC,QAAQ,CAACD,KAAT,KAAmB,IANzE,CADF,EAQE;AACA5C,QAAAA,cAAc,KAAK,IAAnB,IAA2B2H,eAAe,EAA1C;;AACA,YAAInI,MAAM,CAACoD,KAAP,KAAiB,IAAjB,IAAyBrD,IAAI,CAACqD,KAAL,KAAe,IAA5C,EAAkD;AAChDP,UAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF;AACF,KAjBI,EAiBF;AAAEuF,MAAAA,SAAS,EAAE;AAAb,KAjBE,CAAL;AAmBAxO,IAAAA,KAAK,CAAC,MAAM0C,KAAK,CAACoB,SAAb,EAAwByK,eAAxB,CAAL;AAEAvO,IAAAA,KAAK,CAACmG,IAAD,EAAOsI,UAAP,CAAL;AAEAzO,IAAAA,KAAK,CAAC0H,mBAAD,EAAsBgH,YAAtB,CAAL;;AAEA,aAASC,sBAAT,CAAiC3E,GAAjC,EAAsC;AACpC,aAAOtH,KAAK,CAACsC,SAAN,KAAoB,IAApB,GACHoI,cAAc,CAAC5D,KAAf,CAAqBQ,GAArB,CADG,GAEHA,GAFJ;AAGD;;AAED,aAASmB,aAAT,CAAwBF,KAAxB,EAA+B;AAC7B,UAAIA,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,GAAGvC,UAAU,CAACc,KAAX,CAAiB5B,MAA3C,EAAmD;AACjD,YAAIlF,KAAK,CAACG,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,gBAAM+L,KAAK,GAAGlM,KAAK,CAACC,UAAN,CAAiB8I,KAAjB,EAAd;AACAzF,UAAAA,IAAI,CAAC,QAAD,EAAW;AAAEiF,YAAAA,KAAF;AAASzB,YAAAA,KAAK,EAAEoF,KAAK,CAACC,MAAN,CAAa5D,KAAb,EAAoB,CAApB,EAAwB,CAAxB;AAAhB,WAAX,CAAJ;AACAjF,UAAAA,IAAI,CAAC,mBAAD,EAAsB4I,KAAtB,CAAJ;AACD,SAJD,MAKK;AACH5I,UAAAA,IAAI,CAAC,mBAAD,EAAsB,IAAtB,CAAJ;AACD;AACF;AACF;;AAED,aAASoF,qBAAT,CAAgCH,KAAhC,EAAuC;AACrCE,MAAAA,aAAa,CAACF,KAAD,CAAb;AACAxC,MAAAA,KAAK,CAACqG,KAAN;AACD;;AAED,aAASC,GAAT,CAAc/E,GAAd,EAAmBgF,MAAnB,EAA2B;AACzB,YAAMpG,GAAG,GAAG+F,sBAAsB,CAAC3E,GAAD,CAAlC;;AAEA,UAAItH,KAAK,CAACG,QAAN,KAAmB,IAAvB,EAA6B;AAC3BH,QAAAA,KAAK,CAACoB,SAAN,KAAoB,IAApB,IAA4BmL,gBAAgB,CAC1ChF,cAAc,CAACT,KAAf,CAAqBQ,GAArB,CAD0C,EAE1C,IAF0C,EAG1C,IAH0C,CAA5C;AAMAhE,QAAAA,IAAI,CAAC,mBAAD,EAAsB4C,GAAtB,CAAJ;AACA;AACD;;AAED,UAAIF,UAAU,CAACc,KAAX,CAAiB5B,MAAjB,KAA4B,CAAhC,EAAmC;AACjC5B,QAAAA,IAAI,CAAC,KAAD,EAAQ;AAAEiF,UAAAA,KAAK,EAAE,CAAT;AAAYzB,UAAAA,KAAK,EAAEZ;AAAnB,SAAR,CAAJ;AACA5C,QAAAA,IAAI,CAAC,mBAAD,EAAsBtD,KAAK,CAACG,QAAN,KAAmB,IAAnB,GAA0B,CAAE+F,GAAF,CAA1B,GAAoCA,GAA1D,CAAJ;AACA;AACD;;AAED,UAAIoG,MAAM,KAAK,IAAX,IAAmB5C,gBAAgB,CAACpC,GAAD,CAAhB,KAA0B,IAAjD,EAAuD;AACrD;AACD;;AAED,UAAItH,KAAK,CAACqB,SAAN,KAAoB,KAAK,CAAzB,IAA8BrB,KAAK,CAACC,UAAN,CAAiBiF,MAAjB,IAA2BlF,KAAK,CAACqB,SAAnE,EAA8E;AAC5E;AACD;;AAED,YAAM6K,KAAK,GAAGlM,KAAK,CAACC,UAAN,CAAiB8I,KAAjB,EAAd;AAEAzF,MAAAA,IAAI,CAAC,KAAD,EAAQ;AAAEiF,QAAAA,KAAK,EAAE2D,KAAK,CAAChH,MAAf;AAAuB4B,QAAAA,KAAK,EAAEZ;AAA9B,OAAR,CAAJ;AACAgG,MAAAA,KAAK,CAACM,IAAN,CAAWtG,GAAX;AACA5C,MAAAA,IAAI,CAAC,mBAAD,EAAsB4I,KAAtB,CAAJ;AACD;;AAED,aAASvD,YAAT,CAAuBrB,GAAvB,EAA4BmF,QAA5B,EAAsC;AACpC,UAAI1G,KAAK,CAAC2G,QAAN,CAAe5F,KAAf,KAAyB,IAAzB,IAAiCQ,GAAG,KAAK,KAAK,CAA9C,IAAmD2B,gBAAgB,CAACnC,KAAjB,CAAuBQ,GAAvB,MAAgC,IAAvF,EAA6F;AAC3F;AACD;;AAED,YAAMqF,QAAQ,GAAGjC,cAAc,CAAC5D,KAAf,CAAqBQ,GAArB,CAAjB;;AAEA,UAAItH,KAAK,CAACG,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,YAAIsM,QAAQ,KAAK,IAAjB,EAAuB;AACrBF,UAAAA,gBAAgB,CACdvM,KAAK,CAACoB,SAAN,KAAoB,IAApB,GAA2BmG,cAAc,CAACT,KAAf,CAAqBQ,GAArB,CAA3B,GAAuD,EADzC,EAEd,IAFc,EAGd,IAHc,CAAhB;AAMAsF,UAAAA,SAAS;AACV;;AAEDnI,QAAAA,SAAS,CAACqC,KAAV,KAAoB,IAApB,IAA4BrC,SAAS,CAACqC,KAAV,CAAgBsF,KAAhB,EAA5B;;AAEA,YACEpG,UAAU,CAACc,KAAX,CAAiB5B,MAAjB,KAA4B,CAA5B,IACGnG,WAAW,CAAC2L,cAAc,CAAC5D,KAAf,CAAqBd,UAAU,CAACc,KAAX,CAAkB,CAAlB,CAArB,CAAD,EAA8C6F,QAA9C,CAAX,KAAuE,IAF5E,EAGE;AACArJ,UAAAA,IAAI,CAAC,mBAAD,EAAsBtD,KAAK,CAACsC,SAAN,KAAoB,IAApB,GAA2BqK,QAA3B,GAAsCrF,GAA5D,CAAJ;AACD;;AACD;AACD;;AAED,OAACrD,SAAS,KAAK,IAAd,IAAsBJ,kBAAkB,CAACiD,KAAnB,KAA6B,IAApD,KAA6Df,KAAK,CAACqG,KAAN,EAA7D;AAEAb,MAAAA,eAAe;;AAEf,UAAIvF,UAAU,CAACc,KAAX,CAAiB5B,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,cAAMgB,GAAG,GAAGlG,KAAK,CAACsC,SAAN,KAAoB,IAApB,GAA2BqK,QAA3B,GAAsCrF,GAAlD;AACAhE,QAAAA,IAAI,CAAC,KAAD,EAAQ;AAAEiF,UAAAA,KAAK,EAAE,CAAT;AAAYzB,UAAAA,KAAK,EAAEZ;AAAnB,SAAR,CAAJ;AACA5C,QAAAA,IAAI,CAAC,mBAAD,EAAsBtD,KAAK,CAACG,QAAN,KAAmB,IAAnB,GAA0B,CAAE+F,GAAF,CAA1B,GAAoCA,GAA1D,CAAJ;AACA;AACD;;AAED,YACEgG,KAAK,GAAGlM,KAAK,CAACC,UAAN,CAAiB8I,KAAjB,EADV;AAAA,YAEER,KAAK,GAAGqC,iBAAiB,CAAC9D,KAAlB,CAAwB+F,SAAxB,CAAkCrN,CAAC,IAAIT,WAAW,CAACS,CAAD,EAAImN,QAAJ,CAAlD,CAFV;;AAIA,UAAIpE,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdjF,QAAAA,IAAI,CAAC,QAAD,EAAW;AAAEiF,UAAAA,KAAF;AAASzB,UAAAA,KAAK,EAAEoF,KAAK,CAACC,MAAN,CAAa5D,KAAb,EAAoB,CAApB,EAAwB,CAAxB;AAAhB,SAAX,CAAJ;AACD,OAFD,MAGK;AACH,YAAIvI,KAAK,CAACqB,SAAN,KAAoB,KAAK,CAAzB,IAA8B6K,KAAK,CAAChH,MAAN,IAAgBlF,KAAK,CAACqB,SAAxD,EAAmE;AACjE;AACD;;AAED,cAAM6E,GAAG,GAAGlG,KAAK,CAACsC,SAAN,KAAoB,IAApB,GAA2BqK,QAA3B,GAAsCrF,GAAlD;AAEAhE,QAAAA,IAAI,CAAC,KAAD,EAAQ;AAAEiF,UAAAA,KAAK,EAAE2D,KAAK,CAAChH,MAAf;AAAuB4B,UAAAA,KAAK,EAAEZ;AAA9B,SAAR,CAAJ;AACAgG,QAAAA,KAAK,CAACM,IAAN,CAAWtG,GAAX;AACD;;AAED5C,MAAAA,IAAI,CAAC,mBAAD,EAAsB4I,KAAtB,CAAJ;AACD;;AAED,aAASnC,cAAT,CAAyBxB,KAAzB,EAAgC;AAC9B,UAAI/E,EAAE,CAACmG,QAAH,CAAYC,EAAZ,CAAeC,OAAf,KAA2B,IAA/B,EAAqC;AAAE;AAAQ;;AAE/C,YAAM3D,GAAG,GAAGqC,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,GAAGvD,mBAAmB,CAAC8B,KAA1C,GACRyB,KADQ,GAER,CAAC,CAFL;;AAIA,UAAI5E,WAAW,CAACmD,KAAZ,KAAsBZ,GAA1B,EAA+B;AAC7BvC,QAAAA,WAAW,CAACmD,KAAZ,GAAoBZ,GAApB;AACD;AACF;;AAED,aAAS4G,mBAAT,CAA8BC,MAAM,GAAG,CAAvC,EAA0CC,cAA1C,EAA0D;AACxD,UAAIvJ,IAAI,CAACqD,KAAL,KAAe,IAAnB,EAAyB;AACvB,YAAIyB,KAAK,GAAG5E,WAAW,CAACmD,KAAxB;;AACA,WAAG;AACDyB,UAAAA,KAAK,GAAGpJ,mBAAmB,CACzBoJ,KAAK,GAAGwE,MADiB,EAEzB,CAAC,CAFwB,EAGzB/H,mBAAmB,CAAC8B,KAApB,GAA4B,CAHH,CAA3B;AAKD,SAND,QAOOyB,KAAK,KAAK,CAAC,CAAX,IAAgBA,KAAK,KAAK5E,WAAW,CAACmD,KAAtC,IAA+CmC,gBAAgB,CAACnC,KAAjB,CAAuB9G,KAAK,CAACU,OAAN,CAAe6H,KAAf,CAAvB,MAAmD,IAPzG;;AASA,YAAI5E,WAAW,CAACmD,KAAZ,KAAsByB,KAA1B,EAAiC;AAC/BwB,UAAAA,cAAc,CAACxB,KAAD,CAAd;AACA5C,UAAAA,QAAQ,CAAC4C,KAAD,CAAR;;AAEA,cAAIyE,cAAc,KAAK,IAAnB,IAA2BhN,KAAK,CAACiC,QAAN,KAAmB,IAA9C,IAAsDjC,KAAK,CAACoB,SAAN,KAAoB,IAA9E,EAAoF;AAClF6L,YAAAA,aAAa,CAAC1E,KAAK,IAAI,CAAT,GACVhB,cAAc,CAACT,KAAf,CAAqB9G,KAAK,CAACU,OAAN,CAAe6H,KAAf,CAArB,CADU,GAEVnE,iBAFS,CAAb;AAID;AACF;AACF;AACF;;AAED,aAASkC,SAAT,CAAoBQ,KAApB,EAA2BoG,UAA3B,EAAuC;AACrC,YAAMC,EAAE,GAAG7F,GAAG,IAAIvI,WAAW,CAAC2L,cAAc,CAAC5D,KAAf,CAAqBQ,GAArB,CAAD,EAA4BR,KAA5B,CAA7B;;AACA,aAAO9G,KAAK,CAACU,OAAN,CAAc0M,IAAd,CAAmBD,EAAnB,KAA0BD,UAAU,CAACE,IAAX,CAAgBD,EAAhB,CAA1B,IAAiDrG,KAAxD;AACD;;AAED,aAAS6D,cAAT,CAAyB0C,SAAzB,EAAoCC,UAApC,EAAgD;AAC9C,YAAMpH,GAAG,GAAGmH,SAAS,KAAK,KAAK,CAAnB,GACRA,SADQ,GAERC,UAFJ;AAIA,aAAO,OAAOpH,GAAP,KAAe,UAAf,GACHA,GADG,GAEHoB,GAAG,IAAKA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAA/B,IAA2CpB,GAAG,IAAIoB,GAAlD,GAAwDA,GAAG,CAAEpB,GAAF,CAA3D,GAAqEoB,GAFjF;AAGD;;AAED,aAASoC,gBAAT,CAA2BpC,GAA3B,EAAgC;AAC9B,YAAMpB,GAAG,GAAGwE,cAAc,CAAC5D,KAAf,CAAqBQ,GAArB,CAAZ;AACA,aAAOsD,iBAAiB,CAAC9D,KAAlB,CAAwBsG,IAAxB,CAA6B5N,CAAC,IAAIT,WAAW,CAACS,CAAD,EAAI0G,GAAJ,CAA7C,MAA2D,KAAK,CAAvE;AACD;;AAED,aAASqF,eAAT,CAA0BC,CAA1B,EAA6B;AAC3B,UACExL,KAAK,CAACiC,QAAN,KAAmB,IAAnB,IACGwC,SAAS,CAACqC,KAAV,KAAoB,IADvB,KAEI0E,CAAC,KAAK,KAAK,CAAX,IAAiB/G,SAAS,CAACqC,KAAV,KAAoB0E,CAAC,CAAC+B,MAAtB,IAAgC/B,CAAC,CAAC+B,MAAF,CAASzG,KAAT,KAAmBO,cAAc,CAACP,KAFvF,CADF,EAIE;AACArC,QAAAA,SAAS,CAACqC,KAAV,CAAgB0G,MAAhB;AACD;AACF;;AAED,aAASC,aAAT,CAAwBjC,CAAxB,EAA2B;AACzB;AACA;AACA;AACA,UAAInM,SAAS,CAACmM,CAAD,EAAI,EAAJ,CAAT,KAAqB,IAArB,IAA6B/H,IAAI,CAACqD,KAAL,KAAe,IAAhD,EAAsD;AACpD9H,QAAAA,IAAI,CAACwM,CAAD,CAAJ,CADoD,CAEpD;;AACAoB,QAAAA,SAAS;AACTf,QAAAA,eAAe;AAChB;;AAEDvI,MAAAA,IAAI,CAAC,OAAD,EAAUkI,CAAV,CAAJ;AACD;;AAED,aAASL,oBAAT,CAA+BK,CAA/B,EAAkC;AAChC,YAAM;AAAE1E,QAAAA;AAAF,UAAY0E,CAAC,CAAC+B,MAApB;;AAEA,UAAI/B,CAAC,CAACkC,OAAF,KAAc,KAAK,CAAvB,EAA0B;AACxBD,QAAAA,aAAa,CAACjC,CAAD,CAAb;AACA;AACD;;AAEDA,MAAAA,CAAC,CAAC+B,MAAF,CAASzG,KAAT,GAAiB,EAAjB;AACA6G,MAAAA,YAAY,CAAC5J,UAAD,CAAZ;AACA8H,MAAAA,eAAe;;AAEf,UAAI,OAAO/E,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAAC5B,MAAN,GAAe,CAAhD,EAAmD;AACjD,cAAM0I,MAAM,GAAG9G,KAAK,CAAC+G,iBAAN,EAAf;;AACA,cAAMC,MAAM,GAAGC,SAAS,IAAI;AAC1B,gBAAMC,MAAM,GAAGhO,KAAK,CAACU,OAAN,CAAc0M,IAAd,CAAmB9F,GAAG,IAAIyG,SAAS,CAACjH,KAAV,CAAgBQ,GAAhB,EAAqBuG,iBAArB,OAA6CD,MAAvE,CAAf;;AAEA,cAAII,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrB,mBAAO,KAAP;AACD;;AAED,cAAIhI,UAAU,CAACc,KAAX,CAAiBmH,OAAjB,CAAyBD,MAAzB,MAAqC,CAAC,CAA1C,EAA6C;AAC3CrF,YAAAA,YAAY,CAACqF,MAAD,CAAZ;AACD,WAFD,MAGK;AACHpB,YAAAA,SAAS;AACV;;AAED,iBAAO,IAAP;AACD,SAfD;;AAgBA,cAAMsB,MAAM,GAAGC,WAAW,IAAI;AAC5B,cAAIL,MAAM,CAACpD,cAAD,CAAN,KAA2B,IAA/B,EAAqC;AACnC;AACD;;AACD,cAAIoD,MAAM,CAACvG,cAAD,CAAN,KAA2B,IAA3B,IAAmC4G,WAAW,KAAK,IAAvD,EAA6D;AAC3D;AACD;;AAED5H,UAAAA,MAAM,CAACO,KAAD,EAAQ,IAAR,EAAc,MAAMoH,MAAM,CAAC,IAAD,CAA1B,CAAN;AACD,SATD;;AAWAA,QAAAA,MAAM;AACP,OA9BD,MA+BK;AACHnI,QAAAA,KAAK,CAACqI,UAAN,CAAiB5C,CAAjB;AACD;AACF;;AAED,aAASH,gBAAT,CAA2BG,CAA3B,EAA8B;AAC5BlI,MAAAA,IAAI,CAAC,UAAD,EAAakI,CAAb,CAAJ;AACD;;AAED,aAASP,eAAT,CAA0BO,CAA1B,EAA6B;AAC3BlI,MAAAA,IAAI,CAAC,SAAD,EAAYkI,CAAZ,CAAJ;;AAEA,UAAIpM,eAAe,CAACoM,CAAD,CAAf,KAAuB,IAA3B,EAAiC;AAC/B;AACD;;AAED,YAAM6C,iBAAiB,GAAGzK,UAAU,CAACkD,KAAX,CAAiB5B,MAAjB,GAA0B,CAA1B,KACpBlF,KAAK,CAACmC,YAAN,KAAuB,KAAK,CAA5B,IAAiCnC,KAAK,CAACiD,UAAN,KAAqB,KAAK,CADvC,CAA1B;AAGA,YAAMqL,eAAe,GAAG9C,CAAC,CAAC+C,QAAF,KAAe,IAAf,IACnBvO,KAAK,CAACG,QAAN,KAAmB,IADA,KAElBwD,WAAW,CAACmD,KAAZ,GAAoB,CAAC,CAArB,IAA0BuH,iBAAiB,KAAK,IAF9B,CAAxB,CAV2B,CAc3B;;AACA,UAAI7C,CAAC,CAACkC,OAAF,KAAc,EAAlB,EAAsB;AACpBzO,QAAAA,OAAO,CAACuM,CAAD,CAAP,CADoB,CACT;;AACX;AACD,OAlB0B,CAoB3B;;;AACA,UAAIA,CAAC,CAACkC,OAAF,KAAc,CAAd,IAAmBY,eAAe,KAAK,KAA3C,EAAkD;AAChDE,QAAAA,SAAS;AACT;AACD;;AAED,UAAIhD,CAAC,CAAC+B,MAAF,KAAa,KAAK,CAAlB,IAAuB/B,CAAC,CAAC+B,MAAF,CAASnF,EAAT,KAAgBrC,KAAK,CAACkC,SAAN,CAAgBnB,KAA3D,EAAkE;AAAE;AAAQ,OA1BjD,CA4B3B;;;AACA,UACE0E,CAAC,CAACkC,OAAF,KAAc,EAAd,IACG3H,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,KAA6B,IADhC,IAEGrD,IAAI,CAACqD,KAAL,KAAe,KAHpB,EAIE;AACA5H,QAAAA,cAAc,CAACsM,CAAD,CAAd;AACAiD,QAAAA,SAAS;AACT;AACD,OArC0B,CAuC3B;;;AACA,UACEjD,CAAC,CAACkC,OAAF,KAAc,CAAd,IACG1N,KAAK,CAACkB,YAAN,KAAuB,IAD1B,IAEG0C,UAAU,CAACkD,KAAX,CAAiB5B,MAAjB,KAA4B,CAHjC,EAIE;AACA,YAAIlF,KAAK,CAACG,QAAN,KAAmB,IAAnB,IAA2BS,KAAK,CAACqE,OAAN,CAAcjF,KAAK,CAACC,UAApB,MAAoC,IAAnE,EAAyE;AACvEwI,UAAAA,aAAa,CAACzI,KAAK,CAACC,UAAN,CAAiBiF,MAAjB,GAA0B,CAA3B,CAAb;AACD,SAFD,MAGK,IAAIlF,KAAK,CAACG,QAAN,KAAmB,IAAnB,IAA2BH,KAAK,CAACC,UAAN,KAAqB,IAApD,EAA0D;AAC7DqD,UAAAA,IAAI,CAAC,mBAAD,EAAsB,IAAtB,CAAJ;AACD;;AACD;AACD,OApD0B,CAsD3B;;;AACA,UACE,CAACkI,CAAC,CAACkC,OAAF,KAAc,EAAd,IAAoBlC,CAAC,CAACkC,OAAF,KAAc,EAAnC,MACI,OAAO9J,UAAU,CAACkD,KAAlB,KAA4B,QAA5B,IAAwClD,UAAU,CAACkD,KAAX,CAAiB5B,MAAjB,KAA4B,CADxE,CADF,EAGE;AACAhG,QAAAA,cAAc,CAACsM,CAAD,CAAd;AACA7H,QAAAA,WAAW,CAACmD,KAAZ,GAAoB,CAAC,CAArB;AACAgG,QAAAA,mBAAmB,CAACtB,CAAC,CAACkC,OAAF,KAAc,EAAd,GAAmB,CAAnB,GAAuB,CAAC,CAAzB,EAA4B1N,KAAK,CAACG,QAAlC,CAAnB;AACD,OA9D0B,CAgE3B;;;AACA,UACE,CAACqL,CAAC,CAACkC,OAAF,KAAc,EAAd,IAAoBlC,CAAC,CAACkC,OAAF,KAAc,EAAnC,KACGpI,8BAA8B,CAACwB,KAA/B,KAAyC,KAAK,CAFnD,EAGE;AACA5H,QAAAA,cAAc,CAACsM,CAAD,CAAd;AACA7H,QAAAA,WAAW,CAACmD,KAAZ,GAAoB4H,IAAI,CAACC,GAAL,CAClB,CAAC,CADiB,EAElBD,IAAI,CAACE,GAAL,CACE5J,mBAAmB,CAAC8B,KADtB,EAEEnD,WAAW,CAACmD,KAAZ,GAAoB,CAAC0E,CAAC,CAACkC,OAAF,KAAc,EAAd,GAAmB,CAAC,CAApB,GAAwB,CAAzB,IAA8BpI,8BAA8B,CAACwB,KAA/B,CAAqC+H,IAFzF,CAFkB,CAApB;AAOA/B,QAAAA,mBAAmB,CAACtB,CAAC,CAACkC,OAAF,KAAc,EAAd,GAAmB,CAAnB,GAAuB,CAAC,CAAzB,EAA4B1N,KAAK,CAACG,QAAlC,CAAnB;AACD,OA9E0B,CAgF3B;;;AACA,UAAIqL,CAAC,CAACkC,OAAF,KAAc,EAAd,IAAoBlC,CAAC,CAACkC,OAAF,KAAc,EAAtC,EAA0C;AACxCxO,QAAAA,cAAc,CAACsM,CAAD,CAAd;AACAsB,QAAAA,mBAAmB,CAACtB,CAAC,CAACkC,OAAF,KAAc,EAAd,GAAmB,CAAC,CAApB,GAAwB,CAAzB,EAA4B1N,KAAK,CAACG,QAAlC,CAAnB;AACD;;AAED,YAAM2O,aAAa,GAAG9J,mBAAmB,CAAC8B,KAA1C,CAtF2B,CAwF3B;;AACA,UAAIxC,YAAY,KAAK,KAAK,CAAtB,IAA2BC,eAAe,GAAGwK,IAAI,CAACC,GAAL,EAAjD,EAA6D;AAC3D1K,QAAAA,YAAY,GAAG,EAAf;AACD,OA3F0B,CA6F3B;;;AACA,UACEwK,aAAa,GAAG,CAAhB,IACG9O,KAAK,CAACiC,QAAN,KAAmB,IADtB,IAEGuJ,CAAC,CAAC7E,GAAF,KAAU,KAAK,CAFlB,IAGG6E,CAAC,CAAC7E,GAAF,CAAMzB,MAAN,KAAiB,CAHpB,CAGsB;AAHtB,SAIGsG,CAAC,CAACyD,MAAF,KAAazD,CAAC,CAAC0D,OAJlB,CAI0B;AAJ1B,UAKI1D,CAAC,CAACkC,OAAF,KAAc,EAAd,IAAoBpJ,YAAY,CAACY,MAAb,GAAsB,CAL9C,CADF,CAMmD;AANnD,QAOE;AACAzB,QAAAA,IAAI,CAACqD,KAAL,KAAe,IAAf,IAAuB2H,SAAS,CAACjD,CAAD,CAAhC;AAEA,cACE2D,IAAI,GAAG3D,CAAC,CAAC7E,GAAF,CAAMkH,iBAAN,EADT;AAAA,cAEEuB,SAAS,GAAG9K,YAAY,CAACY,MAAb,KAAwB,CAAxB,IAA6BZ,YAAY,CAAE,CAAF,CAAZ,KAAsB6K,IAFjE;AAIA5K,QAAAA,eAAe,GAAGwK,IAAI,CAACC,GAAL,KAAa,IAA/B;;AACA,YAAII,SAAS,KAAK,KAAlB,EAAyB;AACvBlQ,UAAAA,cAAc,CAACsM,CAAD,CAAd;AACAlH,UAAAA,YAAY,IAAI6K,IAAhB;AACD;;AAED,cAAME,QAAQ,GAAG,IAAIC,MAAJ,CAAW,MAAMhL,YAAY,CAACiL,KAAb,CAAmB,EAAnB,EAAuBlJ,GAAvB,CAA2BmJ,CAAC,IAAK9P,YAAY,CAACuO,OAAb,CAAqBuB,CAArB,IAA0B,CAAC,CAA3B,GAA+B,OAAOA,CAAtC,GAA0CA,CAA3E,EAA+EhI,IAA/E,CAAoF,IAApF,CAAjB,EAA4G,GAA5G,CAAjB;AAEA,YAAIe,KAAK,GAAG5E,WAAW,CAACmD,KAAxB;;AAEA,YAAIsI,SAAS,KAAK,IAAd,IAAsB7G,KAAK,GAAG,CAA9B,IAAmC8G,QAAQ,CAACI,IAAT,CAAclI,cAAc,CAACT,KAAf,CAAqB9G,KAAK,CAACU,OAAN,CAAe6H,KAAf,CAArB,CAAd,MAAgE,IAAvG,EAA6G;AAC3G,aAAG;AACDA,YAAAA,KAAK,GAAGpJ,mBAAmB,CAACoJ,KAAK,GAAG,CAAT,EAAY,CAAC,CAAb,EAAgBuG,aAAa,GAAG,CAAhC,CAA3B;AACD,WAFD,QAGOvG,KAAK,KAAK5E,WAAW,CAACmD,KAAtB,KACLmC,gBAAgB,CAACnC,KAAjB,CAAuB9G,KAAK,CAACU,OAAN,CAAe6H,KAAf,CAAvB,MAAmD,IAAnD,IACG8G,QAAQ,CAACI,IAAT,CAAclI,cAAc,CAACT,KAAf,CAAqB9G,KAAK,CAACU,OAAN,CAAe6H,KAAf,CAArB,CAAd,MAAgE,IAF9D,CAHP;AAOD;;AAED,YAAI5E,WAAW,CAACmD,KAAZ,KAAsByB,KAA1B,EAAiC;AAC/B7K,UAAAA,QAAQ,CAAC,MAAM;AACbqM,YAAAA,cAAc,CAACxB,KAAD,CAAd;AACA5C,YAAAA,QAAQ,CAAC4C,KAAD,CAAR;;AAEA,gBAAIA,KAAK,IAAI,CAAT,IAAcvI,KAAK,CAACiC,QAAN,KAAmB,IAAjC,IAAyCjC,KAAK,CAACoB,SAAN,KAAoB,IAAjE,EAAuE;AACrE6L,cAAAA,aAAa,CAAC1F,cAAc,CAACT,KAAf,CAAqB9G,KAAK,CAACU,OAAN,CAAe6H,KAAf,CAArB,CAAD,CAAb;AACD;AACF,WAPO,CAAR;AAQD;;AAED;AACD,OA5I0B,CA8I3B;AACA;;;AACA,UACEiD,CAAC,CAACkC,OAAF,KAAc,EAAd,KACIlC,CAAC,CAACkC,OAAF,KAAc,EAAd,IAAoB1N,KAAK,CAACiC,QAAN,KAAmB,IAAvC,IAA+CqC,YAAY,KAAK,EADpE,MAEIkH,CAAC,CAACkC,OAAF,KAAc,CAAd,IAAmBY,eAAe,KAAK,KAF3C,CADF,EAIE;AAAE;AAAQ;;AAEZ9C,MAAAA,CAAC,CAACkC,OAAF,KAAc,CAAd,IAAmBxO,cAAc,CAACsM,CAAD,CAAjC;;AAEA,UAAI7H,WAAW,CAACmD,KAAZ,GAAoB,CAAC,CAArB,IAA0BnD,WAAW,CAACmD,KAAZ,GAAoBgI,aAAlD,EAAiE;AAC/DnG,QAAAA,YAAY,CAAC3I,KAAK,CAACU,OAAN,CAAeiD,WAAW,CAACmD,KAA3B,CAAD,CAAZ;AACA;AACD;;AAED,UAAIuH,iBAAiB,KAAK,IAA1B,EAAgC;AAC9B,cAAMqB,IAAI,GAAG,CAACxJ,GAAD,EAAMyJ,IAAN,KAAe;AAC1B,cAAIA,IAAJ,EAAU;AACR,gBAAIpQ,oBAAoB,CAACoQ,IAAD,CAApB,KAA+B,IAAnC,EAAyC;AACvC;AACD;AACF,WAJD,MAKK;AACHA,YAAAA,IAAI,GAAG3P,KAAK,CAACmC,YAAb;AACD;;AAED,cAAI+D,GAAG,KAAK,KAAK,CAAb,IAAkBA,GAAG,KAAK,IAA9B,EAAoC;AAClC;AACD;;AAEDqG,UAAAA,gBAAgB,CAAC,EAAD,EAAKvM,KAAK,CAACG,QAAN,KAAmB,IAAxB,EAA8B,IAA9B,CAAhB;AAEA,gBAAMgN,EAAE,GAAGwC,IAAI,KAAK,QAAT,GAAoBhH,YAApB,GAAmC0D,GAA9C;AACAc,UAAAA,EAAE,CAACjH,GAAD,EAAMyJ,IAAI,KAAK,YAAf,CAAF;;AAEA,cAAI3P,KAAK,CAACG,QAAN,KAAmB,IAAvB,EAA6B;AAC3BsE,YAAAA,SAAS,CAACqC,KAAV,KAAoB,IAApB,IAA4BrC,SAAS,CAACqC,KAAV,CAAgBsF,KAAhB,EAA5B;AACAQ,YAAAA,SAAS;AACV;AACF,SAvBD;;AAyBA,YAAI5M,KAAK,CAACiD,UAAN,KAAqB,KAAK,CAA9B,EAAiC;AAC/BK,UAAAA,IAAI,CAAC,WAAD,EAAcM,UAAU,CAACkD,KAAzB,EAAgC4I,IAAhC,CAAJ;AACD,SAFD,MAGK;AACHA,UAAAA,IAAI,CAAC9L,UAAU,CAACkD,KAAZ,CAAJ;AACD;;AAED,YAAI9G,KAAK,CAACG,QAAN,KAAmB,IAAvB,EAA6B;AAC3B;AACD;AACF;;AAED,UAAIsD,IAAI,CAACqD,KAAL,KAAe,IAAnB,EAAyB;AACvB0H,QAAAA,SAAS;AACV,OAFD,MAGK,IAAIzI,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,KAA6B,IAAjC,EAAuC;AAC1C2H,QAAAA,SAAS;AACV;AACF;;AAED,aAAS3I,kBAAT,GAA+B;AAC7B,aAAO7B,SAAS,KAAK,IAAd,GACHW,cAAc,CAACkC,KADZ,GAGDpC,OAAO,CAACoC,KAAR,KAAkB,IAAlB,IAA0BpC,OAAO,CAACoC,KAAR,CAAc8I,iBAAd,CAAgC9I,KAAhC,KAA0C,IAApE,GACIpC,OAAO,CAACoC,KAAR,CAAc8I,iBAAd,CAAgC9I,KADpC,GAEI,KAAK,CALf;AAOD;;AAED,aAASjB,sBAAT,GAAmC;AACjC,aAAOC,kBAAkB,EAAzB;AACD;;AAED,aAAS+J,YAAT,GAAyB;AACvB,UAAI7P,KAAK,CAACkB,YAAN,KAAuB,IAA3B,EAAiC;AAC/B,eAAO,EAAP;AACD;;AAED,UAAImC,KAAK,CAAE,eAAF,CAAL,KAA6B,KAAK,CAAtC,EAAyC;AACvC,eAAOgF,aAAa,CAACvB,KAAd,CAAoBT,GAApB,CAAwByJ,KAAK,IAAIzM,KAAK,CAAE,eAAF,CAAL,CAAyByM,KAAzB,CAAjC,EAAkE/G,KAAlE,EAAP;AACD;;AAED,UAAI1F,KAAK,CAACmF,QAAN,KAAmB,KAAK,CAA5B,EAA+B;AAC7B,eAAO,GAAGuH,MAAH,CAAU1M,KAAK,CAACmF,QAAN,EAAV,CAAP;AACD;;AAED,UAAIxI,KAAK,CAACkC,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,eAAOmG,aAAa,CAACvB,KAAd,CAAoBT,GAApB,CAAwB,CAACyJ,KAAD,EAAQxH,CAAR,KAAcnL,CAAC,CAACW,KAAD,EAAQ;AACpD6I,UAAAA,GAAG,EAAE,YAAY2B,CADmC;AAEpD0H,UAAAA,SAAS,EAAEjK,KAAK,CAAC2G,QAAN,CAAe5F,KAAf,KAAyB,IAAzB,IAAiCmC,gBAAgB,CAACnC,KAAjB,CAAuBgJ,KAAK,CAACxI,GAA7B,MAAsC,IAF9B;AAGpDlC,UAAAA,KAAK,EAAE,IAH6C;AAIpD6K,UAAAA,SAAS,EAAEjQ,KAAK,CAACyK,KAJmC;AAKpD/H,UAAAA,QAAQ,EAAEA,QAAQ,CAACoE,KALiC;;AAMpDoJ,UAAAA,QAAQ,GAAI;AAAEJ,YAAAA,KAAK,CAACrH,aAAN,CAAoBH,CAApB;AAAwB;;AANc,SAAR,EAO3C,MAAMnL,CAAC,CAAC,MAAD,EAAS;AACjBgT,UAAAA,KAAK,EAAE,UADU;AAEjB,WAAEL,KAAK,CAACpI,IAAN,KAAe,IAAf,GAAsB,WAAtB,GAAoC,aAAtC,GAAuDH,cAAc,CAACT,KAAf,CAAqBgJ,KAAK,CAACxI,GAA3B;AAFtC,SAAT,CAPoC,CAAvC,CAAP;AAWD;;AAED,aAAO,CACLnK,CAAC,CAAC,MAAD,EAAS;AACR,SAAEwK,WAAW,CAACb,KAAZ,KAAsB,IAAtB,GAA6B,WAA7B,GAA2C,aAA7C,GAA8D9G,KAAK,CAACK,YAAN,KAAuB,KAAK,CAA5B,GAC1DL,KAAK,CAACK,YADoD,GAE1DgH,cAAc,CAACP;AAHX,OAAT,CADI,CAAP;AAOD;;AAED,aAASsJ,aAAT,GAA0B;AACxB,UAAIhJ,SAAS,CAACN,KAAV,KAAoB,IAAxB,EAA8B;AAC5B,eAAOzD,KAAK,CAAE,WAAF,CAAL,KAAyB,KAAK,CAA9B,GACHA,KAAK,CAAE,WAAF,CAAL,CAAqB;AAAEO,UAAAA,UAAU,EAAEA,UAAU,CAACkD;AAAzB,SAArB,CADG,GAEH,KAAK,CAFT;AAGD;;AAED,YAAMqG,EAAE,GAAG9J,KAAK,CAAC2K,MAAN,KAAiB,KAAK,CAAtB,GACP3K,KAAK,CAAC2K,MADC,GAEP8B,KAAK,IAAI;AACT,eAAO3S,CAAC,CAACY,KAAD,EAAQ;AACd4I,UAAAA,GAAG,EAAEmJ,KAAK,CAACvH,KADG;AAEd,aAAGuH,KAAK,CAAC5G;AAFK,SAAR,EAGL,MAAM;AACP,iBAAO/L,CAAC,CACNa,YADM,EAEN,MAAMb,CAAC,CACLc,UADK,EAEL,MAAMd,CAAC,CAAC,MAAD,EAAS;AACd,aAAE2S,KAAK,CAACpI,IAAN,KAAe,IAAf,GAAsB,WAAtB,GAAoC,aAAtC,GAAuDoI,KAAK,CAAC9H;AAD/C,WAAT,CAFF,CAFD,CAAR;AASD,SAbO,CAAR;AAcD,OAjBH;AAmBA,UAAItH,OAAO,GAAG8E,gBAAgB,CAAC,KAAD,EAAQoD,WAAW,CAAC9B,KAAZ,CAAkBT,GAAlB,CAAsB8G,EAAtB,CAAR,CAA9B;;AAEA,UAAI9J,KAAK,CAAE,gBAAF,CAAL,KAA8B,KAAK,CAAvC,EAA0C;AACxC3C,QAAAA,OAAO,GAAG2C,KAAK,CAAE,gBAAF,CAAL,GAA4B0M,MAA5B,CAAmCrP,OAAnC,CAAV;AACD;;AAED,aAAOpB,UAAU,CAAC+D,KAAK,CAAE,eAAF,CAAN,EAA2B3C,OAA3B,CAAjB;AACD;;AAED,aAAS2P,QAAT,CAAmBC,UAAnB,EAA+BC,QAA/B,EAAyC;AACvC,YAAMpI,KAAK,GAAGoI,QAAQ,KAAK,IAAb,GAAoB,EAAE,GAAGzI,aAAa,CAAChB,KAAnB;AAA0B,WAAGf,KAAK,CAACyK,UAAN,CAAiBC,UAAjB,CAA4B3J;AAAzD,OAApB,GAAuF,KAAK,CAA1G;AAEA,YAAM4J,IAAI,GAAG;AACXtT,QAAAA,GAAG,EAAEmT,QAAQ,KAAK,IAAb,GAAoB9L,SAApB,GAAgC,KAAK,CAD/B;AAEXkC,QAAAA,GAAG,EAAE,KAFM;AAGXwJ,QAAAA,KAAK,EAAEnJ,kBAAkB,CAACF,KAHf;AAIX6J,QAAAA,KAAK,EAAE3Q,KAAK,CAACyC,UAJF;AAKXqE,QAAAA,KAAK,EAAElD,UAAU,CAACkD,KAAX,KAAqB,KAAK,CAA1B,GAA8BlD,UAAU,CAACkD,KAAzC,GAAiD,EAL7C;AAMX;AACAnG,QAAAA,IAAI,EAAE,QAPK;AAQX,WAAGwH,KARQ;AASXC,QAAAA,EAAE,EAAEmI,QAAQ,KAAK,IAAb,GAAoBxK,KAAK,CAACkC,SAAN,CAAgBnB,KAApC,GAA4C,KAAK,CAT1C;AAUX8J,QAAAA,SAAS,EAAE5Q,KAAK,CAAC4Q,SAVN;AAWXjO,QAAAA,YAAY,EAAE3C,KAAK,CAAC2C,YAXT;AAYX,0BAAmB2N,UAAU,KAAK,IAAf,IAAuBtQ,KAAK,CAAC6Q,SAAN,KAAoB,IAA5C,IAAqD,KAAK,CAZjE;AAaXC,QAAAA,QAAQ,EAAE9Q,KAAK,CAACgJ,OAAN,KAAkB,IAbjB;AAcX+H,QAAAA,QAAQ,EAAE/Q,KAAK,CAAC+Q,QAAN,KAAmB,IAdlB;AAeX,WAAGlG,kBAAkB,CAAC/D;AAfX,OAAb;;AAkBA,UAAIwJ,UAAU,KAAK,IAAf,IAAuBrM,SAAS,KAAK,IAAzC,EAA+C;AAC7C,YAAIrD,KAAK,CAACqE,OAAN,CAAcyL,IAAI,CAACP,KAAnB,MAA8B,IAAlC,EAAwC;AACtCO,UAAAA,IAAI,CAACP,KAAL,GAAa,CAAE,GAAGO,IAAI,CAACP,KAAV,EAAiB,mBAAjB,CAAb;AACD,SAFD,MAGK;AACHO,UAAAA,IAAI,CAACP,KAAL,IAAc,oBAAd;AACD;AACF;;AAED,aAAOhT,CAAC,CAAC,OAAD,EAAUuT,IAAV,CAAR;AACD;;AAED,aAAS3L,OAAT,CAAkByG,CAAlB,EAAqB;AACnBmC,MAAAA,YAAY,CAAC5J,UAAD,CAAZ;;AAEA,UAAIyH,CAAC,IAAIA,CAAC,CAAC+B,MAAP,IAAiB/B,CAAC,CAAC+B,MAAF,CAASyD,SAAT,KAAuB,IAA5C,EAAkD;AAChD;AACD;;AAED/D,MAAAA,aAAa,CAACzB,CAAC,CAAC+B,MAAF,CAASzG,KAAT,IAAkB,EAAnB,CAAb,CAPmB,CAQnB;AACA;;AACA5C,MAAAA,cAAc,GAAG,IAAjB;AACAE,MAAAA,iBAAiB,GAAGR,UAAU,CAACkD,KAA/B;;AAEA,UACEf,KAAK,CAAC8B,OAAN,CAAcf,KAAd,KAAwB,IAAxB,KACI7C,SAAS,KAAK,IAAd,IAAsBJ,kBAAkB,CAACiD,KAAnB,KAA6B,IADvD,CADF,EAGE;AACAf,QAAAA,KAAK,CAACqG,KAAN;AACD;;AAED,UAAIpM,KAAK,CAACkD,QAAN,KAAmB,KAAK,CAA5B,EAA+B;AAC7Ba,QAAAA,UAAU,GAAGkN,UAAU,CAAC,MAAM;AAC5B1K,UAAAA,MAAM,CAAC3C,UAAU,CAACkD,KAAZ,CAAN;AACD,SAFsB,EAEpB9G,KAAK,CAACuC,aAFc,CAAvB;AAGD;AACF;;AAED,aAAS0K,aAAT,CAAwB/G,GAAxB,EAA6B;AAC3B,UAAItC,UAAU,CAACkD,KAAX,KAAqBZ,GAAzB,EAA8B;AAC5BtC,QAAAA,UAAU,CAACkD,KAAX,GAAmBZ,GAAnB;AACA5C,QAAAA,IAAI,CAAC,aAAD,EAAgB4C,GAAhB,CAAJ;AACD;AACF;;AAED,aAASqG,gBAAT,CAA2BrG,GAA3B,EAAgCgL,WAAhC,EAA6CC,QAA7C,EAAuD;AACrDjN,MAAAA,cAAc,GAAGiN,QAAQ,KAAK,IAA9B;;AAEA,UAAInR,KAAK,CAACiC,QAAN,KAAmB,IAAvB,EAA6B;AAC3BgL,QAAAA,aAAa,CAAC/G,GAAD,CAAb;;AAEA,YAAIgL,WAAW,KAAK,IAAhB,IAAwBC,QAAQ,KAAK,IAAzC,EAA+C;AAC7C/M,UAAAA,iBAAiB,GAAG8B,GAApB;AACD;;AAEDgL,QAAAA,WAAW,KAAK,IAAhB,IAAwB3K,MAAM,CAACL,GAAD,CAA9B;AACD;AACF;;AAED,aAASK,MAAT,CAAiBL,GAAjB,EAAsBkL,UAAtB,EAAkCC,aAAlC,EAAiD;AAC/C,UAAIrR,KAAK,CAACkD,QAAN,KAAmB,KAAK,CAAxB,IAA8BkO,UAAU,KAAK,IAAf,IAAuBrL,KAAK,CAAC8B,OAAN,CAAcf,KAAd,KAAwB,IAAjF,EAAwF;AACtF;AACD;;AAED,UAAIf,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,KAA6B,IAAjC,EAAuC;AACrCxD,QAAAA,IAAI,CAAC,cAAD,CAAJ;AACD,OAFD,MAGK;AACHyC,QAAAA,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,GAA2B,IAA3B;AACAhD,QAAAA,qBAAqB,CAACgD,KAAtB,GAA8B,IAA9B;AACD;;AAED,UACEZ,GAAG,KAAK,EAAR,IACGlG,KAAK,CAACG,QAAN,KAAmB,IADtB,IAEG6F,UAAU,CAACc,KAAX,CAAiB5B,MAAjB,GAA0B,CAF7B,IAGGhB,cAAc,KAAK,IAHtB,IAIGgC,GAAG,KAAKqB,cAAc,CAACT,KAAf,CAAqBd,UAAU,CAACc,KAAX,CAAkB,CAAlB,CAArB,CALb,EAME;AACAZ,QAAAA,GAAG,GAAG,EAAN;AACD;;AAED,YAAMoL,aAAa,GAAGL,UAAU,CAAC,MAAM;AACrCxN,QAAAA,IAAI,CAACqD,KAAL,KAAe,IAAf,KAAwBrD,IAAI,CAACqD,KAAL,GAAa,KAArC;AACD,OAF+B,EAE7B,EAF6B,CAAhC;AAIA6G,MAAAA,YAAY,CAACxJ,QAAD,CAAZ;AACAA,MAAAA,QAAQ,GAAGmN,aAAX;AAEAhO,MAAAA,IAAI,CACF,QADE,EAEF4C,GAFE,EAGF,CAACiH,EAAD,EAAKoE,OAAL,KAAiB;AACf,YAAI,CAACH,UAAU,KAAK,IAAf,IAAuBrL,KAAK,CAAC8B,OAAN,CAAcf,KAAd,KAAwB,IAAhD,KAAyD3C,QAAQ,KAAKmN,aAA1E,EAAyF;AACvF3D,UAAAA,YAAY,CAACxJ,QAAD,CAAZ;AAEA,iBAAOgJ,EAAP,KAAc,UAAd,IAA4BA,EAAE,EAA9B,CAHuF,CAKvF;;AACArJ,UAAAA,qBAAqB,CAACgD,KAAtB,GAA8B,KAA9B;AAEApJ,UAAAA,QAAQ,CAAC,MAAM;AACbqI,YAAAA,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,GAA2B,KAA3B;;AAEA,gBAAIf,KAAK,CAAC2G,QAAN,CAAe5F,KAAf,KAAyB,IAA7B,EAAmC;AACjC,kBAAIsK,UAAU,KAAK,IAAnB,EAAyB;AACvB3N,gBAAAA,IAAI,CAACqD,KAAL,KAAe,IAAf,IAAuB8F,SAAS,EAAhC;AACD,eAFD,MAGK,IAAInJ,IAAI,CAACqD,KAAL,KAAe,IAAnB,EAAyB;AAC5BiF,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACD,eAFI,MAGA;AACHtI,gBAAAA,IAAI,CAACqD,KAAL,GAAa,IAAb;AACD;AACF;;AAED,mBAAOyK,OAAP,KAAmB,UAAnB,IAAiC7T,QAAQ,CAAC,MAAM;AAAE6T,cAAAA,OAAO,CAAChO,KAAD,CAAP;AAAgB,aAAzB,CAAzC;AACA,mBAAO8N,aAAP,KAAyB,UAAzB,IAAuC3T,QAAQ,CAAC,MAAM;AAAE2T,cAAAA,aAAa,CAAC9N,KAAD,CAAb;AAAsB,aAA/B,CAA/C;AACD,WAjBO,CAAR;AAkBD;AACF,OA/BC,EAgCF,MAAM;AACJ,YAAIwC,KAAK,CAAC8B,OAAN,CAAcf,KAAd,KAAwB,IAAxB,IAAgC3C,QAAQ,KAAKmN,aAAjD,EAAgE;AAC9D3D,UAAAA,YAAY,CAACxJ,QAAD,CAAZ;AACA4B,UAAAA,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,GAA2B,KAA3B;AACAhD,UAAAA,qBAAqB,CAACgD,KAAtB,GAA8B,KAA9B;AACD;;AACDrD,QAAAA,IAAI,CAACqD,KAAL,KAAe,IAAf,KAAwBrD,IAAI,CAACqD,KAAL,GAAa,KAArC;AACD,OAvCC,CAAJ;AAyCD;;AAED,aAAS0K,OAAT,GAAoB;AAClB,aAAOrU,CAAC,CAACe,KAAD,EAAQ;AACdd,QAAAA,GAAG,EAAEsH,OADS;AAEdyL,QAAAA,KAAK,EAAEjJ,gBAAgB,CAACJ,KAFV;AAGd6J,QAAAA,KAAK,EAAE3Q,KAAK,CAACgC,iBAHC;AAId/B,QAAAA,UAAU,EAAEwD,IAAI,CAACqD,KAJH;AAKd2K,QAAAA,GAAG,EAAEzR,KAAK,CAAC2B,UAAN,KAAqB,IALZ;AAMd+P,QAAAA,KAAK,EAAE1R,KAAK,CAAC0B,YAAN,KAAuB,IAAvB,IAA+B0F,SAAS,CAACN,KAAV,KAAoB,IAAnD,IAA2D9G,KAAK,CAACiC,QAAN,KAAmB,IANvE;AAOd0P,QAAAA,MAAM,EAAE3R,KAAK,CAAC4B,UAPA;AAQdgQ,QAAAA,IAAI,EAAE5R,KAAK,CAAC6B,QARE;AASdkL,QAAAA,MAAM,EAAE/M,KAAK,CAAC8B,UATA;AAUd0H,QAAAA,IAAI,EAAE5C,aAAa,CAACE,KAVN;AAWd+K,QAAAA,aAAa,EAAE,IAXD;AAYdC,QAAAA,SAAS,EAAE,IAZG;AAadC,QAAAA,OAAO,EAAE,IAbK;AAcdC,QAAAA,MAAM,EAAE5H,WAAW,CAACtD,KAdN;AAedlE,QAAAA,cAAc,EAAE5C,KAAK,CAAC4C,cAfR;AAgBdC,QAAAA,cAAc,EAAE7C,KAAK,CAAC6C,cAhBR;AAiBdC,QAAAA,kBAAkB,EAAE9C,KAAK,CAAC8C,kBAjBZ;AAkBdmP,QAAAA,kBAAkB,EAAE,IAlBN;AAmBd,WAAG/J,YAAY,CAACpB,KAnBF;AAoBdoL,QAAAA,eAAe,EAAEzM,kBApBH;AAqBd0M,QAAAA,YAAY,EAAEC,kBArBA;AAsBdC,QAAAA,YAAY,EAAEC,gBAtBA;AAuBdC,QAAAA,MAAM,EAAEC;AAvBM,OAAR,EAwBLpC,aAxBK,CAAR;AAyBD;;AAED,aAASkC,gBAAT,CAA2B9G,CAA3B,EAA8B;AAC5BiH,MAAAA,kBAAkB,CAACjH,CAAD,CAAlB;AACAgD,MAAAA,SAAS;AACV;;AAED,aAASgE,UAAT,GAAuB;AACrB5M,MAAAA,oBAAoB;AACrB;;AAED,aAAS8M,kBAAT,CAA6BlH,CAA7B,EAAgC;AAC9BxM,MAAAA,IAAI,CAACwM,CAAD,CAAJ;AACA/G,MAAAA,SAAS,CAACqC,KAAV,KAAoB,IAApB,IAA4BrC,SAAS,CAACqC,KAAV,CAAgBsF,KAAhB,EAA5B;AACAvI,MAAAA,kBAAkB,CAACiD,KAAnB,GAA2B,IAA3B;AACA6L,MAAAA,MAAM,CAAChN,QAAP,CAAgBgN,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACE,OAA7B,IAAwCC,QAAQ,CAACC,IAAT,CAAcC,UAAtD,IAAoE,CAApF,EAAuF,CAAvF;AACD;;AAED,aAASC,iBAAT,CAA4BzH,CAA5B,EAA+B;AAC7BxM,MAAAA,IAAI,CAACwM,CAAD,CAAJ;AACA9N,MAAAA,QAAQ,CAAC,MAAM;AACbmG,QAAAA,kBAAkB,CAACiD,KAAnB,GAA2B,KAA3B;AACD,OAFO,CAAR;AAGD;;AAED,aAASoM,SAAT,GAAsB;AACpB,YAAMC,OAAO,GAAG,CACdhW,CAAC,CAACS,MAAD,EAAS;AACRuS,QAAAA,KAAK,EAAG,YAAYpK,KAAK,CAACqN,UAAN,CAAiBtM,KAAO,EADpC;AAER,WAAGN,eAAe,CAACM,KAFX;AAGRuM,QAAAA,GAAG,EAAEtN,KAAK,CAACkC,SAAN,CAAgBnB,KAHb;AAIR0C,QAAAA,IAAI,EAAE5C,aAAa,CAACE,KAJZ;AAKRkL,QAAAA,MAAM,EAAE,IALA;AAMRsB,QAAAA,OAAO,EAAExP,qBAAqB,CAACgD,KANvB;AAORyM,QAAAA,WAAW,EAAE,KAPL;AAQRC,QAAAA,MAAM,EAAE,IARA;AASRC,QAAAA,UAAU,EAAE7P,UAAU,CAACkD,KAAX,CAAiB5B,MAAjB,GAA0B,CAT9B;AAUR,WAAGa,KAAK,CAACyK,UAAN,CAAiBkD,SAAjB,CAA2B5M,KAVtB;AAWRwE,QAAAA,OAAO,EAAEoH,kBAXD;AAYRiB,QAAAA,MAAM,EAAEV;AAZA,OAAT,EAaE,EACD,GAAG5P,KADF;AAEDuQ,QAAAA,UAAU,EAAE,MAAM7N,KAAK,CAAC8N,UAAN,CAAiB,IAAjB,CAFjB;AAGDC,QAAAA,MAAM,EAAE,KAAK,CAHZ;AAIDC,QAAAA,KAAK,EAAE,KAAK;AAJX,OAbF,CADa,CAAhB;AAsBAtQ,MAAAA,IAAI,CAACqD,KAAL,KAAe,IAAf,IAAuBqM,OAAO,CAAC3G,IAAR,CACrBrP,CAAC,CAAC,KAAD,EAAQ;AACPC,QAAAA,GAAG,EAAEwH,cADE;AAEPuL,QAAAA,KAAK,EAAEjJ,gBAAgB,CAACJ,KAAjB,GAAyB,SAFzB;AAGP6J,QAAAA,KAAK,EAAE3Q,KAAK,CAACgC,iBAHN;AAIP,WAAGkG,YAAY,CAACpB,KAJT;AAKP2C,QAAAA,OAAO,EAAExK,OALF;AAMPiT,QAAAA,eAAe,EAAEzM;AANV,OAAR,EAOE2K,aAAa,EAPf,CADoB,CAAvB;AAWA,aAAOjT,CAAC,CAACgB,OAAD,EAAU;AAChBf,QAAAA,GAAG,EAAEuH,SADW;AAEhB1E,QAAAA,UAAU,EAAEyD,MAAM,CAACoD,KAFH;AAGhBkN,QAAAA,QAAQ,EAAEhU,KAAK,CAACiC,QAAN,KAAmB,IAAnB,GAA0B,KAA1B,GAAkC,KAAK,CAHjC;AAIhBW,QAAAA,cAAc,EAAEyB,sBAJA;AAKhBxB,QAAAA,cAAc,EAAE7C,KAAK,CAAC6C,cALN;AAMhBC,QAAAA,kBAAkB,EAAE9C,KAAK,CAAC8C,kBANV;AAOhBqP,QAAAA,YAAY,EAAEC,kBAPE;AAQhBC,QAAAA,YAAY,EAAE4B,kBARE;AAShBC,QAAAA,MAAM,EAAEC,YATQ;AAUhB5B,QAAAA,MAAM,EAAE6B;AAVQ,OAAV,EAWL,MAAMjX,CAAC,CAAC,KAAD,EAAQ;AAChBgT,QAAAA,KAAK,EAAE,sBACFvJ,aAAa,CAACE,KAAd,KAAwB,IAAxB,GAA+B,gCAA/B,GAAkE,EADhE,KAEFjD,kBAAkB,CAACiD,KAAnB,KAA6B,IAA7B,GAAoC,4BAApC,GAAmE,EAFjE;AADS,OAAR,EAIPqM,OAJO,CAXF,CAAR;AAgBD;;AAED,aAASc,kBAAT,CAA6BzI,CAA7B,EAAgC;AAC9BiH,MAAAA,kBAAkB,CAACjH,CAAD,CAAlB;;AAEA,UAAI7G,SAAS,CAACmC,KAAV,KAAoB,IAAxB,EAA8B;AAC5BnC,QAAAA,SAAS,CAACmC,KAAV,CAAgBuN,qBAAhB,CACEtO,KAAK,CAACuO,OAAN,CAAcxN,KAAd,CAAoByN,aAApB,CAAkC,0CAAlC,CADF;AAGD;;AAEDxO,MAAAA,KAAK,CAAC8B,OAAN,CAAcf,KAAd,GAAsB,KAAtB;AACD;;AAED,aAASqN,YAAT,CAAuB3I,CAAvB,EAA0B;AACxBoB,MAAAA,SAAS;AACT7G,MAAAA,KAAK,CAAC8B,OAAN,CAAcf,KAAd,KAAwB,KAAxB,IAAiCxD,IAAI,CAAC,MAAD,EAASkI,CAAT,CAArC;AACAK,MAAAA,eAAe;AAChB;;AAED,aAASuI,YAAT,GAAyB;AACvB,YAAMI,EAAE,GAAG1B,QAAQ,CAAC2B,aAApB;;AACA,UACE,CAACD,EAAE,KAAK,IAAP,IAAeA,EAAE,CAACpM,EAAH,KAAUrC,KAAK,CAACkC,SAAN,CAAgBnB,KAA1C,KACGrC,SAAS,CAACqC,KAAV,KAAoB,IADvB,IAEGrC,SAAS,CAACqC,KAAV,KAAoB0N,EAHzB,EAIE;AACA/P,QAAAA,SAAS,CAACqC,KAAV,CAAgBsF,KAAhB;AACD;;AAEDxG,MAAAA,oBAAoB;AACrB;;AAED,aAAS4I,SAAT,GAAsB;AACpB,UAAI9K,MAAM,CAACoD,KAAP,KAAiB,IAArB,EAA2B;AACzB;AACD;;AAEDnD,MAAAA,WAAW,CAACmD,KAAZ,GAAoB,CAAC,CAArB;;AAEA,UAAIrD,IAAI,CAACqD,KAAL,KAAe,IAAnB,EAAyB;AACvBrD,QAAAA,IAAI,CAACqD,KAAL,GAAa,KAAb;AACD;;AAED,UAAIf,KAAK,CAAC8B,OAAN,CAAcf,KAAd,KAAwB,KAA5B,EAAmC;AACjC6G,QAAAA,YAAY,CAACxJ,QAAD,CAAZ;AACAA,QAAAA,QAAQ,GAAG,KAAK,CAAhB;;AAEA,YAAI4B,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,KAA6B,IAAjC,EAAuC;AACrCxD,UAAAA,IAAI,CAAC,cAAD,CAAJ;AACAyC,UAAAA,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,GAA2B,KAA3B;AACAhD,UAAAA,qBAAqB,CAACgD,KAAtB,GAA8B,KAA9B;AACD;AACF;AACF;;AAED,aAAS2H,SAAT,CAAoBjD,CAApB,EAAuB;AACrB,UAAIzF,KAAK,CAAC2G,QAAN,CAAe5F,KAAf,KAAyB,IAA7B,EAAmC;AACjC;AACD;;AAED,UAAI7C,SAAS,KAAK,IAAlB,EAAwB;AACtB8B,QAAAA,KAAK,CAAC2O,gBAAN,CAAuBlJ,CAAvB;AACA9H,QAAAA,MAAM,CAACoD,KAAP,GAAe,IAAf;AACApJ,QAAAA,QAAQ,CAAC,MAAM;AACbqI,UAAAA,KAAK,CAACqG,KAAN;AACD,SAFO,CAAR;AAGD,OAND,MAOK;AACHrG,QAAAA,KAAK,CAACqG,KAAN;AACD;;AAED,UAAIpM,KAAK,CAACkD,QAAN,KAAmB,KAAK,CAA5B,EAA+B;AAC7BqD,QAAAA,MAAM,CAAC3C,UAAU,CAACkD,KAAZ,CAAN;AACD,OAFD,MAGK,IAAIM,SAAS,CAACN,KAAV,KAAoB,IAApB,IAA4BzD,KAAK,CAAE,WAAF,CAAL,KAAyB,KAAK,CAA9D,EAAiE;AACpEI,QAAAA,IAAI,CAACqD,KAAL,GAAa,IAAb;AACD;AACF;;AAED,aAAS8F,SAAT,GAAsB;AACpBlJ,MAAAA,MAAM,CAACoD,KAAP,GAAe,KAAf;AACA0H,MAAAA,SAAS;AACV;;AAED,aAAS3C,eAAT,GAA4B;AAC1B7L,MAAAA,KAAK,CAACiC,QAAN,KAAmB,IAAnB,IAA2BsK,gBAAgB,CACzCvM,KAAK,CAACG,QAAN,KAAmB,IAAnB,IAA2BH,KAAK,CAACoB,SAAN,KAAoB,IAA/C,IAAuD4E,UAAU,CAACc,KAAX,CAAiB5B,MAAjB,GAA0B,CAAjF,GACIqC,cAAc,CAACT,KAAf,CAAqBd,UAAU,CAACc,KAAX,CAAkB,CAAlB,CAArB,KAA+C,EADnD,GAEI,EAHqC,EAIzC,IAJyC,EAKzC,IALyC,CAA3C;AAOD;;AAED,aAASiF,UAAT,CAAqB4I,IAArB,EAA2B;AACzB,UAAIhR,WAAW,GAAG,CAAC,CAAnB;;AAEA,UAAIgR,IAAI,KAAK,IAAb,EAAmB;AACjB,YAAI3O,UAAU,CAACc,KAAX,CAAiB5B,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,gBAAMgB,GAAG,GAAGwE,cAAc,CAAC5D,KAAf,CAAqBd,UAAU,CAACc,KAAX,CAAkB,CAAlB,CAArB,CAAZ;AACAnD,UAAAA,WAAW,GAAG3D,KAAK,CAACU,OAAN,CAAcmM,SAAd,CAAwBrN,CAAC,IAAIT,WAAW,CAAC2L,cAAc,CAAC5D,KAAf,CAAqBtH,CAArB,CAAD,EAA0B0G,GAA1B,CAAxC,CAAd;AACD;;AAEDX,QAAAA,uBAAuB,CAAC5B,WAAD,CAAvB;AACD;;AAEDoG,MAAAA,cAAc,CAACpG,WAAD,CAAd;AACD;;AAED,aAASqI,YAAT,GAAyB;AACvB,UAAIvI,IAAI,CAACqD,KAAL,KAAe,IAAf,IAAuBf,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,KAA6B,KAAxD,EAA+D;AAC7DpB,QAAAA,KAAK;AAELhI,QAAAA,QAAQ,CAAC,MAAM;AACb,cAAI+F,IAAI,CAACqD,KAAL,KAAe,IAAf,IAAuBf,KAAK,CAAC6F,YAAN,CAAmB9E,KAAnB,KAA6B,KAAxD,EAA+D;AAC7DiF,YAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,SAJO,CAAR;AAKD;AACF;;AAED,aAAS6I,kBAAT,GAA+B;AAC7B,UAAIlR,MAAM,CAACoD,KAAP,KAAiB,KAAjB,IAA0BpC,OAAO,CAACoC,KAAR,KAAkB,IAAhD,EAAsD;AACpDpC,QAAAA,OAAO,CAACoC,KAAR,CAAc+N,cAAd;AACD;AACF;;AAED,aAASzC,kBAAT,CAA6B5G,CAA7B,EAAgC;AAC9BA,MAAAA,CAAC,KAAK,KAAK,CAAX,IAAgBxM,IAAI,CAACwM,CAAD,CAApB;AACAlI,MAAAA,IAAI,CAAC,YAAD,EAAekI,CAAf,CAAJ;AACAzF,MAAAA,KAAK,CAAC+O,YAAN,GAAqB,IAArB;AACA/O,MAAAA,KAAK,CAAC2O,gBAAN,CAAuBlJ,CAAvB;AACD;;AAED,aAASiH,kBAAT,CAA6BjH,CAA7B,EAAgC;AAC9BA,MAAAA,CAAC,KAAK,KAAK,CAAX,IAAgBxM,IAAI,CAACwM,CAAD,CAApB;AACAlI,MAAAA,IAAI,CAAC,YAAD,EAAekI,CAAf,CAAJ;AACAzF,MAAAA,KAAK,CAAC+O,YAAN,GAAqB,KAArB;AACA/O,MAAAA,KAAK,CAACgP,iBAAN,CAAwBvJ,CAAxB;AACD;;AAED,aAASwJ,cAAT,GAA2B;AACzB/Q,MAAAA,SAAS,GAAGT,EAAE,CAACmG,QAAH,CAAYC,EAAZ,CAAeqL,MAAf,KAA0B,IAA1B,IAAkCjV,KAAK,CAAC+C,QAAN,KAAmB,QAArD,GACR,KADQ,GAER/C,KAAK,CAAC+C,QAAN,KAAmB,MAAnB,KACA/C,KAAK,CAACiC,QAAN,KAAmB,IAAnB,GACIoB,KAAK,CAAE,WAAF,CAAL,KAAyB,KAAK,CAA9B,IAAmCrD,KAAK,CAACkD,QAAN,KAAmB,KAAK,CAA3D,IAAgEkE,SAAS,CAACN,KAAV,KAAoB,KADxF,GAEI,IAHJ,CAFJ;AAQAzC,MAAAA,sBAAsB,GAAGb,EAAE,CAACmG,QAAH,CAAYC,EAAZ,CAAesL,GAAf,KAAuB,IAAvB,IAA+BjR,SAAS,KAAK,IAA7C,IAAqDjE,KAAK,CAACiC,QAAN,KAAmB,IAAxE,GACrB,MADqB,GAErBjC,KAAK,CAAC4C,cAFV;AAGD;;AAEDrF,IAAAA,cAAc,CAACyX,cAAD,CAAd;AACAxX,IAAAA,SAAS,CAACoX,kBAAD,CAAT;AAEAI,IAAAA,cAAc;AAEdvX,IAAAA,eAAe,CAAC,MAAM;AACpBkQ,MAAAA,YAAY,CAAC5J,UAAD,CAAZ;AACD,KAFc,CAAf,CA7uC6B,CAivC7B;;AACAnE,IAAAA,MAAM,CAACuV,MAAP,CAAc5R,KAAd,EAAqB;AACnBkL,MAAAA,SADmB;AACR7B,MAAAA,SADQ;AAEnBnE,MAAAA,aAFmB;AAEJ4D,MAAAA,GAFI;AAEC1D,MAAAA,YAFD;AAGnByM,MAAAA,cAAc,EAAE,MAAMzR,WAAW,CAACmD,KAHf;AAInBiD,MAAAA,cAJmB;AAIH+C,MAAAA,mBAJG;AAKnBvG,MAAAA,MALmB;AAKXqO,MAAAA,kBALW;AAKSrI,MAAAA,gBALT;AAMnB7C,MAAAA,gBANmB;AAOnBuC,MAAAA,sBAPmB;AAQnBhD,MAAAA,gBAAgB,EAAE,CAAC,GAAGoM,IAAJ,KAAapM,gBAAgB,CAACnC,KAAjB,CAAuBwO,KAAvB,CAA6B,IAA7B,EAAmCD,IAAnC,MAA6C,IARzD;AASnB3K,MAAAA,cAAc,EAAE,CAAC,GAAG2K,IAAJ,KAAa3K,cAAc,CAAC5D,KAAf,CAAqBwO,KAArB,CAA2B,IAA3B,EAAiCD,IAAjC,CATV;AAUnB9N,MAAAA,cAAc,EAAE,CAAC,GAAG8N,IAAJ,KAAa9N,cAAc,CAACT,KAAf,CAAqBwO,KAArB,CAA2B,IAA3B,EAAiCD,IAAjC;AAVV,KAArB;AAaAzV,IAAAA,MAAM,CAACuV,MAAP,CAAcpP,KAAd,EAAqB;AACnBC,MAAAA,UADmB;AAGnBoN,MAAAA,UAAU,EAAE/V,QAAQ,CAAC,MAClB,+CAA+C2C,KAAK,CAACiC,QAAN,KAAmB,IAAnB,GAA0B,KAA1B,GAAkC,EAAI,QAAtF,GACG,kBAAkBjC,KAAK,CAACkC,QAAN,KAAmB,IAAnB,GAA0B,KAA1B,GAAkC,EAAI,QAD3D,GAEG,cAAclC,KAAK,CAACG,QAAN,KAAmB,IAAnB,GAA0B,UAA1B,GAAuC,QAAU,EAHhD,CAHD;AASnBqE,MAAAA,QATmB;AAUnBC,MAAAA,SAVmB;AAWnBsC,MAAAA,QAXmB;AAYnB0H,MAAAA,SAZmB;AAcnB8G,MAAAA,aAAa,EAAElY,QAAQ,CAAC,MACtB,CAAC2C,KAAK,CAACkB,YAAN,KAAuB,IAAvB,GACG0C,UAAU,CAACkD,KAAX,CAAiB5B,MAAjB,GAA0B,CAD7B,GAEG6B,QAAQ,CAACD,KAAT,KAAmB,IAFvB,KAIGtI,kBAAkB,CAACwB,KAAK,CAACK,YAAP,CALA,CAdJ;AAsBnBmV,MAAAA,eAAe,EAAE,MAAM;AACrB,YACEzP,KAAK,CAAC2G,QAAN,CAAe5F,KAAf,KAAyB,KAAzB,KACEpD,MAAM,CAACoD,KAAP,KAAiB,IAAjB,CAAsB;AAAtB,WACGM,SAAS,CAACN,KAAV,KAAoB,IADvB,IAEGzD,KAAK,CAAE,WAAF,CAAL,KAAyB,KAAK,CAHnC,CADF,EAME;AACA,iBAAOY,SAAS,KAAK,IAAd,GAAqBiP,SAAS,EAA9B,GAAmC1B,OAAO,EAAjD;AACD,SARD,MASK,IAAIzL,KAAK,CAAC+O,YAAN,KAAuB,IAA3B,EAAiC;AACpC;AACA/O,UAAAA,KAAK,CAAC+O,YAAN,GAAqB,KAArB;AACD;AACF,OApCkB;AAsCnBW,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,CAAElK,CAAF,EAAK;AAAEzF,UAAAA,KAAK,CAAC2O,gBAAN,CAAuBlJ,CAAvB;AAA2B,SAD9B;;AAEbmK,QAAAA,UAAU,CAAEnK,CAAF,EAAK;AACbzF,UAAAA,KAAK,CAACgP,iBAAN,CAAwBvJ,CAAxB,EAA2B,MAAM;AAC/BK,YAAAA,eAAe;AACf2C,YAAAA,SAAS;AACV,WAHD;AAID,SAPY;;AAQb/E,QAAAA,OAAO,CAAE+B,CAAF,EAAK;AACV;AACAvM,UAAAA,OAAO,CAACuM,CAAD,CAAP;;AAEA,cAAIvH,SAAS,KAAK,IAAd,IAAsBR,IAAI,CAACqD,KAAL,KAAe,IAAzC,EAA+C;AAC7C0H,YAAAA,SAAS;AACT/J,YAAAA,SAAS,CAACqC,KAAV,KAAoB,IAApB,IAA4BrC,SAAS,CAACqC,KAAV,CAAgBsF,KAAhB,EAA5B;AACA;AACD;;AAEDqC,UAAAA,SAAS,CAACjD,CAAD,CAAT;AACD;;AAnBY,OAtCI;AA4DnBqI,MAAAA,UAAU,EAAEvD,UAAU,IAAI;AACxB,cAAMsF,KAAK,GAAG/F,YAAY,EAA1B;AACA,cAAMU,QAAQ,GAAGD,UAAU,KAAK,IAAf,IAAuB5M,MAAM,CAACoD,KAAP,KAAiB,IAAxC,IAAgD7C,SAAS,KAAK,IAA/E;;AAEA,YAAIjE,KAAK,CAACiC,QAAN,KAAmB,IAAvB,EAA6B;AAC3B2T,UAAAA,KAAK,CAACpJ,IAAN,CAAW6D,QAAQ,CAACC,UAAD,EAAaC,QAAb,CAAnB;AACD,SAFD,CAGA;AAHA,aAIK,IAAIxK,KAAK,CAAC2G,QAAN,CAAe5F,KAAf,KAAyB,IAA7B,EAAmC;AACtC,gBAAMqB,KAAK,GAAGoI,QAAQ,KAAK,IAAb,GAAoBzI,aAAa,CAAChB,KAAlC,GAA0C,KAAK,CAA7D;AAEA8O,UAAAA,KAAK,CAACpJ,IAAN,CACErP,CAAC,CAAC,OAAD,EAAU;AACTC,YAAAA,GAAG,EAAEmT,QAAQ,KAAK,IAAb,GAAoB9L,SAApB,GAAgC,KAAK,CADjC;AAETkC,YAAAA,GAAG,EAAE,KAFI;AAGTwJ,YAAAA,KAAK,EAAE,wBAHE;AAIT/H,YAAAA,EAAE,EAAEmI,QAAQ,KAAK,IAAb,GAAoBxK,KAAK,CAACkC,SAAN,CAAgBnB,KAApC,GAA4C,KAAK,CAJ5C;AAKTiK,YAAAA,QAAQ,EAAE,IALD;AAMT,eAAG5I,KANM;AAOT6C,YAAAA,SAAS,EAAEC,eAPF;AAQTC,YAAAA,OAAO,EAAEuC,aARA;AASTrC,YAAAA,UAAU,EAAEC;AATH,WAAV,CADH;;AAcA,cAAIkF,QAAQ,KAAK,IAAb,IAAqB,OAAOvQ,KAAK,CAAC2C,YAAb,KAA8B,QAAnD,IAA+D3C,KAAK,CAAC2C,YAAN,CAAmBuC,MAAnB,GAA4B,CAA/F,EAAkG;AAChG0Q,YAAAA,KAAK,CAACpJ,IAAN,CACErP,CAAC,CAAC,OAAD,EAAU;AACTgT,cAAAA,KAAK,EAAE,8BADE;AAETxN,cAAAA,YAAY,EAAE3C,KAAK,CAAC2C,YAFX;AAGTuI,cAAAA,OAAO,EAAEC;AAHA,aAAV,CADH;AAOD;AACF;;AAED,YAAItG,QAAQ,CAACiC,KAAT,KAAmB,KAAK,CAAxB,IAA6B9G,KAAK,CAACgJ,OAAN,KAAkB,IAA/C,IAAuD4B,iBAAiB,CAAC9D,KAAlB,CAAwB5B,MAAxB,GAAiC,CAA5F,EAA+F;AAC7F,gBAAM2Q,IAAI,GAAGjL,iBAAiB,CAAC9D,KAAlB,CAAwBT,GAAxB,CAA4BS,KAAK,IAAI3J,CAAC,CAAC,QAAD,EAAW;AAAE2J,YAAAA,KAAF;AAAS0B,YAAAA,QAAQ,EAAE;AAAnB,WAAX,CAAtC,CAAb;AAEAoN,UAAAA,KAAK,CAACpJ,IAAN,CACErP,CAAC,CAAC,QAAD,EAAW;AACVgT,YAAAA,KAAK,EAAE,QADG;AAEVrQ,YAAAA,IAAI,EAAE+E,QAAQ,CAACiC,KAFL;AAGV3G,YAAAA,QAAQ,EAAEH,KAAK,CAACG;AAHN,WAAX,EAIE0V,IAJF,CADH;AAOD;;AAED,cAAM1N,KAAK,GAAGnI,KAAK,CAACiC,QAAN,KAAmB,IAAnB,IAA2BsO,QAAQ,KAAK,IAAxC,GAA+C,KAAK,CAApD,GAAwDxK,KAAK,CAACyK,UAAN,CAAiBC,UAAjB,CAA4B3J,KAAlG;AAEA,eAAO3J,CAAC,CAAC,KAAD,EAAQ;AACdgT,UAAAA,KAAK,EAAE,kCADO;AAEd,aAAGhI;AAFW,SAAR,EAGLyN,KAHK,CAAR;AAID,OAlHkB;AAoHnBE,MAAAA,cAAc,EAAE,MACd9V,KAAK,CAACsT,OAAN,KAAkB,IAAlB,IAA0BxP,qBAAqB,CAACgD,KAAtB,KAAgC,IAA1D,IAAkE9G,KAAK,CAACmB,gBAAN,KAA2B,IAA7F,GACI,CACEhE,CAAC,CAACU,KAAD,EAAQ;AACPsS,QAAAA,KAAK,EAAE,6BAA6B1M,IAAI,CAACqD,KAAL,KAAe,IAAf,GAAsB,aAAtB,GAAsC,EAAnE,CADA;AAEPhH,QAAAA,IAAI,EAAEkK,iBAAiB,CAAClD;AAFjB,OAAR,CADH,CADJ,GAOI;AA5Ha,KAArB;AAgIA,WAAO1I,QAAQ,CAAC2H,KAAD,CAAf;AACD;;AAz+C4B,CAAD,CAA9B","sourcesContent":["import { h, ref, computed, watch, onBeforeUpdate, onUpdated, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue'\n\nimport QField from '../field/QField.js'\nimport QIcon from '../icon/QIcon.js'\nimport QChip from '../chip/QChip.js'\n\nimport QItem from '../item/QItem.js'\nimport QItemSection from '../item/QItemSection.js'\nimport QItemLabel from '../item/QItemLabel.js'\n\nimport QMenu from '../menu/QMenu.js'\nimport QDialog from '../dialog/QDialog.js'\n\nimport useField, { useFieldState, useFieldProps, useFieldEmits, fieldValueIsFilled } from '../../composables/private/use-field.js'\nimport { useVirtualScroll, useVirtualScrollProps } from '../virtual-scroll/use-virtual-scroll.js'\nimport { useFormProps, useFormInputNameAttr } from '../../composables/private/use-form.js'\nimport useKeyComposition from '../../composables/private/use-key-composition.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { isDeepEqual } from '../../utils/private/is.js'\nimport { stop, prevent, stopAndPrevent } from '../../utils/event.js'\nimport { normalizeToInterval } from '../../utils/format.js'\nimport { shouldIgnoreKey, isKeyCode } from '../../utils/private/key-composition.js'\nimport { hMergeSlot } from '../../utils/private/render.js'\n\nconst validateNewValueMode = v => [ 'add', 'add-unique', 'toggle' ].includes(v)\nconst reEscapeList = '.*+?^${}()|[]\\\\'\nconst fieldPropsList = Object.keys(useFieldProps)\n\nexport default createComponent({\n  name: 'QSelect',\n\n  inheritAttrs: false,\n\n  props: {\n    ...useVirtualScrollProps,\n    ...useFormProps,\n    ...useFieldProps,\n\n    modelValue: {\n      required: true\n    },\n\n    multiple: Boolean,\n\n    displayValue: [ String, Number ],\n    displayValueHtml: Boolean,\n    dropdownIcon: String,\n\n    options: {\n      type: Array,\n      default: () => []\n    },\n\n    optionValue: [ Function, String ],\n    optionLabel: [ Function, String ],\n    optionDisable: [ Function, String ],\n\n    hideSelected: Boolean,\n    hideDropdownIcon: Boolean,\n    fillInput: Boolean,\n\n    maxValues: [ Number, String ],\n\n    optionsDense: Boolean,\n    optionsDark: {\n      type: Boolean,\n      default: null\n    },\n    optionsSelectedClass: String,\n    optionsHtml: Boolean,\n\n    optionsCover: Boolean,\n\n    menuShrink: Boolean,\n    menuAnchor: String,\n    menuSelf: String,\n    menuOffset: Array,\n\n    popupContentClass: String,\n    popupContentStyle: [ String, Array, Object ],\n\n    useInput: Boolean,\n    useChips: Boolean,\n\n    newValueMode: {\n      type: String,\n      validator: validateNewValueMode\n    },\n\n    mapOptions: Boolean,\n    emitValue: Boolean,\n\n    inputDebounce: {\n      type: [ Number, String ],\n      default: 500\n    },\n\n    inputClass: [ Array, String, Object ],\n    inputStyle: [ Array, String, Object ],\n\n    tabindex: {\n      type: [ String, Number ],\n      default: 0\n    },\n\n    autocomplete: String,\n\n    transitionShow: String,\n    transitionHide: String,\n    transitionDuration: [ String, Number ],\n\n    behavior: {\n      type: String,\n      validator: v => [ 'default', 'menu', 'dialog' ].includes(v),\n      default: 'default'\n    },\n\n    virtualScrollItemSize: {\n      type: [ Number, String ],\n      default: void 0\n    },\n\n    onNewValue: Function,\n    onFilter: Function\n  },\n\n  emits: [\n    ...useFieldEmits,\n    'add', 'remove', 'input-value',\n    'keyup', 'keypress', 'keydown',\n    'filter-abort'\n  ],\n\n  setup (props, { slots, emit }) {\n    const { proxy } = getCurrentInstance()\n    const { $q } = proxy\n\n    const menu = ref(false)\n    const dialog = ref(false)\n    const optionIndex = ref(-1)\n    const inputValue = ref('')\n    const dialogFieldFocused = ref(false)\n    const innerLoadingIndicator = ref(false)\n\n    let inputTimer, innerValueCache,\n      hasDialog, userInputValue, filterId, defaultInputValue,\n      transitionShowComputed, searchBuffer, searchBufferExp\n\n    const inputRef = ref(null)\n    const targetRef = ref(null)\n    const menuRef = ref(null)\n    const dialogRef = ref(null)\n    const menuContentRef = ref(null)\n\n    const nameProp = useFormInputNameAttr(props)\n\n    const onComposition = useKeyComposition(onInput)\n\n    const virtualScrollLength = computed(() => (\n      Array.isArray(props.options)\n        ? props.options.length\n        : 0\n    ))\n\n    const virtualScrollItemSizeComputed = computed(() => (\n      props.virtualScrollItemSize === void 0\n        ? (props.dense === true ? 24 : 48)\n        : props.virtualScrollItemSize\n    ))\n\n    const {\n      virtualScrollSliceRange,\n      virtualScrollSliceSizeComputed,\n      localResetVirtualScroll,\n      padVirtualScroll,\n      onVirtualScrollEvt,\n      reset,\n      scrollTo,\n      setVirtualScrollSize\n    } = useVirtualScroll({\n      virtualScrollLength, getVirtualScrollTarget, getVirtualScrollEl,\n      virtualScrollItemSizeComputed\n    })\n\n    const state = useFieldState()\n\n    const innerValue = computed(() => {\n      const\n        mapNull = props.mapOptions === true && props.multiple !== true,\n        val = props.modelValue !== void 0 && (props.modelValue !== null || mapNull === true)\n          ? (props.multiple === true && Array.isArray(props.modelValue) ? props.modelValue : [ props.modelValue ])\n          : []\n\n      if (props.mapOptions === true && Array.isArray(props.options) === true) {\n        const cache = props.mapOptions === true && innerValueCache !== void 0\n          ? innerValueCache\n          : []\n        const values = val.map(v => getOption(v, cache))\n\n        return props.modelValue === null && mapNull === true\n          ? values.filter(v => v !== null)\n          : values\n      }\n\n      return val\n    })\n\n    const innerFieldProps = computed(() => {\n      const acc = {}\n      fieldPropsList.forEach(key => {\n        const val = props[ key ]\n        if (val !== void 0) {\n          acc[ key ] = val\n        }\n      })\n      return acc\n    })\n\n    const isOptionsDark = computed(() => (\n      props.optionsDark === null\n        ? state.isDark.value\n        : props.optionsDark\n    ))\n\n    const hasValue = computed(() => fieldValueIsFilled(innerValue.value))\n\n    const computedInputClass = computed(() => {\n      let cls = 'q-field__input q-placeholder col'\n\n      if (props.hideSelected === true || innerValue.value.length === 0) {\n        return [ cls, props.inputClass ]\n      }\n\n      cls += ' q-field__input--padding'\n\n      return props.inputClass === void 0\n        ? cls\n        : [ cls, props.inputClass ]\n    })\n\n    const menuContentClass = computed(() =>\n      (props.virtualScrollHorizontal === true ? 'q-virtual-scroll--horizontal' : '')\n      + (props.popupContentClass ? ' ' + props.popupContentClass : '')\n    )\n\n    const noOptions = computed(() => virtualScrollLength.value === 0)\n\n    const selectedString = computed(() =>\n      innerValue.value\n        .map(opt => getOptionLabel.value(opt))\n        .join(', ')\n    )\n\n    const needsHtmlFn = computed(() => (\n      props.optionsHtml === true\n        ? () => true\n        : opt => opt !== void 0 && opt !== null && opt.html === true\n    ))\n\n    const valueAsHtml = computed(() => (\n      props.displayValueHtml === true || (\n        props.displayValue === void 0 && (\n          props.optionsHtml === true\n          || innerValue.value.some(needsHtmlFn.value)\n        )\n      )\n    ))\n\n    const tabindex = computed(() => (state.focused.value === true ? props.tabindex : -1))\n\n    const comboboxAttrs = computed(() => ({\n      tabindex: props.tabindex,\n      role: 'combobox',\n      'aria-label': props.label,\n      'aria-autocomplete': props.useInput === true ? 'list' : 'none',\n      'aria-expanded': menu.value === true ? 'true' : 'false',\n      'aria-owns': `${ state.targetUid.value }_lb`,\n      'aria-controls': `${ state.targetUid.value }_lb`\n    }))\n\n    const listboxAttrs = computed(() => {\n      const attrs = {\n        id: `${ state.targetUid.value }_lb`,\n        role: 'listbox',\n        'aria-multiselectable': props.multiple === true ? 'true' : 'false'\n      }\n\n      if (optionIndex.value >= 0) {\n        attrs[ 'aria-activedescendant' ] = `${ state.targetUid.value }_${ optionIndex.value }`\n      }\n\n      return attrs\n    })\n\n    const selectedScope = computed(() => {\n      return innerValue.value.map((opt, i) => ({\n        index: i,\n        opt,\n        html: needsHtmlFn.value(opt),\n        selected: true,\n        removeAtIndex: removeAtIndexAndFocus,\n        toggleOption,\n        tabindex: tabindex.value\n      }))\n    })\n\n    const optionScope = computed(() => {\n      if (virtualScrollLength.value === 0) {\n        return []\n      }\n\n      const { from, to } = virtualScrollSliceRange.value\n\n      return props.options.slice(from, to).map((opt, i) => {\n        const disable = isOptionDisabled.value(opt) === true\n        const index = from + i\n\n        const itemProps = {\n          clickable: true,\n          active: false,\n          activeClass: computedOptionsSelectedClass.value,\n          manualFocus: true,\n          focused: false,\n          disable,\n          tabindex: -1,\n          dense: props.optionsDense,\n          dark: isOptionsDark.value,\n          role: 'option',\n          id: `${ state.targetUid.value }_${ index }`,\n          onClick: () => { toggleOption(opt) }\n        }\n\n        if (disable !== true) {\n          isOptionSelected(opt) === true && (itemProps.active = true)\n          optionIndex.value === index && (itemProps.focused = true)\n\n          itemProps[ 'aria-selected' ] = itemProps.active === true ? 'true' : 'false'\n\n          if ($q.platform.is.desktop === true) {\n            itemProps.onMousemove = () => { menu.value === true && setOptionIndex(index) }\n          }\n        }\n\n        return {\n          index,\n          opt,\n          html: needsHtmlFn.value(opt),\n          label: getOptionLabel.value(opt),\n          selected: itemProps.active,\n          focused: itemProps.focused,\n          toggleOption,\n          setOptionIndex,\n          itemProps\n        }\n      })\n    })\n\n    const dropdownArrowIcon = computed(() => (\n      props.dropdownIcon !== void 0\n        ? props.dropdownIcon\n        : $q.iconSet.arrow.dropdown\n    ))\n\n    const squaredMenu = computed(() =>\n      props.optionsCover === false\n      && props.outlined !== true\n      && props.standout !== true\n      && props.borderless !== true\n      && props.rounded !== true\n    )\n\n    const computedOptionsSelectedClass = computed(() => (\n      props.optionsSelectedClass !== void 0\n        ? props.optionsSelectedClass\n        : (props.color !== void 0 ? `text-${ props.color }` : '')\n    ))\n\n    // returns method to get value of an option;\n    // takes into account 'option-value' prop\n    const getOptionValue = computed(() => getPropValueFn(props.optionValue, 'value'))\n\n    // returns method to get label of an option;\n    // takes into account 'option-label' prop\n    const getOptionLabel = computed(() => getPropValueFn(props.optionLabel, 'label'))\n\n    // returns method to tell if an option is disabled;\n    // takes into account 'option-disable' prop\n    const isOptionDisabled = computed(() => getPropValueFn(props.optionDisable, 'disable'))\n\n    const innerOptionsValue = computed(() => innerValue.value.map(opt => getOptionValue.value(opt)))\n\n    const inputControlEvents = computed(() => {\n      const evt = {\n        onInput,\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        onChange: onComposition,\n        onKeydown: onTargetKeydown,\n        onKeyup: onTargetAutocomplete,\n        onKeypress: onTargetKeypress,\n        onFocus: selectInputText,\n        onClick (e) { hasDialog === true && stop(e) }\n      }\n\n      evt.onCompositionstart = evt.onCompositionupdate = evt.onCompositionend = onComposition\n\n      return evt\n    })\n\n    watch(innerValue, val => {\n      innerValueCache = val\n\n      if (\n        props.useInput === true\n        && props.fillInput === true\n        && props.multiple !== true\n        // Prevent re-entering in filter while filtering\n        // Also prevent clearing inputValue while filtering\n        && state.innerLoading.value !== true\n        && ((dialog.value !== true && menu.value !== true) || hasValue.value !== true)\n      ) {\n        userInputValue !== true && resetInputValue()\n        if (dialog.value === true || menu.value === true) {\n          filter('')\n        }\n      }\n    }, { immediate: true })\n\n    watch(() => props.fillInput, resetInputValue)\n\n    watch(menu, updateMenu)\n\n    watch(virtualScrollLength, rerenderMenu)\n\n    function getEmittingOptionValue (opt) {\n      return props.emitValue === true\n        ? getOptionValue.value(opt)\n        : opt\n    }\n\n    function removeAtIndex (index) {\n      if (index > -1 && index < innerValue.value.length) {\n        if (props.multiple === true) {\n          const model = props.modelValue.slice()\n          emit('remove', { index, value: model.splice(index, 1)[ 0 ] })\n          emit('update:modelValue', model)\n        }\n        else {\n          emit('update:modelValue', null)\n        }\n      }\n    }\n\n    function removeAtIndexAndFocus (index) {\n      removeAtIndex(index)\n      state.focus()\n    }\n\n    function add (opt, unique) {\n      const val = getEmittingOptionValue(opt)\n\n      if (props.multiple !== true) {\n        props.fillInput === true && updateInputValue(\n          getOptionLabel.value(opt),\n          true,\n          true\n        )\n\n        emit('update:modelValue', val)\n        return\n      }\n\n      if (innerValue.value.length === 0) {\n        emit('add', { index: 0, value: val })\n        emit('update:modelValue', props.multiple === true ? [ val ] : val)\n        return\n      }\n\n      if (unique === true && isOptionSelected(opt) === true) {\n        return\n      }\n\n      if (props.maxValues !== void 0 && props.modelValue.length >= props.maxValues) {\n        return\n      }\n\n      const model = props.modelValue.slice()\n\n      emit('add', { index: model.length, value: val })\n      model.push(val)\n      emit('update:modelValue', model)\n    }\n\n    function toggleOption (opt, keepOpen) {\n      if (state.editable.value !== true || opt === void 0 || isOptionDisabled.value(opt) === true) {\n        return\n      }\n\n      const optValue = getOptionValue.value(opt)\n\n      if (props.multiple !== true) {\n        if (keepOpen !== true) {\n          updateInputValue(\n            props.fillInput === true ? getOptionLabel.value(opt) : '',\n            true,\n            true\n          )\n\n          hidePopup()\n        }\n\n        targetRef.value !== null && targetRef.value.focus()\n\n        if (\n          innerValue.value.length === 0\n          || isDeepEqual(getOptionValue.value(innerValue.value[ 0 ]), optValue) !== true\n        ) {\n          emit('update:modelValue', props.emitValue === true ? optValue : opt)\n        }\n        return\n      }\n\n      (hasDialog !== true || dialogFieldFocused.value === true) && state.focus()\n\n      selectInputText()\n\n      if (innerValue.value.length === 0) {\n        const val = props.emitValue === true ? optValue : opt\n        emit('add', { index: 0, value: val })\n        emit('update:modelValue', props.multiple === true ? [ val ] : val)\n        return\n      }\n\n      const\n        model = props.modelValue.slice(),\n        index = innerOptionsValue.value.findIndex(v => isDeepEqual(v, optValue))\n\n      if (index > -1) {\n        emit('remove', { index, value: model.splice(index, 1)[ 0 ] })\n      }\n      else {\n        if (props.maxValues !== void 0 && model.length >= props.maxValues) {\n          return\n        }\n\n        const val = props.emitValue === true ? optValue : opt\n\n        emit('add', { index: model.length, value: val })\n        model.push(val)\n      }\n\n      emit('update:modelValue', model)\n    }\n\n    function setOptionIndex (index) {\n      if ($q.platform.is.desktop !== true) { return }\n\n      const val = index > -1 && index < virtualScrollLength.value\n        ? index\n        : -1\n\n      if (optionIndex.value !== val) {\n        optionIndex.value = val\n      }\n    }\n\n    function moveOptionSelection (offset = 1, skipInputValue) {\n      if (menu.value === true) {\n        let index = optionIndex.value\n        do {\n          index = normalizeToInterval(\n            index + offset,\n            -1,\n            virtualScrollLength.value - 1\n          )\n        }\n        while (index !== -1 && index !== optionIndex.value && isOptionDisabled.value(props.options[ index ]) === true)\n\n        if (optionIndex.value !== index) {\n          setOptionIndex(index)\n          scrollTo(index)\n\n          if (skipInputValue !== true && props.useInput === true && props.fillInput === true) {\n            setInputValue(index >= 0\n              ? getOptionLabel.value(props.options[ index ])\n              : defaultInputValue\n            )\n          }\n        }\n      }\n    }\n\n    function getOption (value, valueCache) {\n      const fn = opt => isDeepEqual(getOptionValue.value(opt), value)\n      return props.options.find(fn) || valueCache.find(fn) || value\n    }\n\n    function getPropValueFn (propValue, defaultVal) {\n      const val = propValue !== void 0\n        ? propValue\n        : defaultVal\n\n      return typeof val === 'function'\n        ? val\n        : opt => (opt !== null && typeof opt === 'object' && val in opt ? opt[ val ] : opt)\n    }\n\n    function isOptionSelected (opt) {\n      const val = getOptionValue.value(opt)\n      return innerOptionsValue.value.find(v => isDeepEqual(v, val)) !== void 0\n    }\n\n    function selectInputText (e) {\n      if (\n        props.useInput === true\n        && targetRef.value !== null\n        && (e === void 0 || (targetRef.value === e.target && e.target.value === selectedString.value))\n      ) {\n        targetRef.value.select()\n      }\n    }\n\n    function onTargetKeyup (e) {\n      // if ESC and we have an opened menu\n      // then stop propagation (might be caught by a QDialog\n      // and so it will also close the QDialog, which is wrong)\n      if (isKeyCode(e, 27) === true && menu.value === true) {\n        stop(e)\n        // on ESC we need to close the dialog also\n        hidePopup()\n        resetInputValue()\n      }\n\n      emit('keyup', e)\n    }\n\n    function onTargetAutocomplete (e) {\n      const { value } = e.target\n\n      if (e.keyCode !== void 0) {\n        onTargetKeyup(e)\n        return\n      }\n\n      e.target.value = ''\n      clearTimeout(inputTimer)\n      resetInputValue()\n\n      if (typeof value === 'string' && value.length > 0) {\n        const needle = value.toLocaleLowerCase()\n        const findFn = extractFn => {\n          const option = props.options.find(opt => extractFn.value(opt).toLocaleLowerCase() === needle)\n\n          if (option === void 0) {\n            return false\n          }\n\n          if (innerValue.value.indexOf(option) === -1) {\n            toggleOption(option)\n          }\n          else {\n            hidePopup()\n          }\n\n          return true\n        }\n        const fillFn = afterFilter => {\n          if (findFn(getOptionValue) === true) {\n            return\n          }\n          if (findFn(getOptionLabel) === true || afterFilter === true) {\n            return\n          }\n\n          filter(value, true, () => fillFn(true))\n        }\n\n        fillFn()\n      }\n      else {\n        state.clearValue(e)\n      }\n    }\n\n    function onTargetKeypress (e) {\n      emit('keypress', e)\n    }\n\n    function onTargetKeydown (e) {\n      emit('keydown', e)\n\n      if (shouldIgnoreKey(e) === true) {\n        return\n      }\n\n      const newValueModeValid = inputValue.value.length > 0\n        && (props.newValueMode !== void 0 || props.onNewValue !== void 0)\n\n      const tabShouldSelect = e.shiftKey !== true\n        && props.multiple !== true\n        && (optionIndex.value > -1 || newValueModeValid === true)\n\n      // escape\n      if (e.keyCode === 27) {\n        prevent(e) // prevent clearing the inputValue\n        return\n      }\n\n      // tab\n      if (e.keyCode === 9 && tabShouldSelect === false) {\n        closeMenu()\n        return\n      }\n\n      if (e.target === void 0 || e.target.id !== state.targetUid.value) { return }\n\n      // down\n      if (\n        e.keyCode === 40\n        && state.innerLoading.value !== true\n        && menu.value === false\n      ) {\n        stopAndPrevent(e)\n        showPopup()\n        return\n      }\n\n      // backspace\n      if (\n        e.keyCode === 8\n        && props.hideSelected !== true\n        && inputValue.value.length === 0\n      ) {\n        if (props.multiple === true && Array.isArray(props.modelValue) === true) {\n          removeAtIndex(props.modelValue.length - 1)\n        }\n        else if (props.multiple !== true && props.modelValue !== null) {\n          emit('update:modelValue', null)\n        }\n        return\n      }\n\n      // home, end - 36, 35\n      if (\n        (e.keyCode === 35 || e.keyCode === 36)\n        && (typeof inputValue.value !== 'string' || inputValue.value.length === 0)\n      ) {\n        stopAndPrevent(e)\n        optionIndex.value = -1\n        moveOptionSelection(e.keyCode === 36 ? 1 : -1, props.multiple)\n      }\n\n      // pg up, pg down - 33, 34\n      if (\n        (e.keyCode === 33 || e.keyCode === 34)\n        && virtualScrollSliceSizeComputed.value !== void 0\n      ) {\n        stopAndPrevent(e)\n        optionIndex.value = Math.max(\n          -1,\n          Math.min(\n            virtualScrollLength.value,\n            optionIndex.value + (e.keyCode === 33 ? -1 : 1) * virtualScrollSliceSizeComputed.value.view\n          )\n        )\n        moveOptionSelection(e.keyCode === 33 ? 1 : -1, props.multiple)\n      }\n\n      // up, down\n      if (e.keyCode === 38 || e.keyCode === 40) {\n        stopAndPrevent(e)\n        moveOptionSelection(e.keyCode === 38 ? -1 : 1, props.multiple)\n      }\n\n      const optionsLength = virtualScrollLength.value\n\n      // clear search buffer if expired\n      if (searchBuffer === void 0 || searchBufferExp < Date.now()) {\n        searchBuffer = ''\n      }\n\n      // keyboard search when not having use-input\n      if (\n        optionsLength > 0\n        && props.useInput !== true\n        && e.key !== void 0\n        && e.key.length === 1 // printable char\n        && e.altKey === e.ctrlKey // not kbd shortcut\n        && (e.keyCode !== 32 || searchBuffer.length > 0) // space in middle of search\n      ) {\n        menu.value !== true && showPopup(e)\n\n        const\n          char = e.key.toLocaleLowerCase(),\n          keyRepeat = searchBuffer.length === 1 && searchBuffer[ 0 ] === char\n\n        searchBufferExp = Date.now() + 1500\n        if (keyRepeat === false) {\n          stopAndPrevent(e)\n          searchBuffer += char\n        }\n\n        const searchRe = new RegExp('^' + searchBuffer.split('').map(l => (reEscapeList.indexOf(l) > -1 ? '\\\\' + l : l)).join('.*'), 'i')\n\n        let index = optionIndex.value\n\n        if (keyRepeat === true || index < 0 || searchRe.test(getOptionLabel.value(props.options[ index ])) !== true) {\n          do {\n            index = normalizeToInterval(index + 1, -1, optionsLength - 1)\n          }\n          while (index !== optionIndex.value && (\n            isOptionDisabled.value(props.options[ index ]) === true\n            || searchRe.test(getOptionLabel.value(props.options[ index ])) !== true\n          ))\n        }\n\n        if (optionIndex.value !== index) {\n          nextTick(() => {\n            setOptionIndex(index)\n            scrollTo(index)\n\n            if (index >= 0 && props.useInput === true && props.fillInput === true) {\n              setInputValue(getOptionLabel.value(props.options[ index ]))\n            }\n          })\n        }\n\n        return\n      }\n\n      // enter, space (when not using use-input and not in search), or tab (when not using multiple and option selected)\n      // same target is checked above\n      if (\n        e.keyCode !== 13\n        && (e.keyCode !== 32 || props.useInput === true || searchBuffer !== '')\n        && (e.keyCode !== 9 || tabShouldSelect === false)\n      ) { return }\n\n      e.keyCode !== 9 && stopAndPrevent(e)\n\n      if (optionIndex.value > -1 && optionIndex.value < optionsLength) {\n        toggleOption(props.options[ optionIndex.value ])\n        return\n      }\n\n      if (newValueModeValid === true) {\n        const done = (val, mode) => {\n          if (mode) {\n            if (validateNewValueMode(mode) !== true) {\n              return\n            }\n          }\n          else {\n            mode = props.newValueMode\n          }\n\n          if (val === void 0 || val === null) {\n            return\n          }\n\n          updateInputValue('', props.multiple !== true, true)\n\n          const fn = mode === 'toggle' ? toggleOption : add\n          fn(val, mode === 'add-unique')\n\n          if (props.multiple !== true) {\n            targetRef.value !== null && targetRef.value.focus()\n            hidePopup()\n          }\n        }\n\n        if (props.onNewValue !== void 0) {\n          emit('new-value', inputValue.value, done)\n        }\n        else {\n          done(inputValue.value)\n        }\n\n        if (props.multiple !== true) {\n          return\n        }\n      }\n\n      if (menu.value === true) {\n        closeMenu()\n      }\n      else if (state.innerLoading.value !== true) {\n        showPopup()\n      }\n    }\n\n    function getVirtualScrollEl () {\n      return hasDialog === true\n        ? menuContentRef.value\n        : (\n            menuRef.value !== null && menuRef.value.__qPortalInnerRef.value !== null\n              ? menuRef.value.__qPortalInnerRef.value\n              : void 0\n          )\n    }\n\n    function getVirtualScrollTarget () {\n      return getVirtualScrollEl()\n    }\n\n    function getSelection () {\n      if (props.hideSelected === true) {\n        return []\n      }\n\n      if (slots[ 'selected-item' ] !== void 0) {\n        return selectedScope.value.map(scope => slots[ 'selected-item' ](scope)).slice()\n      }\n\n      if (slots.selected !== void 0) {\n        return [].concat(slots.selected())\n      }\n\n      if (props.useChips === true) {\n        return selectedScope.value.map((scope, i) => h(QChip, {\n          key: 'option-' + i,\n          removable: state.editable.value === true && isOptionDisabled.value(scope.opt) !== true,\n          dense: true,\n          textColor: props.color,\n          tabindex: tabindex.value,\n          onRemove () { scope.removeAtIndex(i) }\n        }, () => h('span', {\n          class: 'ellipsis',\n          [ scope.html === true ? 'innerHTML' : 'textContent' ]: getOptionLabel.value(scope.opt)\n        })))\n      }\n\n      return [\n        h('span', {\n          [ valueAsHtml.value === true ? 'innerHTML' : 'textContent' ]: props.displayValue !== void 0\n            ? props.displayValue\n            : selectedString.value\n        })\n      ]\n    }\n\n    function getAllOptions () {\n      if (noOptions.value === true) {\n        return slots[ 'no-option' ] !== void 0\n          ? slots[ 'no-option' ]({ inputValue: inputValue.value })\n          : void 0\n      }\n\n      const fn = slots.option !== void 0\n        ? slots.option\n        : scope => {\n          return h(QItem, {\n            key: scope.index,\n            ...scope.itemProps\n          }, () => {\n            return h(\n              QItemSection,\n              () => h(\n                QItemLabel,\n                () => h('span', {\n                  [ scope.html === true ? 'innerHTML' : 'textContent' ]: scope.label\n                })\n              )\n            )\n          })\n        }\n\n      let options = padVirtualScroll('div', optionScope.value.map(fn))\n\n      if (slots[ 'before-options' ] !== void 0) {\n        options = slots[ 'before-options' ]().concat(options)\n      }\n\n      return hMergeSlot(slots[ 'after-options' ], options)\n    }\n\n    function getInput (fromDialog, isTarget) {\n      const attrs = isTarget === true ? { ...comboboxAttrs.value, ...state.splitAttrs.attributes.value } : void 0\n\n      const data = {\n        ref: isTarget === true ? targetRef : void 0,\n        key: 'i_t',\n        class: computedInputClass.value,\n        style: props.inputStyle,\n        value: inputValue.value !== void 0 ? inputValue.value : '',\n        // required for Android in order to show ENTER key when in form\n        type: 'search',\n        ...attrs,\n        id: isTarget === true ? state.targetUid.value : void 0,\n        maxlength: props.maxlength,\n        autocomplete: props.autocomplete,\n        'data-autofocus': (fromDialog !== true && props.autofocus === true) || void 0,\n        disabled: props.disable === true,\n        readonly: props.readonly === true,\n        ...inputControlEvents.value\n      }\n\n      if (fromDialog !== true && hasDialog === true) {\n        if (Array.isArray(data.class) === true) {\n          data.class = [ ...data.class, 'no-pointer-events' ]\n        }\n        else {\n          data.class += ' no-pointer-events'\n        }\n      }\n\n      return h('input', data)\n    }\n\n    function onInput (e) {\n      clearTimeout(inputTimer)\n\n      if (e && e.target && e.target.composing === true) {\n        return\n      }\n\n      setInputValue(e.target.value || '')\n      // mark it here as user input so that if updateInputValue is called\n      // before filter is called the indicator is reset\n      userInputValue = true\n      defaultInputValue = inputValue.value\n\n      if (\n        state.focused.value !== true\n        && (hasDialog !== true || dialogFieldFocused.value === true)\n      ) {\n        state.focus()\n      }\n\n      if (props.onFilter !== void 0) {\n        inputTimer = setTimeout(() => {\n          filter(inputValue.value)\n        }, props.inputDebounce)\n      }\n    }\n\n    function setInputValue (val) {\n      if (inputValue.value !== val) {\n        inputValue.value = val\n        emit('input-value', val)\n      }\n    }\n\n    function updateInputValue (val, noFiltering, internal) {\n      userInputValue = internal !== true\n\n      if (props.useInput === true) {\n        setInputValue(val)\n\n        if (noFiltering === true || internal !== true) {\n          defaultInputValue = val\n        }\n\n        noFiltering !== true && filter(val)\n      }\n    }\n\n    function filter (val, keepClosed, afterUpdateFn) {\n      if (props.onFilter === void 0 || (keepClosed !== true && state.focused.value !== true)) {\n        return\n      }\n\n      if (state.innerLoading.value === true) {\n        emit('filter-abort')\n      }\n      else {\n        state.innerLoading.value = true\n        innerLoadingIndicator.value = true\n      }\n\n      if (\n        val !== ''\n        && props.multiple !== true\n        && innerValue.value.length > 0\n        && userInputValue !== true\n        && val === getOptionLabel.value(innerValue.value[ 0 ])\n      ) {\n        val = ''\n      }\n\n      const localFilterId = setTimeout(() => {\n        menu.value === true && (menu.value = false)\n      }, 10)\n\n      clearTimeout(filterId)\n      filterId = localFilterId\n\n      emit(\n        'filter',\n        val,\n        (fn, afterFn) => {\n          if ((keepClosed === true || state.focused.value === true) && filterId === localFilterId) {\n            clearTimeout(filterId)\n\n            typeof fn === 'function' && fn()\n\n            // hide indicator to allow arrow to animate\n            innerLoadingIndicator.value = false\n\n            nextTick(() => {\n              state.innerLoading.value = false\n\n              if (state.editable.value === true) {\n                if (keepClosed === true) {\n                  menu.value === true && hidePopup()\n                }\n                else if (menu.value === true) {\n                  updateMenu(true)\n                }\n                else {\n                  menu.value = true\n                }\n              }\n\n              typeof afterFn === 'function' && nextTick(() => { afterFn(proxy) })\n              typeof afterUpdateFn === 'function' && nextTick(() => { afterUpdateFn(proxy) })\n            })\n          }\n        },\n        () => {\n          if (state.focused.value === true && filterId === localFilterId) {\n            clearTimeout(filterId)\n            state.innerLoading.value = false\n            innerLoadingIndicator.value = false\n          }\n          menu.value === true && (menu.value = false)\n        }\n      )\n    }\n\n    function getMenu () {\n      return h(QMenu, {\n        ref: menuRef,\n        class: menuContentClass.value,\n        style: props.popupContentStyle,\n        modelValue: menu.value,\n        fit: props.menuShrink !== true,\n        cover: props.optionsCover === true && noOptions.value !== true && props.useInput !== true,\n        anchor: props.menuAnchor,\n        self: props.menuSelf,\n        offset: props.menuOffset,\n        dark: isOptionsDark.value,\n        noParentEvent: true,\n        noRefocus: true,\n        noFocus: true,\n        square: squaredMenu.value,\n        transitionShow: props.transitionShow,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        separateClosePopup: true,\n        ...listboxAttrs.value,\n        onScrollPassive: onVirtualScrollEvt,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onMenuBeforeHide,\n        onShow: onMenuShow\n      }, getAllOptions)\n    }\n\n    function onMenuBeforeHide (e) {\n      onControlPopupHide(e)\n      closeMenu()\n    }\n\n    function onMenuShow () {\n      setVirtualScrollSize()\n    }\n\n    function onDialogFieldFocus (e) {\n      stop(e)\n      targetRef.value !== null && targetRef.value.focus()\n      dialogFieldFocused.value = true\n      window.scrollTo(window.pageXOffset || window.scrollX || document.body.scrollLeft || 0, 0)\n    }\n\n    function onDialogFieldBlur (e) {\n      stop(e)\n      nextTick(() => {\n        dialogFieldFocused.value = false\n      })\n    }\n\n    function getDialog () {\n      const content = [\n        h(QField, {\n          class: `col-auto ${ state.fieldClass.value }`,\n          ...innerFieldProps.value,\n          for: state.targetUid.value,\n          dark: isOptionsDark.value,\n          square: true,\n          loading: innerLoadingIndicator.value,\n          itemAligned: false,\n          filled: true,\n          stackLabel: inputValue.value.length > 0,\n          ...state.splitAttrs.listeners.value,\n          onFocus: onDialogFieldFocus,\n          onBlur: onDialogFieldBlur\n        }, {\n          ...slots,\n          rawControl: () => state.getControl(true),\n          before: void 0,\n          after: void 0\n        })\n      ]\n\n      menu.value === true && content.push(\n        h('div', {\n          ref: menuContentRef,\n          class: menuContentClass.value + ' scroll',\n          style: props.popupContentStyle,\n          ...listboxAttrs.value,\n          onClick: prevent,\n          onScrollPassive: onVirtualScrollEvt\n        }, getAllOptions())\n      )\n\n      return h(QDialog, {\n        ref: dialogRef,\n        modelValue: dialog.value,\n        position: props.useInput === true ? 'top' : void 0,\n        transitionShow: transitionShowComputed,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onDialogBeforeHide,\n        onHide: onDialogHide,\n        onShow: onDialogShow\n      }, () => h('div', {\n        class: 'q-select__dialog'\n          + (isOptionsDark.value === true ? ' q-select__dialog--dark q-dark' : '')\n          + (dialogFieldFocused.value === true ? ' q-select__dialog--focused' : '')\n      }, content))\n    }\n\n    function onDialogBeforeHide (e) {\n      onControlPopupHide(e)\n\n      if (dialogRef.value !== null) {\n        dialogRef.value.__updateRefocusTarget(\n          state.rootRef.value.querySelector('.q-field__native > [tabindex]:last-child')\n        )\n      }\n\n      state.focused.value = false\n    }\n\n    function onDialogHide (e) {\n      hidePopup()\n      state.focused.value === false && emit('blur', e)\n      resetInputValue()\n    }\n\n    function onDialogShow () {\n      const el = document.activeElement\n      if (\n        (el === null || el.id !== state.targetUid.value)\n        && targetRef.value !== null\n        && targetRef.value !== el\n      ) {\n        targetRef.value.focus()\n      }\n\n      setVirtualScrollSize()\n    }\n\n    function closeMenu () {\n      if (dialog.value === true) {\n        return\n      }\n\n      optionIndex.value = -1\n\n      if (menu.value === true) {\n        menu.value = false\n      }\n\n      if (state.focused.value === false) {\n        clearTimeout(filterId)\n        filterId = void 0\n\n        if (state.innerLoading.value === true) {\n          emit('filter-abort')\n          state.innerLoading.value = false\n          innerLoadingIndicator.value = false\n        }\n      }\n    }\n\n    function showPopup (e) {\n      if (state.editable.value !== true) {\n        return\n      }\n\n      if (hasDialog === true) {\n        state.onControlFocusin(e)\n        dialog.value = true\n        nextTick(() => {\n          state.focus()\n        })\n      }\n      else {\n        state.focus()\n      }\n\n      if (props.onFilter !== void 0) {\n        filter(inputValue.value)\n      }\n      else if (noOptions.value !== true || slots[ 'no-option' ] !== void 0) {\n        menu.value = true\n      }\n    }\n\n    function hidePopup () {\n      dialog.value = false\n      closeMenu()\n    }\n\n    function resetInputValue () {\n      props.useInput === true && updateInputValue(\n        props.multiple !== true && props.fillInput === true && innerValue.value.length > 0\n          ? getOptionLabel.value(innerValue.value[ 0 ]) || ''\n          : '',\n        true,\n        true\n      )\n    }\n\n    function updateMenu (show) {\n      let optionIndex = -1\n\n      if (show === true) {\n        if (innerValue.value.length > 0) {\n          const val = getOptionValue.value(innerValue.value[ 0 ])\n          optionIndex = props.options.findIndex(v => isDeepEqual(getOptionValue.value(v), val))\n        }\n\n        localResetVirtualScroll(optionIndex)\n      }\n\n      setOptionIndex(optionIndex)\n    }\n\n    function rerenderMenu () {\n      if (menu.value === true && state.innerLoading.value === false) {\n        reset()\n\n        nextTick(() => {\n          if (menu.value === true && state.innerLoading.value === false) {\n            updateMenu(true)\n          }\n        })\n      }\n    }\n\n    function updateMenuPosition () {\n      if (dialog.value === false && menuRef.value !== null) {\n        menuRef.value.updatePosition()\n      }\n    }\n\n    function onControlPopupShow (e) {\n      e !== void 0 && stop(e)\n      emit('popup-show', e)\n      state.hasPopupOpen = true\n      state.onControlFocusin(e)\n    }\n\n    function onControlPopupHide (e) {\n      e !== void 0 && stop(e)\n      emit('popup-hide', e)\n      state.hasPopupOpen = false\n      state.onControlFocusout(e)\n    }\n\n    function updatePreState () {\n      hasDialog = $q.platform.is.mobile !== true && props.behavior !== 'dialog'\n        ? false\n        : props.behavior !== 'menu' && (\n          props.useInput === true\n            ? slots[ 'no-option' ] !== void 0 || props.onFilter !== void 0 || noOptions.value === false\n            : true\n        )\n\n      transitionShowComputed = $q.platform.is.ios === true && hasDialog === true && props.useInput === true\n        ? 'fade'\n        : props.transitionShow\n    }\n\n    onBeforeUpdate(updatePreState)\n    onUpdated(updateMenuPosition)\n\n    updatePreState()\n\n    onBeforeUnmount(() => {\n      clearTimeout(inputTimer)\n    })\n\n    // expose public methods\n    Object.assign(proxy, {\n      showPopup, hidePopup,\n      removeAtIndex, add, toggleOption,\n      getOptionIndex: () => optionIndex.value,\n      setOptionIndex, moveOptionSelection,\n      filter, updateMenuPosition, updateInputValue,\n      isOptionSelected,\n      getEmittingOptionValue,\n      isOptionDisabled: (...args) => isOptionDisabled.value.apply(null, args) === true,\n      getOptionValue: (...args) => getOptionValue.value.apply(null, args),\n      getOptionLabel: (...args) => getOptionLabel.value.apply(null, args)\n    })\n\n    Object.assign(state, {\n      innerValue,\n\n      fieldClass: computed(() =>\n        `q-select q-field--auto-height q-select--with${ props.useInput !== true ? 'out' : '' }-input`\n        + ` q-select--with${ props.useChips !== true ? 'out' : '' }-chips`\n        + ` q-select--${ props.multiple === true ? 'multiple' : 'single' }`\n      ),\n\n      inputRef,\n      targetRef,\n      hasValue,\n      showPopup,\n\n      floatingLabel: computed(() =>\n        (props.hideSelected === true\n          ? inputValue.value.length > 0\n          : hasValue.value === true\n        )\n        || fieldValueIsFilled(props.displayValue)\n      ),\n\n      getControlChild: () => {\n        if (\n          state.editable.value !== false && (\n            dialog.value === true // dialog always has menu displayed, so need to render it\n            || noOptions.value !== true\n            || slots[ 'no-option' ] !== void 0\n          )\n        ) {\n          return hasDialog === true ? getDialog() : getMenu()\n        }\n        else if (state.hasPopupOpen === true) {\n          // explicitly set it otherwise TAB will not blur component\n          state.hasPopupOpen = false\n        }\n      },\n\n      controlEvents: {\n        onFocusin (e) { state.onControlFocusin(e) },\n        onFocusout (e) {\n          state.onControlFocusout(e, () => {\n            resetInputValue()\n            closeMenu()\n          })\n        },\n        onClick (e) {\n          // label from QField will propagate click on the input\n          prevent(e)\n\n          if (hasDialog !== true && menu.value === true) {\n            closeMenu()\n            targetRef.value !== null && targetRef.value.focus()\n            return\n          }\n\n          showPopup(e)\n        }\n      },\n\n      getControl: fromDialog => {\n        const child = getSelection()\n        const isTarget = fromDialog === true || dialog.value !== true || hasDialog !== true\n\n        if (props.useInput === true) {\n          child.push(getInput(fromDialog, isTarget))\n        }\n        // there can be only one (when dialog is opened the control in dialog should be target)\n        else if (state.editable.value === true) {\n          const attrs = isTarget === true ? comboboxAttrs.value : void 0\n\n          child.push(\n            h('input', {\n              ref: isTarget === true ? targetRef : void 0,\n              key: 'd_t',\n              class: 'q-select__focus-target',\n              id: isTarget === true ? state.targetUid.value : void 0,\n              readonly: true,\n              ...attrs,\n              onKeydown: onTargetKeydown,\n              onKeyup: onTargetKeyup,\n              onKeypress: onTargetKeypress\n            })\n          )\n\n          if (isTarget === true && typeof props.autocomplete === 'string' && props.autocomplete.length > 0) {\n            child.push(\n              h('input', {\n                class: 'q-select__autocomplete-input',\n                autocomplete: props.autocomplete,\n                onKeyup: onTargetAutocomplete\n              })\n            )\n          }\n        }\n\n        if (nameProp.value !== void 0 && props.disable !== true && innerOptionsValue.value.length > 0) {\n          const opts = innerOptionsValue.value.map(value => h('option', { value, selected: true }))\n\n          child.push(\n            h('select', {\n              class: 'hidden',\n              name: nameProp.value,\n              multiple: props.multiple\n            }, opts)\n          )\n        }\n\n        const attrs = props.useInput === true || isTarget !== true ? void 0 : state.splitAttrs.attributes.value\n\n        return h('div', {\n          class: 'q-field__native row items-center',\n          ...attrs\n        }, child)\n      },\n\n      getInnerAppend: () => (\n        props.loading !== true && innerLoadingIndicator.value !== true && props.hideDropdownIcon !== true\n          ? [\n              h(QIcon, {\n                class: 'q-select__dropdown-icon' + (menu.value === true ? ' rotate-180' : ''),\n                name: dropdownArrowIcon.value\n              })\n            ]\n          : null\n      )\n    })\n\n    return useField(state)\n  }\n})\n"]},"metadata":{},"sourceType":"module"}