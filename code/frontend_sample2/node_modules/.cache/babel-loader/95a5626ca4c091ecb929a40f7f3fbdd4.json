{"ast":null,"code":"import { h, ref, computed, watch, onBeforeUnmount, nextTick, Transition, getCurrentInstance } from 'vue';\nimport useHistory from '../../composables/private/use-history.js';\nimport useTimeout from '../../composables/private/use-timeout.js';\nimport useTick from '../../composables/private/use-tick.js';\nimport useModelToggle, { useModelToggleProps, useModelToggleEmits } from '../../composables/private/use-model-toggle.js';\nimport { useTransitionProps } from '../../composables/private/use-transition.js';\nimport usePortal from '../../composables/private/use-portal.js';\nimport usePreventScroll from '../../composables/private/use-prevent-scroll.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { childHasFocus } from '../../utils/dom.js';\nimport { hSlot } from '../../utils/private/render.js';\nimport { addEscapeKey, removeEscapeKey } from '../../utils/private/escape-key.js';\nimport { addFocusout, removeFocusout } from '../../utils/private/focusout.js';\nimport { addFocusFn } from '../../utils/private/focus-manager.js';\nlet maximizedModals = 0;\nconst positionClass = {\n  standard: 'fixed-full flex-center',\n  top: 'fixed-top justify-center',\n  bottom: 'fixed-bottom justify-center',\n  right: 'fixed-right items-center',\n  left: 'fixed-left items-center'\n};\nconst transitions = {\n  standard: ['scale', 'scale'],\n  top: ['slide-down', 'slide-up'],\n  bottom: ['slide-up', 'slide-down'],\n  right: ['slide-left', 'slide-right'],\n  left: ['slide-right', 'slide-left']\n};\nexport default createComponent({\n  name: 'QDialog',\n  inheritAttrs: false,\n  props: { ...useModelToggleProps,\n    ...useTransitionProps,\n    transitionShow: String,\n    transitionHide: String,\n    persistent: Boolean,\n    autoClose: Boolean,\n    noEscDismiss: Boolean,\n    noBackdropDismiss: Boolean,\n    noRouteDismiss: Boolean,\n    noRefocus: Boolean,\n    noFocus: Boolean,\n    noShake: Boolean,\n    seamless: Boolean,\n    maximized: Boolean,\n    fullWidth: Boolean,\n    fullHeight: Boolean,\n    square: Boolean,\n    position: {\n      type: String,\n      default: 'standard',\n      validator: val => val === 'standard' || ['top', 'bottom', 'left', 'right'].includes(val)\n    }\n  },\n  emits: [...useModelToggleEmits, 'shake', 'click', 'escape-key'],\n\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    const vm = getCurrentInstance();\n    const innerRef = ref(null);\n    const showing = ref(false);\n    const transitionState = ref(false);\n    const animating = ref(false);\n    let shakeTimeout,\n        refocusTarget = null,\n        isMaximized,\n        avoidAutoClose;\n    const hideOnRouteChange = computed(() => props.persistent !== true && props.noRouteDismiss !== true && props.seamless !== true);\n    const {\n      preventBodyScroll\n    } = usePreventScroll();\n    const {\n      registerTimeout,\n      removeTimeout\n    } = useTimeout();\n    const {\n      registerTick,\n      removeTick\n    } = useTick();\n    const {\n      showPortal,\n      hidePortal,\n      portalIsActive,\n      renderPortal\n    } = usePortal(vm, innerRef, renderPortalContent,\n    /* pls do check if on a global dialog */\n    true);\n    const {\n      hide\n    } = useModelToggle({\n      showing,\n      hideOnRouteChange,\n      handleShow,\n      handleHide,\n      processOnMount: true\n    });\n    const {\n      addToHistory,\n      removeFromHistory\n    } = useHistory(showing, hide, hideOnRouteChange);\n    const classes = computed(() => 'q-dialog__inner flex no-pointer-events' + ` q-dialog__inner--${props.maximized === true ? 'maximized' : 'minimized'}` + ` q-dialog__inner--${props.position} ${positionClass[props.position]}` + (animating.value === true ? ' q-dialog__inner--animating' : '') + (props.fullWidth === true ? ' q-dialog__inner--fullwidth' : '') + (props.fullHeight === true ? ' q-dialog__inner--fullheight' : '') + (props.square === true ? ' q-dialog__inner--square' : ''));\n    const transitionShow = computed(() => 'q-transition--' + (props.transitionShow === void 0 ? transitions[props.position][0] : props.transitionShow));\n    const transitionHide = computed(() => 'q-transition--' + (props.transitionHide === void 0 ? transitions[props.position][1] : props.transitionHide));\n    const transition = computed(() => transitionState.value === true ? transitionHide.value : transitionShow.value);\n    const transitionStyle = computed(() => `--q-transition-duration: ${props.transitionDuration}ms`);\n    const useBackdrop = computed(() => showing.value === true && props.seamless !== true);\n    const onEvents = computed(() => props.autoClose === true ? {\n      onClick: onAutoClose\n    } : {});\n    const rootClasses = computed(() => ['q-dialog fullscreen no-pointer-events ' + `q-dialog--${useBackdrop.value === true ? 'modal' : 'seamless'}`, attrs.class]);\n    watch(showing, val => {\n      nextTick(() => {\n        transitionState.value = val;\n      });\n    });\n    watch(() => props.maximized, state => {\n      showing.value === true && updateMaximized(state);\n    });\n    watch(useBackdrop, val => {\n      preventBodyScroll(val);\n\n      if (val === true) {\n        addFocusout(onFocusChange);\n        addEscapeKey(onEscapeKey);\n      } else {\n        removeFocusout(onFocusChange);\n        removeEscapeKey(onEscapeKey);\n      }\n    });\n\n    function handleShow(evt) {\n      removeTimeout();\n      removeTick();\n      addToHistory();\n      refocusTarget = props.noRefocus === false && document.activeElement !== null ? document.activeElement : null;\n      updateMaximized(props.maximized);\n      showPortal();\n      animating.value = true;\n\n      if (props.noFocus !== true) {\n        document.activeElement !== null && document.activeElement.blur();\n        registerTick(focus);\n      }\n\n      registerTimeout(() => {\n        if (vm.proxy.$q.platform.is.ios === true) {\n          if (props.seamless !== true && document.activeElement) {\n            const {\n              top,\n              bottom\n            } = document.activeElement.getBoundingClientRect(),\n                  {\n              innerHeight\n            } = window,\n                  height = window.visualViewport !== void 0 ? window.visualViewport.height : innerHeight;\n\n            if (top > 0 && bottom > height / 2) {\n              document.scrollingElement.scrollTop = Math.min(document.scrollingElement.scrollHeight - height, bottom >= innerHeight ? Infinity : Math.ceil(document.scrollingElement.scrollTop + bottom - height / 2));\n            }\n\n            document.activeElement.scrollIntoView();\n          } // required in order to avoid the \"double-tap needed\" issue\n\n\n          avoidAutoClose = true;\n          innerRef.value.click();\n          avoidAutoClose = false;\n        }\n\n        showPortal(true); // done showing portal\n\n        animating.value = false;\n        emit('show', evt);\n      }, props.transitionDuration);\n    }\n\n    function handleHide(evt) {\n      removeTimeout();\n      removeTick();\n      removeFromHistory();\n      cleanup(true);\n      animating.value = true;\n\n      if (refocusTarget !== null) {\n        refocusTarget.focus();\n        refocusTarget = null;\n      }\n\n      registerTimeout(() => {\n        hidePortal();\n        animating.value = false;\n        emit('hide', evt);\n      }, props.transitionDuration);\n    }\n\n    function focus(selector) {\n      addFocusFn(() => {\n        let node = innerRef.value;\n\n        if (node === null || node.contains(document.activeElement) === true) {\n          return;\n        }\n\n        node = node.querySelector(selector || '[autofocus], [data-autofocus]') || node;\n        node.focus({\n          preventScroll: true\n        });\n      });\n    }\n\n    function shake() {\n      focus();\n      emit('shake');\n      const node = innerRef.value;\n\n      if (node !== null) {\n        node.classList.remove('q-animate--scale');\n        node.classList.add('q-animate--scale');\n        clearTimeout(shakeTimeout);\n        shakeTimeout = setTimeout(() => {\n          if (innerRef.value !== null) {\n            node.classList.remove('q-animate--scale'); // some platforms (like desktop Chrome)\n            // require calling focus() again\n\n            focus();\n          }\n        }, 170);\n      }\n    }\n\n    function onEscapeKey() {\n      if (props.seamless !== true) {\n        if (props.persistent === true || props.noEscDismiss === true) {\n          props.maximized !== true && props.noShake !== true && shake();\n        } else {\n          emit('escape-key');\n          hide();\n        }\n      }\n    }\n\n    function cleanup(hiding) {\n      clearTimeout(shakeTimeout);\n\n      if (hiding === true || showing.value === true) {\n        updateMaximized(false);\n\n        if (props.seamless !== true) {\n          preventBodyScroll(false);\n          removeFocusout(onFocusChange);\n          removeEscapeKey(onEscapeKey);\n        }\n      }\n\n      if (hiding !== true) {\n        refocusTarget = null;\n      }\n    }\n\n    function updateMaximized(active) {\n      if (active === true) {\n        if (isMaximized !== true) {\n          maximizedModals < 1 && document.body.classList.add('q-body--dialog');\n          maximizedModals++;\n          isMaximized = true;\n        }\n      } else if (isMaximized === true) {\n        if (maximizedModals < 2) {\n          document.body.classList.remove('q-body--dialog');\n        }\n\n        maximizedModals--;\n        isMaximized = false;\n      }\n    }\n\n    function onAutoClose(e) {\n      if (avoidAutoClose !== true) {\n        hide(e);\n        emit('click', e);\n      }\n    }\n\n    function onBackdropClick(e) {\n      if (props.persistent !== true && props.noBackdropDismiss !== true) {\n        hide(e);\n      } else if (props.noShake !== true) {\n        shake();\n      }\n    }\n\n    function onFocusChange(evt) {\n      // the focus is not in a vue child component\n      if (showing.value === true && portalIsActive.value === true && childHasFocus(innerRef.value, evt.target) !== true) {\n        focus('[tabindex]:not([tabindex=\"-1\"])');\n      }\n    }\n\n    Object.assign(vm.proxy, {\n      // expose public methods\n      focus,\n      shake,\n\n      // private but needed by QSelect\n      __updateRefocusTarget(target) {\n        refocusTarget = target || null;\n      }\n\n    });\n    onBeforeUnmount(cleanup);\n\n    function renderPortalContent() {\n      return h('div', { ...attrs,\n        class: rootClasses.value\n      }, [h(Transition, {\n        name: 'q-transition--fade',\n        appear: true\n      }, () => useBackdrop.value === true ? h('div', {\n        class: 'q-dialog__backdrop fixed-full',\n        style: transitionStyle.value,\n        'aria-hidden': 'true',\n        onMousedown: onBackdropClick\n      }) : null), h(Transition, {\n        name: transition.value,\n        appear: true\n      }, () => showing.value === true ? h('div', {\n        ref: innerRef,\n        class: classes.value,\n        style: transitionStyle.value,\n        tabindex: -1,\n        ...onEvents.value\n      }, hSlot(slots.default)) : null)]);\n    }\n\n    return renderPortal;\n  }\n\n});","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/components/dialog/QDialog.js"],"names":["h","ref","computed","watch","onBeforeUnmount","nextTick","Transition","getCurrentInstance","useHistory","useTimeout","useTick","useModelToggle","useModelToggleProps","useModelToggleEmits","useTransitionProps","usePortal","usePreventScroll","createComponent","childHasFocus","hSlot","addEscapeKey","removeEscapeKey","addFocusout","removeFocusout","addFocusFn","maximizedModals","positionClass","standard","top","bottom","right","left","transitions","name","inheritAttrs","props","transitionShow","String","transitionHide","persistent","Boolean","autoClose","noEscDismiss","noBackdropDismiss","noRouteDismiss","noRefocus","noFocus","noShake","seamless","maximized","fullWidth","fullHeight","square","position","type","default","validator","val","includes","emits","setup","slots","emit","attrs","vm","innerRef","showing","transitionState","animating","shakeTimeout","refocusTarget","isMaximized","avoidAutoClose","hideOnRouteChange","preventBodyScroll","registerTimeout","removeTimeout","registerTick","removeTick","showPortal","hidePortal","portalIsActive","renderPortal","renderPortalContent","hide","handleShow","handleHide","processOnMount","addToHistory","removeFromHistory","classes","value","transition","transitionStyle","transitionDuration","useBackdrop","onEvents","onClick","onAutoClose","rootClasses","class","state","updateMaximized","onFocusChange","onEscapeKey","evt","document","activeElement","blur","focus","proxy","$q","platform","is","ios","getBoundingClientRect","innerHeight","window","height","visualViewport","scrollingElement","scrollTop","Math","min","scrollHeight","Infinity","ceil","scrollIntoView","click","cleanup","selector","node","contains","querySelector","preventScroll","shake","classList","remove","add","clearTimeout","setTimeout","hiding","active","body","e","onBackdropClick","target","Object","assign","__updateRefocusTarget","appear","style","onMousedown","tabindex"],"mappings":"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","sourcesContent":["import { h, ref, computed, watch, onBeforeUnmount, nextTick, Transition, getCurrentInstance } from 'vue'\n\nimport useHistory from '../../composables/private/use-history.js'\nimport useTimeout from '../../composables/private/use-timeout.js'\nimport useTick from '../../composables/private/use-tick.js'\nimport useModelToggle, { useModelToggleProps, useModelToggleEmits } from '../../composables/private/use-model-toggle.js'\nimport { useTransitionProps } from '../../composables/private/use-transition.js'\nimport usePortal from '../../composables/private/use-portal.js'\nimport usePreventScroll from '../../composables/private/use-prevent-scroll.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { childHasFocus } from '../../utils/dom.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { addEscapeKey, removeEscapeKey } from '../../utils/private/escape-key.js'\nimport { addFocusout, removeFocusout } from '../../utils/private/focusout.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\n\nlet maximizedModals = 0\n\nconst positionClass = {\n  standard: 'fixed-full flex-center',\n  top: 'fixed-top justify-center',\n  bottom: 'fixed-bottom justify-center',\n  right: 'fixed-right items-center',\n  left: 'fixed-left items-center'\n}\n\nconst transitions = {\n  standard: [ 'scale', 'scale' ],\n  top: [ 'slide-down', 'slide-up' ],\n  bottom: [ 'slide-up', 'slide-down' ],\n  right: [ 'slide-left', 'slide-right' ],\n  left: [ 'slide-right', 'slide-left' ]\n}\n\nexport default createComponent({\n  name: 'QDialog',\n\n  inheritAttrs: false,\n\n  props: {\n    ...useModelToggleProps,\n    ...useTransitionProps,\n\n    transitionShow: String,\n    transitionHide: String,\n\n    persistent: Boolean,\n    autoClose: Boolean,\n\n    noEscDismiss: Boolean,\n    noBackdropDismiss: Boolean,\n    noRouteDismiss: Boolean,\n    noRefocus: Boolean,\n    noFocus: Boolean,\n    noShake: Boolean,\n\n    seamless: Boolean,\n\n    maximized: Boolean,\n    fullWidth: Boolean,\n    fullHeight: Boolean,\n\n    square: Boolean,\n\n    position: {\n      type: String,\n      default: 'standard',\n      validator: val => val === 'standard'\n        || [ 'top', 'bottom', 'left', 'right' ].includes(val)\n    }\n  },\n\n  emits: [\n    ...useModelToggleEmits,\n    'shake', 'click', 'escape-key'\n  ],\n\n  setup (props, { slots, emit, attrs }) {\n    const vm = getCurrentInstance()\n\n    const innerRef = ref(null)\n    const showing = ref(false)\n    const transitionState = ref(false)\n    const animating = ref(false)\n\n    let shakeTimeout, refocusTarget = null, isMaximized, avoidAutoClose\n\n    const hideOnRouteChange = computed(() =>\n      props.persistent !== true\n      && props.noRouteDismiss !== true\n      && props.seamless !== true\n    )\n\n    const { preventBodyScroll } = usePreventScroll()\n    const { registerTimeout, removeTimeout } = useTimeout()\n    const { registerTick, removeTick } = useTick()\n\n    const { showPortal, hidePortal, portalIsActive, renderPortal } = usePortal(\n      vm, innerRef, renderPortalContent, /* pls do check if on a global dialog */ true\n    )\n\n    const { hide } = useModelToggle({\n      showing,\n      hideOnRouteChange,\n      handleShow,\n      handleHide,\n      processOnMount: true\n    })\n\n    const { addToHistory, removeFromHistory } = useHistory(showing, hide, hideOnRouteChange)\n\n    const classes = computed(() =>\n      'q-dialog__inner flex no-pointer-events'\n      + ` q-dialog__inner--${ props.maximized === true ? 'maximized' : 'minimized' }`\n      + ` q-dialog__inner--${ props.position } ${ positionClass[ props.position ] }`\n      + (animating.value === true ? ' q-dialog__inner--animating' : '')\n      + (props.fullWidth === true ? ' q-dialog__inner--fullwidth' : '')\n      + (props.fullHeight === true ? ' q-dialog__inner--fullheight' : '')\n      + (props.square === true ? ' q-dialog__inner--square' : '')\n    )\n\n    const transitionShow = computed(() =>\n      'q-transition--'\n      + (props.transitionShow === void 0 ? transitions[ props.position ][ 0 ] : props.transitionShow)\n    )\n\n    const transitionHide = computed(() =>\n      'q-transition--'\n      + (props.transitionHide === void 0 ? transitions[ props.position ][ 1 ] : props.transitionHide)\n    )\n\n    const transition = computed(() => (\n      transitionState.value === true\n        ? transitionHide.value\n        : transitionShow.value\n    ))\n\n    const transitionStyle = computed(\n      () => `--q-transition-duration: ${ props.transitionDuration }ms`\n    )\n\n    const useBackdrop = computed(() => showing.value === true && props.seamless !== true)\n\n    const onEvents = computed(() => (\n      props.autoClose === true\n        ? { onClick: onAutoClose }\n        : {}\n    ))\n\n    const rootClasses = computed(() => [\n      'q-dialog fullscreen no-pointer-events '\n        + `q-dialog--${ useBackdrop.value === true ? 'modal' : 'seamless' }`,\n      attrs.class\n    ])\n\n    watch(showing, val => {\n      nextTick(() => {\n        transitionState.value = val\n      })\n    })\n\n    watch(() => props.maximized, state => {\n      showing.value === true && updateMaximized(state)\n    })\n\n    watch(useBackdrop, val => {\n      preventBodyScroll(val)\n\n      if (val === true) {\n        addFocusout(onFocusChange)\n        addEscapeKey(onEscapeKey)\n      }\n      else {\n        removeFocusout(onFocusChange)\n        removeEscapeKey(onEscapeKey)\n      }\n    })\n\n    function handleShow (evt) {\n      removeTimeout()\n      removeTick()\n      addToHistory()\n\n      refocusTarget = props.noRefocus === false && document.activeElement !== null\n        ? document.activeElement\n        : null\n\n      updateMaximized(props.maximized)\n      showPortal()\n      animating.value = true\n\n      if (props.noFocus !== true) {\n        document.activeElement !== null && document.activeElement.blur()\n        registerTick(focus)\n      }\n\n      registerTimeout(() => {\n        if (vm.proxy.$q.platform.is.ios === true) {\n          if (props.seamless !== true && document.activeElement) {\n            const\n              { top, bottom } = document.activeElement.getBoundingClientRect(),\n              { innerHeight } = window,\n              height = window.visualViewport !== void 0\n                ? window.visualViewport.height\n                : innerHeight\n\n            if (top > 0 && bottom > height / 2) {\n              document.scrollingElement.scrollTop = Math.min(\n                document.scrollingElement.scrollHeight - height,\n                bottom >= innerHeight\n                  ? Infinity\n                  : Math.ceil(document.scrollingElement.scrollTop + bottom - height / 2)\n              )\n            }\n\n            document.activeElement.scrollIntoView()\n          }\n\n          // required in order to avoid the \"double-tap needed\" issue\n          avoidAutoClose = true\n          innerRef.value.click()\n          avoidAutoClose = false\n        }\n\n        showPortal(true) // done showing portal\n        animating.value = false\n        emit('show', evt)\n      }, props.transitionDuration)\n    }\n\n    function handleHide (evt) {\n      removeTimeout()\n      removeTick()\n      removeFromHistory()\n      cleanup(true)\n      animating.value = true\n\n      if (refocusTarget !== null) {\n        refocusTarget.focus()\n        refocusTarget = null\n      }\n\n      registerTimeout(() => {\n        hidePortal()\n        animating.value = false\n        emit('hide', evt)\n      }, props.transitionDuration)\n    }\n\n    function focus (selector) {\n      addFocusFn(() => {\n        let node = innerRef.value\n\n        if (node === null || node.contains(document.activeElement) === true) {\n          return\n        }\n\n        node = node.querySelector(selector || '[autofocus], [data-autofocus]') || node\n        node.focus({ preventScroll: true })\n      })\n    }\n\n    function shake () {\n      focus()\n      emit('shake')\n\n      const node = innerRef.value\n\n      if (node !== null) {\n        node.classList.remove('q-animate--scale')\n        node.classList.add('q-animate--scale')\n        clearTimeout(shakeTimeout)\n        shakeTimeout = setTimeout(() => {\n          if (innerRef.value !== null) {\n            node.classList.remove('q-animate--scale')\n            // some platforms (like desktop Chrome)\n            // require calling focus() again\n            focus()\n          }\n        }, 170)\n      }\n    }\n\n    function onEscapeKey () {\n      if (props.seamless !== true) {\n        if (props.persistent === true || props.noEscDismiss === true) {\n          props.maximized !== true && props.noShake !== true && shake()\n        }\n        else {\n          emit('escape-key')\n          hide()\n        }\n      }\n    }\n\n    function cleanup (hiding) {\n      clearTimeout(shakeTimeout)\n\n      if (hiding === true || showing.value === true) {\n        updateMaximized(false)\n\n        if (props.seamless !== true) {\n          preventBodyScroll(false)\n          removeFocusout(onFocusChange)\n          removeEscapeKey(onEscapeKey)\n        }\n      }\n\n      if (hiding !== true) {\n        refocusTarget = null\n      }\n    }\n\n    function updateMaximized (active) {\n      if (active === true) {\n        if (isMaximized !== true) {\n          maximizedModals < 1 && document.body.classList.add('q-body--dialog')\n          maximizedModals++\n\n          isMaximized = true\n        }\n      }\n      else if (isMaximized === true) {\n        if (maximizedModals < 2) {\n          document.body.classList.remove('q-body--dialog')\n        }\n\n        maximizedModals--\n        isMaximized = false\n      }\n    }\n\n    function onAutoClose (e) {\n      if (avoidAutoClose !== true) {\n        hide(e)\n        emit('click', e)\n      }\n    }\n\n    function onBackdropClick (e) {\n      if (props.persistent !== true && props.noBackdropDismiss !== true) {\n        hide(e)\n      }\n      else if (props.noShake !== true) {\n        shake()\n      }\n    }\n\n    function onFocusChange (evt) {\n      // the focus is not in a vue child component\n      if (\n        showing.value === true\n        && portalIsActive.value === true\n        && childHasFocus(innerRef.value, evt.target) !== true\n      ) {\n        focus('[tabindex]:not([tabindex=\"-1\"])')\n      }\n    }\n\n    Object.assign(vm.proxy, {\n      // expose public methods\n      focus, shake,\n\n      // private but needed by QSelect\n      __updateRefocusTarget (target) {\n        refocusTarget = target || null\n      }\n    })\n\n    onBeforeUnmount(cleanup)\n\n    function renderPortalContent () {\n      return h('div', {\n        ...attrs,\n        class: rootClasses.value\n      }, [\n        h(Transition, {\n          name: 'q-transition--fade',\n          appear: true\n        }, () => (\n          useBackdrop.value === true\n            ? h('div', {\n              class: 'q-dialog__backdrop fixed-full',\n              style: transitionStyle.value,\n              'aria-hidden': 'true',\n              onMousedown: onBackdropClick\n            })\n            : null\n        )),\n\n        h(\n          Transition,\n          { name: transition.value, appear: true },\n          () => (\n            showing.value === true\n              ? h('div', {\n                ref: innerRef,\n                class: classes.value,\n                style: transitionStyle.value,\n                tabindex: -1,\n                ...onEvents.value\n              }, hSlot(slots.default))\n              : null\n          )\n        )\n      ])\n    }\n\n    return renderPortal\n  }\n})\n"]},"metadata":{},"sourceType":"module"}