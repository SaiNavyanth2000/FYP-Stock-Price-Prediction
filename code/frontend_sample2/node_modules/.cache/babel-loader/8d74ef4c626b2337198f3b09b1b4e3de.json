{"ast":null,"code":"import { watch, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue';\nimport { createComponent } from '../../utils/private/create.js';\nimport { getScrollTarget, getVerticalScrollPosition, getHorizontalScrollPosition } from '../../utils/scroll.js';\nimport { listenOpts, noop } from '../../utils/event.js';\nconst {\n  passive\n} = listenOpts;\nconst axisValues = ['both', 'horizontal', 'vertical'];\nexport default createComponent({\n  name: 'QScrollObserver',\n  props: {\n    axis: {\n      type: String,\n      validator: v => axisValues.includes(v),\n      default: 'vertical'\n    },\n    debounce: [String, Number],\n    scrollTarget: {\n      default: void 0\n    }\n  },\n  emits: ['scroll'],\n\n  setup(props, {\n    emit\n  }) {\n    const scroll = {\n      position: {\n        top: 0,\n        left: 0\n      },\n      direction: 'down',\n      directionChanged: false,\n      delta: {\n        top: 0,\n        left: 0\n      },\n      inflectionPoint: {\n        top: 0,\n        left: 0\n      }\n    };\n    let clearTimer = null,\n        localScrollTarget,\n        parentEl;\n    watch(() => props.scrollTarget, () => {\n      unconfigureScrollTarget();\n      configureScrollTarget();\n    });\n\n    function emitEvent() {\n      clearTimer !== null && clearTimer();\n      const top = Math.max(0, getVerticalScrollPosition(localScrollTarget));\n      const left = getHorizontalScrollPosition(localScrollTarget);\n      const delta = {\n        top: top - scroll.position.top,\n        left: left - scroll.position.left\n      };\n\n      if (props.axis === 'vertical' && delta.top === 0 || props.axis === 'horizontal' && delta.left === 0) {\n        return;\n      }\n\n      const curDir = Math.abs(delta.top) >= Math.abs(delta.left) ? delta.top < 0 ? 'up' : 'down' : delta.left < 0 ? 'left' : 'right';\n      scroll.position = {\n        top,\n        left\n      };\n      scroll.directionChanged = scroll.direction !== curDir;\n      scroll.delta = delta;\n\n      if (scroll.directionChanged === true) {\n        scroll.direction = curDir;\n        scroll.inflectionPoint = scroll.position;\n      }\n\n      emit('scroll', { ...scroll\n      });\n    }\n\n    function configureScrollTarget() {\n      localScrollTarget = getScrollTarget(parentEl, props.scrollTarget);\n      localScrollTarget.addEventListener('scroll', trigger, passive);\n      trigger(true);\n    }\n\n    function unconfigureScrollTarget() {\n      if (localScrollTarget !== void 0) {\n        localScrollTarget.removeEventListener('scroll', trigger, passive);\n        localScrollTarget = void 0;\n      }\n    }\n\n    function trigger(immediately) {\n      if (immediately === true || props.debounce === 0 || props.debounce === '0') {\n        emitEvent();\n      } else if (clearTimer === null) {\n        const [timer, fn] = props.debounce ? [setTimeout(emitEvent, props.debounce), clearTimeout] : [requestAnimationFrame(emitEvent), cancelAnimationFrame];\n\n        clearTimer = () => {\n          fn(timer);\n          clearTimer = null;\n        };\n      }\n    }\n\n    const vm = getCurrentInstance();\n    onMounted(() => {\n      parentEl = vm.proxy.$el.parentNode;\n      configureScrollTarget();\n    });\n    onBeforeUnmount(() => {\n      clearTimer !== null && clearTimer();\n      unconfigureScrollTarget();\n    }); // expose public methods\n\n    Object.assign(vm.proxy, {\n      trigger,\n      getPosition: () => scroll\n    });\n    return noop;\n  }\n\n});","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/components/scroll-observer/QScrollObserver.js"],"names":["watch","onMounted","onBeforeUnmount","getCurrentInstance","createComponent","getScrollTarget","getVerticalScrollPosition","getHorizontalScrollPosition","listenOpts","noop","passive","axisValues","name","props","axis","type","String","validator","v","includes","default","debounce","Number","scrollTarget","emits","setup","emit","scroll","position","top","left","direction","directionChanged","delta","inflectionPoint","clearTimer","localScrollTarget","parentEl","unconfigureScrollTarget","configureScrollTarget","emitEvent","Math","max","curDir","abs","addEventListener","trigger","removeEventListener","immediately","timer","fn","setTimeout","clearTimeout","requestAnimationFrame","cancelAnimationFrame","vm","proxy","$el","parentNode","Object","assign","getPosition"],"mappings":"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","sourcesContent":["import { watch, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { getScrollTarget, getVerticalScrollPosition, getHorizontalScrollPosition } from '../../utils/scroll.js'\nimport { listenOpts, noop } from '../../utils/event.js'\n\nconst { passive } = listenOpts\nconst axisValues = [ 'both', 'horizontal', 'vertical' ]\n\nexport default createComponent({\n  name: 'QScrollObserver',\n\n  props: {\n    axis: {\n      type: String,\n      validator: v => axisValues.includes(v),\n      default: 'vertical'\n    },\n\n    debounce: [ String, Number ],\n\n    scrollTarget: {\n      default: void 0\n    }\n  },\n\n  emits: [ 'scroll' ],\n\n  setup (props, { emit }) {\n    const scroll = {\n      position: {\n        top: 0,\n        left: 0\n      },\n\n      direction: 'down',\n      directionChanged: false,\n\n      delta: {\n        top: 0,\n        left: 0\n      },\n\n      inflectionPoint: {\n        top: 0,\n        left: 0\n      }\n    }\n\n    let clearTimer = null, localScrollTarget, parentEl\n\n    watch(() => props.scrollTarget, () => {\n      unconfigureScrollTarget()\n      configureScrollTarget()\n    })\n\n    function emitEvent () {\n      clearTimer !== null && clearTimer()\n\n      const top = Math.max(0, getVerticalScrollPosition(localScrollTarget))\n      const left = getHorizontalScrollPosition(localScrollTarget)\n\n      const delta = {\n        top: top - scroll.position.top,\n        left: left - scroll.position.left\n      }\n\n      if (\n        (props.axis === 'vertical' && delta.top === 0)\n        || (props.axis === 'horizontal' && delta.left === 0)\n      ) {\n        return\n      }\n\n      const curDir = Math.abs(delta.top) >= Math.abs(delta.left)\n        ? (delta.top < 0 ? 'up' : 'down')\n        : (delta.left < 0 ? 'left' : 'right')\n\n      scroll.position = { top, left }\n      scroll.directionChanged = scroll.direction !== curDir\n      scroll.delta = delta\n\n      if (scroll.directionChanged === true) {\n        scroll.direction = curDir\n        scroll.inflectionPoint = scroll.position\n      }\n\n      emit('scroll', { ...scroll })\n    }\n\n    function configureScrollTarget () {\n      localScrollTarget = getScrollTarget(parentEl, props.scrollTarget)\n      localScrollTarget.addEventListener('scroll', trigger, passive)\n      trigger(true)\n    }\n\n    function unconfigureScrollTarget () {\n      if (localScrollTarget !== void 0) {\n        localScrollTarget.removeEventListener('scroll', trigger, passive)\n        localScrollTarget = void 0\n      }\n    }\n\n    function trigger (immediately) {\n      if (immediately === true || props.debounce === 0 || props.debounce === '0') {\n        emitEvent()\n      }\n      else if (clearTimer === null) {\n        const [ timer, fn ] = props.debounce\n          ? [ setTimeout(emitEvent, props.debounce), clearTimeout ]\n          : [ requestAnimationFrame(emitEvent), cancelAnimationFrame ]\n\n        clearTimer = () => {\n          fn(timer)\n          clearTimer = null\n        }\n      }\n    }\n\n    const vm = getCurrentInstance()\n\n    onMounted(() => {\n      parentEl = vm.proxy.$el.parentNode\n      configureScrollTarget()\n    })\n\n    onBeforeUnmount(() => {\n      clearTimer !== null && clearTimer()\n      unconfigureScrollTarget()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      trigger,\n      getPosition: () => scroll\n    })\n\n    return noop\n  }\n})\n"]},"metadata":{},"sourceType":"module"}