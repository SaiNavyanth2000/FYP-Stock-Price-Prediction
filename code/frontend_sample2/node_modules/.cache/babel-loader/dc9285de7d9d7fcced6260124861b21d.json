{"ast":null,"code":"import { clientList, planClientUpdate } from '../plugins/Meta.js';\nexport default (metaOptions => {\n  if (__QUASAR_SSR_SERVER__) {\n    return {\n      created: typeof metaOptions === 'function' ? function () {\n        this.ssrContext.__qMetaList.push(metaOptions.call(this) || {});\n      } : function () {\n        this.ssrContext.__qMetaList.push(metaOptions);\n      }\n    };\n  }\n\n  const mixin = {\n    activated() {\n      this.__qMeta.active = true;\n      planClientUpdate();\n    },\n\n    deactivated() {\n      this.__qMeta.active = false;\n      planClientUpdate();\n    },\n\n    unmounted() {\n      clientList.splice(clientList.indexOf(this.__qMeta), 1);\n      planClientUpdate();\n      this.__qMeta = void 0;\n    }\n\n  };\n\n  if (typeof metaOptions === 'function') {\n    Object.assign(mixin, {\n      computed: {\n        __qMetaOptions() {\n          return metaOptions.call(this) || {};\n        }\n\n      },\n      watch: {\n        __qMetaOptions(val) {\n          this.__qMeta.val = val;\n          this.__qMeta.active === true && planClientUpdate();\n        }\n\n      },\n\n      created() {\n        this.__qMeta = {\n          active: true,\n          val: this.__qMetaOptions\n        };\n        clientList.push(this.__qMeta);\n        planClientUpdate();\n      }\n\n    });\n  } else {\n    mixin.created = function () {\n      this.__qMeta = {\n        active: true,\n        val: metaOptions\n      };\n      clientList.push(this.__qMeta);\n      planClientUpdate();\n    };\n  }\n\n  return mixin;\n});","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/utils/create-meta-mixin.js"],"names":["clientList","planClientUpdate","metaOptions","__QUASAR_SSR_SERVER__","created","ssrContext","__qMetaList","push","call","mixin","activated","__qMeta","active","deactivated","unmounted","splice","indexOf","Object","assign","computed","__qMetaOptions","watch","val"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,QAA6C,oBAA7C;AAEA,gBAAeC,WAAW,IAAI;AAC5B,MAAIC,qBAAJ,EAA2B;AACzB,WAAO;AACLC,MAAAA,OAAO,EAAE,OAAOF,WAAP,KAAuB,UAAvB,GACL,YAAY;AACZ,aAAKG,UAAL,CAAgBC,WAAhB,CAA4BC,IAA5B,CACEL,WAAW,CAACM,IAAZ,CAAiB,IAAjB,KAA0B,EAD5B;AAGD,OALM,GAML,YAAY;AACZ,aAAKH,UAAL,CAAgBC,WAAhB,CAA4BC,IAA5B,CAAiCL,WAAjC;AACD;AATE,KAAP;AAWD;;AAED,QAAMO,KAAK,GAAG;AACZC,IAAAA,SAAS,GAAI;AACX,WAAKC,OAAL,CAAaC,MAAb,GAAsB,IAAtB;AACAX,MAAAA,gBAAgB;AACjB,KAJW;;AAMZY,IAAAA,WAAW,GAAI;AACb,WAAKF,OAAL,CAAaC,MAAb,GAAsB,KAAtB;AACAX,MAAAA,gBAAgB;AACjB,KATW;;AAWZa,IAAAA,SAAS,GAAI;AACXd,MAAAA,UAAU,CAACe,MAAX,CAAkBf,UAAU,CAACgB,OAAX,CAAmB,KAAKL,OAAxB,CAAlB,EAAoD,CAApD;AACAV,MAAAA,gBAAgB;AAChB,WAAKU,OAAL,GAAe,KAAK,CAApB;AACD;;AAfW,GAAd;;AAkBA,MAAI,OAAOT,WAAP,KAAuB,UAA3B,EAAuC;AACrCe,IAAAA,MAAM,CAACC,MAAP,CAAcT,KAAd,EAAqB;AACnBU,MAAAA,QAAQ,EAAE;AACRC,QAAAA,cAAc,GAAI;AAChB,iBAAOlB,WAAW,CAACM,IAAZ,CAAiB,IAAjB,KAA0B,EAAjC;AACD;;AAHO,OADS;AAOnBa,MAAAA,KAAK,EAAE;AACLD,QAAAA,cAAc,CAAEE,GAAF,EAAO;AACnB,eAAKX,OAAL,CAAaW,GAAb,GAAmBA,GAAnB;AACA,eAAKX,OAAL,CAAaC,MAAb,KAAwB,IAAxB,IAAgCX,gBAAgB,EAAhD;AACD;;AAJI,OAPY;;AAcnBG,MAAAA,OAAO,GAAI;AACT,aAAKO,OAAL,GAAe;AAAEC,UAAAA,MAAM,EAAE,IAAV;AAAgBU,UAAAA,GAAG,EAAE,KAAKF;AAA1B,SAAf;AACApB,QAAAA,UAAU,CAACO,IAAX,CAAgB,KAAKI,OAArB;AACAV,QAAAA,gBAAgB;AACjB;;AAlBkB,KAArB;AAoBD,GArBD,MAsBK;AACHQ,IAAAA,KAAK,CAACL,OAAN,GAAgB,YAAY;AAC1B,WAAKO,OAAL,GAAe;AAAEC,QAAAA,MAAM,EAAE,IAAV;AAAgBU,QAAAA,GAAG,EAAEpB;AAArB,OAAf;AACAF,MAAAA,UAAU,CAACO,IAAX,CAAgB,KAAKI,OAArB;AACAV,MAAAA,gBAAgB;AACjB,KAJD;AAKD;;AAED,SAAOQ,KAAP;AACD,CAhED","sourcesContent":["import { clientList, planClientUpdate } from '../plugins/Meta.js'\n\nexport default metaOptions => {\n  if (__QUASAR_SSR_SERVER__) {\n    return {\n      created: typeof metaOptions === 'function'\n        ? function () {\n          this.ssrContext.__qMetaList.push(\n            metaOptions.call(this) || {}\n          )\n        }\n        : function () {\n          this.ssrContext.__qMetaList.push(metaOptions)\n        }\n    }\n  }\n\n  const mixin = {\n    activated () {\n      this.__qMeta.active = true\n      planClientUpdate()\n    },\n\n    deactivated () {\n      this.__qMeta.active = false\n      planClientUpdate()\n    },\n\n    unmounted () {\n      clientList.splice(clientList.indexOf(this.__qMeta), 1)\n      planClientUpdate()\n      this.__qMeta = void 0\n    }\n  }\n\n  if (typeof metaOptions === 'function') {\n    Object.assign(mixin, {\n      computed: {\n        __qMetaOptions () {\n          return metaOptions.call(this) || {}\n        }\n      },\n\n      watch: {\n        __qMetaOptions (val) {\n          this.__qMeta.val = val\n          this.__qMeta.active === true && planClientUpdate()\n        }\n      },\n\n      created () {\n        this.__qMeta = { active: true, val: this.__qMetaOptions }\n        clientList.push(this.__qMeta)\n        planClientUpdate()\n      }\n    })\n  }\n  else {\n    mixin.created = function () {\n      this.__qMeta = { active: true, val: metaOptions }\n      clientList.push(this.__qMeta)\n      planClientUpdate()\n    }\n  }\n\n  return mixin\n}\n"]},"metadata":{},"sourceType":"module"}