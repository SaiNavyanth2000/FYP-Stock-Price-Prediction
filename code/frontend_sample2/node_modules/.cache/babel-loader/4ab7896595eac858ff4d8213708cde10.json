{"ast":null,"code":"import { h, ref, computed, watch, Transition, onBeforeUnmount, getCurrentInstance } from 'vue';\nimport useAnchor, { useAnchorProps } from '../../composables/private/use-anchor.js';\nimport useScrollTarget from '../../composables/private/use-scroll-target.js';\nimport useModelToggle, { useModelToggleProps, useModelToggleEmits } from '../../composables/private/use-model-toggle.js';\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js';\nimport usePortal from '../../composables/private/use-portal.js';\nimport useTransition, { useTransitionProps } from '../../composables/private/use-transition.js';\nimport useTick from '../../composables/private/use-tick.js';\nimport useTimeout from '../../composables/private/use-timeout.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { closePortalMenus } from '../../utils/private/portal.js';\nimport { getScrollTarget } from '../../utils/scroll.js';\nimport { position, stopAndPrevent } from '../../utils/event.js';\nimport { hSlot } from '../../utils/private/render.js';\nimport { addEscapeKey, removeEscapeKey } from '../../utils/private/escape-key.js';\nimport { addFocusout, removeFocusout } from '../../utils/private/focusout.js';\nimport { childHasFocus } from '../../utils/dom.js';\nimport { addClickOutside, removeClickOutside } from '../../utils/private/click-outside.js';\nimport { addFocusFn } from '../../utils/private/focus-manager.js';\nimport { validatePosition, validateOffset, setPosition, parsePosition } from '../../utils/private/position-engine.js';\nexport default createComponent({\n  name: 'QMenu',\n  inheritAttrs: false,\n  props: { ...useAnchorProps,\n    ...useModelToggleProps,\n    ...useDarkProps,\n    ...useTransitionProps,\n    persistent: Boolean,\n    autoClose: Boolean,\n    separateClosePopup: Boolean,\n    noRouteDismiss: Boolean,\n    noRefocus: Boolean,\n    noFocus: Boolean,\n    fit: Boolean,\n    cover: Boolean,\n    square: Boolean,\n    anchor: {\n      type: String,\n      validator: validatePosition\n    },\n    self: {\n      type: String,\n      validator: validatePosition\n    },\n    offset: {\n      type: Array,\n      validator: validateOffset\n    },\n    scrollTarget: {\n      default: void 0\n    },\n    touchPosition: Boolean,\n    maxHeight: {\n      type: String,\n      default: null\n    },\n    maxWidth: {\n      type: String,\n      default: null\n    }\n  },\n  emits: [...useModelToggleEmits, 'click', 'escape-key'],\n\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    let refocusTarget = null,\n        absoluteOffset,\n        unwatchPosition,\n        avoidAutoClose;\n    const vm = getCurrentInstance();\n    const {\n      proxy\n    } = vm;\n    const {\n      $q\n    } = proxy;\n    const innerRef = ref(null);\n    const showing = ref(false);\n    const hideOnRouteChange = computed(() => props.persistent !== true && props.noRouteDismiss !== true);\n    const isDark = useDark(props, $q);\n    const {\n      registerTick,\n      removeTick\n    } = useTick();\n    const {\n      registerTimeout,\n      removeTimeout\n    } = useTimeout();\n    const {\n      transition,\n      transitionStyle\n    } = useTransition(props, showing);\n    const {\n      localScrollTarget,\n      changeScrollEvent,\n      unconfigureScrollTarget\n    } = useScrollTarget(props, configureScrollTarget);\n    const {\n      anchorEl,\n      canShow\n    } = useAnchor({\n      showing\n    });\n    const {\n      hide\n    } = useModelToggle({\n      showing,\n      canShow,\n      handleShow,\n      handleHide,\n      hideOnRouteChange,\n      processOnMount: true\n    });\n    const {\n      showPortal,\n      hidePortal,\n      renderPortal\n    } = usePortal(vm, innerRef, renderPortalContent);\n    const clickOutsideProps = {\n      anchorEl,\n      innerRef,\n\n      onClickOutside(e) {\n        if (props.persistent !== true && showing.value === true) {\n          hide(e);\n\n          if ( // always prevent touch event\n          e.type === 'touchstart' // prevent click if it's on a dialog backdrop\n          || e.target.classList.contains('q-dialog__backdrop')) {\n            stopAndPrevent(e);\n          }\n\n          return true;\n        }\n      }\n\n    };\n    const anchorOrigin = computed(() => parsePosition(props.anchor || (props.cover === true ? 'center middle' : 'bottom start'), $q.lang.rtl));\n    const selfOrigin = computed(() => props.cover === true ? anchorOrigin.value : parsePosition(props.self || 'top start', $q.lang.rtl));\n    const menuClass = computed(() => (props.square === true ? ' q-menu--square' : '') + (isDark.value === true ? ' q-menu--dark q-dark' : ''));\n    const onEvents = computed(() => props.autoClose === true ? {\n      onClick: onAutoClose\n    } : {});\n    const handlesFocus = computed(() => showing.value === true && props.persistent !== true);\n    watch(handlesFocus, val => {\n      if (val === true) {\n        addEscapeKey(onEscapeKey);\n        addClickOutside(clickOutsideProps);\n      } else {\n        removeEscapeKey(onEscapeKey);\n        removeClickOutside(clickOutsideProps);\n      }\n    });\n\n    function focus() {\n      addFocusFn(() => {\n        let node = innerRef.value;\n\n        if (node && node.contains(document.activeElement) !== true) {\n          node = node.querySelector('[autofocus], [data-autofocus]') || node;\n          node.focus({\n            preventScroll: true\n          });\n        }\n      });\n    }\n\n    function handleShow(evt) {\n      removeTick();\n      removeTimeout();\n      refocusTarget = props.noRefocus === false ? document.activeElement : null;\n      addFocusout(onFocusout);\n      showPortal();\n      configureScrollTarget();\n      absoluteOffset = void 0;\n\n      if (evt !== void 0 && (props.touchPosition || props.contextMenu)) {\n        const pos = position(evt);\n\n        if (pos.left !== void 0) {\n          const {\n            top,\n            left\n          } = anchorEl.value.getBoundingClientRect();\n          absoluteOffset = {\n            left: pos.left - left,\n            top: pos.top - top\n          };\n        }\n      }\n\n      if (unwatchPosition === void 0) {\n        unwatchPosition = watch(() => $q.screen.width + '|' + $q.screen.height + '|' + props.self + '|' + props.anchor + '|' + $q.lang.rtl, updatePosition);\n      }\n\n      if (props.noFocus !== true) {\n        document.activeElement.blur();\n      }\n\n      registerTick(() => {\n        updatePosition();\n        props.noFocus !== true && focus();\n      });\n      registerTimeout(() => {\n        // required in order to avoid the \"double-tap needed\" issue\n        if ($q.platform.is.ios === true) {\n          // if auto-close, then this click should\n          // not close the menu\n          avoidAutoClose = props.autoClose;\n          innerRef.value.click();\n        }\n\n        updatePosition();\n        showPortal(true); // done showing portal\n\n        emit('show', evt);\n      }, props.transitionDuration);\n    }\n\n    function handleHide(evt) {\n      removeTick();\n      removeTimeout();\n      anchorCleanup(true);\n\n      if (refocusTarget !== null && ( // menu was hidden from code or ESC plugin\n      evt === void 0 // menu was not closed from a mouse or touch clickOutside\n      || evt.qClickOutside !== true)) {\n        refocusTarget.focus();\n        refocusTarget = null;\n      }\n\n      registerTimeout(() => {\n        hidePortal();\n        emit('hide', evt);\n      }, props.transitionDuration);\n    }\n\n    function anchorCleanup(hiding) {\n      absoluteOffset = void 0;\n\n      if (unwatchPosition !== void 0) {\n        unwatchPosition();\n        unwatchPosition = void 0;\n      }\n\n      if (hiding === true || showing.value === true) {\n        removeFocusout(onFocusout);\n        unconfigureScrollTarget();\n        removeClickOutside(clickOutsideProps);\n        removeEscapeKey(onEscapeKey);\n      }\n\n      if (hiding !== true) {\n        refocusTarget = null;\n      }\n    }\n\n    function configureScrollTarget() {\n      if (anchorEl.value !== null || props.scrollTarget !== void 0) {\n        localScrollTarget.value = getScrollTarget(anchorEl.value, props.scrollTarget);\n        changeScrollEvent(localScrollTarget.value, updatePosition);\n      }\n    }\n\n    function onAutoClose(e) {\n      // if auto-close, then the ios double-tap fix which\n      // issues a click should not close the menu\n      if (avoidAutoClose !== true) {\n        closePortalMenus(proxy, e);\n        emit('click', e);\n      } else {\n        avoidAutoClose = false;\n      }\n    }\n\n    function onFocusout(evt) {\n      // the focus is not in a vue child component\n      if (handlesFocus.value === true && props.noFocus !== true && childHasFocus(innerRef.value, evt.target) !== true) {\n        focus();\n      }\n    }\n\n    function onEscapeKey(evt) {\n      emit('escape-key');\n      hide(evt);\n    }\n\n    function updatePosition() {\n      const el = innerRef.value;\n\n      if (el === null || anchorEl.value === null) {\n        return;\n      }\n\n      setPosition({\n        el,\n        offset: props.offset,\n        anchorEl: anchorEl.value,\n        anchorOrigin: anchorOrigin.value,\n        selfOrigin: selfOrigin.value,\n        absoluteOffset,\n        fit: props.fit,\n        cover: props.cover,\n        maxHeight: props.maxHeight,\n        maxWidth: props.maxWidth\n      });\n    }\n\n    function renderPortalContent() {\n      return h(Transition, {\n        name: transition.value,\n        appear: true\n      }, () => showing.value === true ? h('div', { ...attrs,\n        ref: innerRef,\n        tabindex: -1,\n        class: ['q-menu q-position-engine scroll' + menuClass.value, attrs.class],\n        style: [attrs.style, transitionStyle.value],\n        ...onEvents.value\n      }, hSlot(slots.default)) : null);\n    }\n\n    onBeforeUnmount(anchorCleanup); // expose public methods\n\n    Object.assign(proxy, {\n      focus,\n      updatePosition\n    });\n    return renderPortal;\n  }\n\n});","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/components/menu/QMenu.js"],"names":["h","ref","computed","watch","Transition","onBeforeUnmount","getCurrentInstance","useAnchor","useAnchorProps","useScrollTarget","useModelToggle","useModelToggleProps","useModelToggleEmits","useDark","useDarkProps","usePortal","useTransition","useTransitionProps","useTick","useTimeout","createComponent","closePortalMenus","getScrollTarget","position","stopAndPrevent","hSlot","addEscapeKey","removeEscapeKey","addFocusout","removeFocusout","childHasFocus","addClickOutside","removeClickOutside","addFocusFn","validatePosition","validateOffset","setPosition","parsePosition","name","inheritAttrs","props","persistent","Boolean","autoClose","separateClosePopup","noRouteDismiss","noRefocus","noFocus","fit","cover","square","anchor","type","String","validator","self","offset","Array","scrollTarget","default","touchPosition","maxHeight","maxWidth","emits","setup","slots","emit","attrs","refocusTarget","absoluteOffset","unwatchPosition","avoidAutoClose","vm","proxy","$q","innerRef","showing","hideOnRouteChange","isDark","registerTick","removeTick","registerTimeout","removeTimeout","transition","transitionStyle","localScrollTarget","changeScrollEvent","unconfigureScrollTarget","configureScrollTarget","anchorEl","canShow","hide","handleShow","handleHide","processOnMount","showPortal","hidePortal","renderPortal","renderPortalContent","clickOutsideProps","onClickOutside","e","value","target","classList","contains","anchorOrigin","lang","rtl","selfOrigin","menuClass","onEvents","onClick","onAutoClose","handlesFocus","val","onEscapeKey","focus","node","document","activeElement","querySelector","preventScroll","evt","onFocusout","contextMenu","pos","left","top","getBoundingClientRect","screen","width","height","updatePosition","blur","platform","is","ios","click","transitionDuration","anchorCleanup","qClickOutside","hiding","el","appear","tabindex","class","style","Object","assign"],"mappings":"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","sourcesContent":["import { h, ref, computed, watch, Transition, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport useAnchor, { useAnchorProps } from '../../composables/private/use-anchor.js'\nimport useScrollTarget from '../../composables/private/use-scroll-target.js'\nimport useModelToggle, { useModelToggleProps, useModelToggleEmits } from '../../composables/private/use-model-toggle.js'\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\nimport usePortal from '../../composables/private/use-portal.js'\nimport useTransition, { useTransitionProps } from '../../composables/private/use-transition.js'\nimport useTick from '../../composables/private/use-tick.js'\nimport useTimeout from '../../composables/private/use-timeout.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { closePortalMenus } from '../../utils/private/portal.js'\nimport { getScrollTarget } from '../../utils/scroll.js'\nimport { position, stopAndPrevent } from '../../utils/event.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { addEscapeKey, removeEscapeKey } from '../../utils/private/escape-key.js'\nimport { addFocusout, removeFocusout } from '../../utils/private/focusout.js'\nimport { childHasFocus } from '../../utils/dom.js'\nimport { addClickOutside, removeClickOutside } from '../../utils/private/click-outside.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\n\nimport {\n  validatePosition, validateOffset, setPosition, parsePosition\n} from '../../utils/private/position-engine.js'\n\nexport default createComponent({\n  name: 'QMenu',\n\n  inheritAttrs: false,\n\n  props: {\n    ...useAnchorProps,\n    ...useModelToggleProps,\n    ...useDarkProps,\n    ...useTransitionProps,\n\n    persistent: Boolean,\n    autoClose: Boolean,\n    separateClosePopup: Boolean,\n\n    noRouteDismiss: Boolean,\n    noRefocus: Boolean,\n    noFocus: Boolean,\n\n    fit: Boolean,\n    cover: Boolean,\n\n    square: Boolean,\n\n    anchor: {\n      type: String,\n      validator: validatePosition\n    },\n    self: {\n      type: String,\n      validator: validatePosition\n    },\n    offset: {\n      type: Array,\n      validator: validateOffset\n    },\n\n    scrollTarget: {\n      default: void 0\n    },\n\n    touchPosition: Boolean,\n\n    maxHeight: {\n      type: String,\n      default: null\n    },\n    maxWidth: {\n      type: String,\n      default: null\n    }\n  },\n\n  emits: [\n    ...useModelToggleEmits,\n    'click', 'escape-key'\n  ],\n\n  setup (props, { slots, emit, attrs }) {\n    let refocusTarget = null, absoluteOffset, unwatchPosition, avoidAutoClose\n\n    const vm = getCurrentInstance()\n    const { proxy } = vm\n    const { $q } = proxy\n\n    const innerRef = ref(null)\n    const showing = ref(false)\n\n    const hideOnRouteChange = computed(() =>\n      props.persistent !== true\n      && props.noRouteDismiss !== true\n    )\n\n    const isDark = useDark(props, $q)\n    const { registerTick, removeTick } = useTick()\n    const { registerTimeout, removeTimeout } = useTimeout()\n    const { transition, transitionStyle } = useTransition(props, showing)\n    const { localScrollTarget, changeScrollEvent, unconfigureScrollTarget } = useScrollTarget(props, configureScrollTarget)\n\n    const { anchorEl, canShow } = useAnchor({ showing })\n\n    const { hide } = useModelToggle({\n      showing, canShow, handleShow, handleHide,\n      hideOnRouteChange,\n      processOnMount: true\n    })\n\n    const { showPortal, hidePortal, renderPortal } = usePortal(vm, innerRef, renderPortalContent)\n\n    const clickOutsideProps = {\n      anchorEl,\n      innerRef,\n      onClickOutside (e) {\n        if (props.persistent !== true && showing.value === true) {\n          hide(e)\n\n          if (\n            // always prevent touch event\n            e.type === 'touchstart'\n            // prevent click if it's on a dialog backdrop\n            || e.target.classList.contains('q-dialog__backdrop')\n          ) {\n            stopAndPrevent(e)\n          }\n\n          return true\n        }\n      }\n    }\n\n    const anchorOrigin = computed(() =>\n      parsePosition(\n        props.anchor || (\n          props.cover === true ? 'center middle' : 'bottom start'\n        ),\n        $q.lang.rtl\n      )\n    )\n\n    const selfOrigin = computed(() => (\n      props.cover === true\n        ? anchorOrigin.value\n        : parsePosition(props.self || 'top start', $q.lang.rtl)\n    ))\n\n    const menuClass = computed(() =>\n      (props.square === true ? ' q-menu--square' : '')\n      + (isDark.value === true ? ' q-menu--dark q-dark' : '')\n    )\n\n    const onEvents = computed(() => (\n      props.autoClose === true\n        ? { onClick: onAutoClose }\n        : {}\n    ))\n\n    const handlesFocus = computed(() =>\n      showing.value === true && props.persistent !== true\n    )\n\n    watch(handlesFocus, val => {\n      if (val === true) {\n        addEscapeKey(onEscapeKey)\n        addClickOutside(clickOutsideProps)\n      }\n      else {\n        removeEscapeKey(onEscapeKey)\n        removeClickOutside(clickOutsideProps)\n      }\n    })\n\n    function focus () {\n      addFocusFn(() => {\n        let node = innerRef.value\n\n        if (node && node.contains(document.activeElement) !== true) {\n          node = node.querySelector('[autofocus], [data-autofocus]') || node\n          node.focus({ preventScroll: true })\n        }\n      })\n    }\n\n    function handleShow (evt) {\n      removeTick()\n      removeTimeout()\n\n      refocusTarget = props.noRefocus === false\n        ? document.activeElement\n        : null\n\n      addFocusout(onFocusout)\n\n      showPortal()\n      configureScrollTarget()\n\n      absoluteOffset = void 0\n\n      if (evt !== void 0 && (props.touchPosition || props.contextMenu)) {\n        const pos = position(evt)\n\n        if (pos.left !== void 0) {\n          const { top, left } = anchorEl.value.getBoundingClientRect()\n          absoluteOffset = { left: pos.left - left, top: pos.top - top }\n        }\n      }\n\n      if (unwatchPosition === void 0) {\n        unwatchPosition = watch(\n          () => $q.screen.width + '|' + $q.screen.height + '|' + props.self + '|' + props.anchor + '|' + $q.lang.rtl,\n          updatePosition\n        )\n      }\n\n      if (props.noFocus !== true) {\n        document.activeElement.blur()\n      }\n\n      registerTick(() => {\n        updatePosition()\n        props.noFocus !== true && focus()\n      })\n\n      registerTimeout(() => {\n        // required in order to avoid the \"double-tap needed\" issue\n        if ($q.platform.is.ios === true) {\n          // if auto-close, then this click should\n          // not close the menu\n          avoidAutoClose = props.autoClose\n          innerRef.value.click()\n        }\n\n        updatePosition()\n        showPortal(true) // done showing portal\n        emit('show', evt)\n      }, props.transitionDuration)\n    }\n\n    function handleHide (evt) {\n      removeTick()\n      removeTimeout()\n\n      anchorCleanup(true)\n\n      if (\n        refocusTarget !== null\n        && (\n          // menu was hidden from code or ESC plugin\n          evt === void 0\n          // menu was not closed from a mouse or touch clickOutside\n          || evt.qClickOutside !== true\n        )\n      ) {\n        refocusTarget.focus()\n        refocusTarget = null\n      }\n\n      registerTimeout(() => {\n        hidePortal()\n        emit('hide', evt)\n      }, props.transitionDuration)\n    }\n\n    function anchorCleanup (hiding) {\n      absoluteOffset = void 0\n\n      if (unwatchPosition !== void 0) {\n        unwatchPosition()\n        unwatchPosition = void 0\n      }\n\n      if (hiding === true || showing.value === true) {\n        removeFocusout(onFocusout)\n        unconfigureScrollTarget()\n        removeClickOutside(clickOutsideProps)\n        removeEscapeKey(onEscapeKey)\n      }\n\n      if (hiding !== true) {\n        refocusTarget = null\n      }\n    }\n\n    function configureScrollTarget () {\n      if (anchorEl.value !== null || props.scrollTarget !== void 0) {\n        localScrollTarget.value = getScrollTarget(anchorEl.value, props.scrollTarget)\n        changeScrollEvent(localScrollTarget.value, updatePosition)\n      }\n    }\n\n    function onAutoClose (e) {\n      // if auto-close, then the ios double-tap fix which\n      // issues a click should not close the menu\n      if (avoidAutoClose !== true) {\n        closePortalMenus(proxy, e)\n        emit('click', e)\n      }\n      else {\n        avoidAutoClose = false\n      }\n    }\n\n    function onFocusout (evt) {\n      // the focus is not in a vue child component\n      if (\n        handlesFocus.value === true\n        && props.noFocus !== true\n        && childHasFocus(innerRef.value, evt.target) !== true\n      ) {\n        focus()\n      }\n    }\n\n    function onEscapeKey (evt) {\n      emit('escape-key')\n      hide(evt)\n    }\n\n    function updatePosition () {\n      const el = innerRef.value\n\n      if (el === null || anchorEl.value === null) {\n        return\n      }\n\n      setPosition({\n        el,\n        offset: props.offset,\n        anchorEl: anchorEl.value,\n        anchorOrigin: anchorOrigin.value,\n        selfOrigin: selfOrigin.value,\n        absoluteOffset,\n        fit: props.fit,\n        cover: props.cover,\n        maxHeight: props.maxHeight,\n        maxWidth: props.maxWidth\n      })\n    }\n\n    function renderPortalContent () {\n      return h(\n        Transition,\n        { name: transition.value, appear: true },\n        () => (\n          showing.value === true\n            ? h('div', {\n              ...attrs,\n              ref: innerRef,\n              tabindex: -1,\n              class: [\n                'q-menu q-position-engine scroll' + menuClass.value,\n                attrs.class\n              ],\n              style: [\n                attrs.style,\n                transitionStyle.value\n              ],\n              ...onEvents.value\n            }, hSlot(slots.default))\n            : null\n        )\n      )\n    }\n\n    onBeforeUnmount(anchorCleanup)\n\n    // expose public methods\n    Object.assign(proxy, { focus, updatePosition })\n\n    return renderPortal\n  }\n})\n"]},"metadata":{},"sourceType":"module"}