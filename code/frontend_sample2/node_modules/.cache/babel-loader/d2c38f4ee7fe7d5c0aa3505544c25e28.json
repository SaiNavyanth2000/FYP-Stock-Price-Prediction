{"ast":null,"code":"import { ref, watch, onMounted, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue';\nimport { clearSelection } from '../../utils/private/selection.js';\nimport { addEvt, cleanEvt, prevent } from '../../utils/event.js';\nimport { isKeyCode } from '../../utils/private/key-composition.js';\nexport const useAnchorProps = {\n  target: {\n    default: true\n  },\n  noParentEvent: Boolean,\n  contextMenu: Boolean\n};\nexport default function ({\n  showing,\n  avoidEmit,\n  // required for QPopupProxy (true)\n  configureAnchorEl // optional\n\n}) {\n  const {\n    props,\n    proxy,\n    emit\n  } = getCurrentInstance();\n  const anchorEl = ref(null);\n  let touchTimer;\n\n  function canShow(evt) {\n    // abort with no parent configured or on multi-touch\n    return anchorEl.value === null ? false : evt === void 0 || evt.touches === void 0 || evt.touches.length <= 1;\n  }\n\n  const anchorEvents = {};\n\n  if (configureAnchorEl === void 0) {\n    // default configureAnchorEl is designed for\n    // QMenu & QPopupProxy (which is why it's handled here)\n    Object.assign(anchorEvents, {\n      hide(evt) {\n        proxy.hide(evt);\n      },\n\n      toggle(evt) {\n        proxy.toggle(evt);\n        evt.qAnchorHandled = true;\n      },\n\n      toggleKey(evt) {\n        isKeyCode(evt, 13) === true && anchorEvents.toggle(evt);\n      },\n\n      contextClick(evt) {\n        proxy.hide(evt);\n        prevent(evt);\n        nextTick(() => {\n          proxy.show(evt);\n          evt.qAnchorHandled = true;\n        });\n      },\n\n      prevent,\n\n      mobileTouch(evt) {\n        anchorEvents.mobileCleanup(evt);\n\n        if (canShow(evt) !== true) {\n          return;\n        }\n\n        proxy.hide(evt);\n        anchorEl.value.classList.add('non-selectable');\n        const target = evt.target;\n        addEvt(anchorEvents, 'anchor', [[target, 'touchmove', 'mobileCleanup', 'passive'], [target, 'touchend', 'mobileCleanup', 'passive'], [target, 'touchcancel', 'mobileCleanup', 'passive'], [anchorEl.value, 'contextmenu', 'prevent', 'notPassive']]);\n        touchTimer = setTimeout(() => {\n          proxy.show(evt);\n          evt.qAnchorHandled = true;\n        }, 300);\n      },\n\n      mobileCleanup(evt) {\n        anchorEl.value.classList.remove('non-selectable');\n        clearTimeout(touchTimer);\n\n        if (showing.value === true && evt !== void 0) {\n          clearSelection();\n        }\n      }\n\n    });\n\n    configureAnchorEl = function (context = props.contextMenu) {\n      if (props.noParentEvent === true || anchorEl.value === null) {\n        return;\n      }\n\n      let evts;\n\n      if (context === true) {\n        if (proxy.$q.platform.is.mobile === true) {\n          evts = [[anchorEl.value, 'touchstart', 'mobileTouch', 'passive']];\n        } else {\n          evts = [[anchorEl.value, 'mousedown', 'hide', 'passive'], [anchorEl.value, 'contextmenu', 'contextClick', 'notPassive']];\n        }\n      } else {\n        evts = [[anchorEl.value, 'click', 'toggle', 'passive'], [anchorEl.value, 'keyup', 'toggleKey', 'passive']];\n      }\n\n      addEvt(anchorEvents, 'anchor', evts);\n    };\n  }\n\n  function unconfigureAnchorEl() {\n    cleanEvt(anchorEvents, 'anchor');\n  }\n\n  function setAnchorEl(el) {\n    anchorEl.value = el;\n\n    while (anchorEl.value.classList.contains('q-anchor--skip')) {\n      anchorEl.value = anchorEl.value.parentNode;\n    }\n\n    configureAnchorEl();\n  }\n\n  function pickAnchorEl() {\n    if (props.target === false || props.target === '') {\n      anchorEl.value = null;\n    } else if (props.target === true) {\n      setAnchorEl(proxy.$el.parentNode);\n    } else {\n      let el = props.target;\n\n      if (typeof props.target === 'string') {\n        try {\n          el = document.querySelector(props.target);\n        } catch (err) {\n          el = void 0;\n        }\n      }\n\n      if (el !== void 0 && el !== null) {\n        anchorEl.value = el.$el || el;\n        configureAnchorEl();\n      } else {\n        anchorEl.value = null;\n        console.error(`Anchor: target \"${props.target}\" not found`);\n      }\n    }\n  }\n\n  watch(() => props.contextMenu, val => {\n    if (anchorEl.value !== null) {\n      unconfigureAnchorEl();\n      configureAnchorEl(val);\n    }\n  });\n  watch(() => props.target, () => {\n    if (anchorEl.value !== null) {\n      unconfigureAnchorEl();\n    }\n\n    pickAnchorEl();\n  });\n  watch(() => props.noParentEvent, val => {\n    if (anchorEl.value !== null) {\n      if (val === true) {\n        unconfigureAnchorEl();\n      } else {\n        configureAnchorEl();\n      }\n    }\n  });\n  onMounted(() => {\n    pickAnchorEl();\n\n    if (avoidEmit !== true && props.modelValue === true && anchorEl.value === null) {\n      emit('update:modelValue', false);\n    }\n  });\n  onBeforeUnmount(() => {\n    clearTimeout(touchTimer);\n    unconfigureAnchorEl();\n  });\n  return {\n    anchorEl,\n    canShow,\n    anchorEvents\n  };\n}","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/composables/private/use-anchor.js"],"names":["ref","watch","onMounted","onBeforeUnmount","nextTick","getCurrentInstance","clearSelection","addEvt","cleanEvt","prevent","isKeyCode","useAnchorProps","target","default","noParentEvent","Boolean","contextMenu","showing","avoidEmit","configureAnchorEl","props","proxy","emit","anchorEl","touchTimer","canShow","evt","value","touches","length","anchorEvents","Object","assign","hide","toggle","qAnchorHandled","toggleKey","contextClick","show","mobileTouch","mobileCleanup","classList","add","setTimeout","remove","clearTimeout","context","evts","$q","platform","is","mobile","unconfigureAnchorEl","setAnchorEl","el","contains","parentNode","pickAnchorEl","$el","document","querySelector","err","console","error","val","modelValue"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,SAArB,EAAgCC,eAAhC,EAAiDC,QAAjD,EAA2DC,kBAA3D,QAAqF,KAArF;AAEA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,QAA0C,sBAA1C;AACA,SAASC,SAAT,QAA0B,wCAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GADoB;AAI5BC,EAAAA,aAAa,EAAEC,OAJa;AAK5BC,EAAAA,WAAW,EAAED;AALe,CAAvB;AAQP,eAAe,UAAU;AACvBE,EAAAA,OADuB;AAEvBC,EAAAA,SAFuB;AAEZ;AACXC,EAAAA,iBAHuB,CAGL;;AAHK,CAAV,EAIZ;AACD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAAyBjB,kBAAkB,EAAjD;AAEA,QAAMkB,QAAQ,GAAGvB,GAAG,CAAC,IAAD,CAApB;AAEA,MAAIwB,UAAJ;;AAEA,WAASC,OAAT,CAAkBC,GAAlB,EAAuB;AACrB;AACA,WAAOH,QAAQ,CAACI,KAAT,KAAmB,IAAnB,GACH,KADG,GAEFD,GAAG,KAAK,KAAK,CAAb,IAAkBA,GAAG,CAACE,OAAJ,KAAgB,KAAK,CAAvC,IAA4CF,GAAG,CAACE,OAAJ,CAAYC,MAAZ,IAAsB,CAFvE;AAGD;;AAED,QAAMC,YAAY,GAAG,EAArB;;AAEA,MAAIX,iBAAiB,KAAK,KAAK,CAA/B,EAAkC;AAChC;AACA;AAEAY,IAAAA,MAAM,CAACC,MAAP,CAAcF,YAAd,EAA4B;AAC1BG,MAAAA,IAAI,CAAEP,GAAF,EAAO;AACTL,QAAAA,KAAK,CAACY,IAAN,CAAWP,GAAX;AACD,OAHyB;;AAK1BQ,MAAAA,MAAM,CAAER,GAAF,EAAO;AACXL,QAAAA,KAAK,CAACa,MAAN,CAAaR,GAAb;AACAA,QAAAA,GAAG,CAACS,cAAJ,GAAqB,IAArB;AACD,OARyB;;AAU1BC,MAAAA,SAAS,CAAEV,GAAF,EAAO;AACdhB,QAAAA,SAAS,CAACgB,GAAD,EAAM,EAAN,CAAT,KAAuB,IAAvB,IAA+BI,YAAY,CAACI,MAAb,CAAoBR,GAApB,CAA/B;AACD,OAZyB;;AAc1BW,MAAAA,YAAY,CAAEX,GAAF,EAAO;AACjBL,QAAAA,KAAK,CAACY,IAAN,CAAWP,GAAX;AACAjB,QAAAA,OAAO,CAACiB,GAAD,CAAP;AACAtB,QAAAA,QAAQ,CAAC,MAAM;AACbiB,UAAAA,KAAK,CAACiB,IAAN,CAAWZ,GAAX;AACAA,UAAAA,GAAG,CAACS,cAAJ,GAAqB,IAArB;AACD,SAHO,CAAR;AAID,OArByB;;AAuB1B1B,MAAAA,OAvB0B;;AAyB1B8B,MAAAA,WAAW,CAAEb,GAAF,EAAO;AAChBI,QAAAA,YAAY,CAACU,aAAb,CAA2Bd,GAA3B;;AAEA,YAAID,OAAO,CAACC,GAAD,CAAP,KAAiB,IAArB,EAA2B;AACzB;AACD;;AAEDL,QAAAA,KAAK,CAACY,IAAN,CAAWP,GAAX;AACAH,QAAAA,QAAQ,CAACI,KAAT,CAAec,SAAf,CAAyBC,GAAzB,CAA6B,gBAA7B;AAEA,cAAM9B,MAAM,GAAGc,GAAG,CAACd,MAAnB;AACAL,QAAAA,MAAM,CAACuB,YAAD,EAAe,QAAf,EAAyB,CAC7B,CAAElB,MAAF,EAAU,WAAV,EAAuB,eAAvB,EAAwC,SAAxC,CAD6B,EAE7B,CAAEA,MAAF,EAAU,UAAV,EAAsB,eAAtB,EAAuC,SAAvC,CAF6B,EAG7B,CAAEA,MAAF,EAAU,aAAV,EAAyB,eAAzB,EAA0C,SAA1C,CAH6B,EAI7B,CAAEW,QAAQ,CAACI,KAAX,EAAkB,aAAlB,EAAiC,SAAjC,EAA4C,YAA5C,CAJ6B,CAAzB,CAAN;AAOAH,QAAAA,UAAU,GAAGmB,UAAU,CAAC,MAAM;AAC5BtB,UAAAA,KAAK,CAACiB,IAAN,CAAWZ,GAAX;AACAA,UAAAA,GAAG,CAACS,cAAJ,GAAqB,IAArB;AACD,SAHsB,EAGpB,GAHoB,CAAvB;AAID,OA/CyB;;AAiD1BK,MAAAA,aAAa,CAAEd,GAAF,EAAO;AAClBH,QAAAA,QAAQ,CAACI,KAAT,CAAec,SAAf,CAAyBG,MAAzB,CAAgC,gBAAhC;AACAC,QAAAA,YAAY,CAACrB,UAAD,CAAZ;;AAEA,YAAIP,OAAO,CAACU,KAAR,KAAkB,IAAlB,IAA0BD,GAAG,KAAK,KAAK,CAA3C,EAA8C;AAC5CpB,UAAAA,cAAc;AACf;AACF;;AAxDyB,KAA5B;;AA2DAa,IAAAA,iBAAiB,GAAG,UAAU2B,OAAO,GAAG1B,KAAK,CAACJ,WAA1B,EAAuC;AACzD,UAAII,KAAK,CAACN,aAAN,KAAwB,IAAxB,IAAgCS,QAAQ,CAACI,KAAT,KAAmB,IAAvD,EAA6D;AAAE;AAAQ;;AAEvE,UAAIoB,IAAJ;;AAEA,UAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,YAAIzB,KAAK,CAAC2B,EAAN,CAASC,QAAT,CAAkBC,EAAlB,CAAqBC,MAArB,KAAgC,IAApC,EAA0C;AACxCJ,UAAAA,IAAI,GAAG,CACL,CAAExB,QAAQ,CAACI,KAAX,EAAkB,YAAlB,EAAgC,aAAhC,EAA+C,SAA/C,CADK,CAAP;AAGD,SAJD,MAKK;AACHoB,UAAAA,IAAI,GAAG,CACL,CAAExB,QAAQ,CAACI,KAAX,EAAkB,WAAlB,EAA+B,MAA/B,EAAuC,SAAvC,CADK,EAEL,CAAEJ,QAAQ,CAACI,KAAX,EAAkB,aAAlB,EAAiC,cAAjC,EAAiD,YAAjD,CAFK,CAAP;AAID;AACF,OAZD,MAaK;AACHoB,QAAAA,IAAI,GAAG,CACL,CAAExB,QAAQ,CAACI,KAAX,EAAkB,OAAlB,EAA2B,QAA3B,EAAqC,SAArC,CADK,EAEL,CAAEJ,QAAQ,CAACI,KAAX,EAAkB,OAAlB,EAA2B,WAA3B,EAAwC,SAAxC,CAFK,CAAP;AAID;;AAEDpB,MAAAA,MAAM,CAACuB,YAAD,EAAe,QAAf,EAAyBiB,IAAzB,CAAN;AACD,KA1BD;AA2BD;;AAED,WAASK,mBAAT,GAAgC;AAC9B5C,IAAAA,QAAQ,CAACsB,YAAD,EAAe,QAAf,CAAR;AACD;;AAED,WAASuB,WAAT,CAAsBC,EAAtB,EAA0B;AACxB/B,IAAAA,QAAQ,CAACI,KAAT,GAAiB2B,EAAjB;;AACA,WAAO/B,QAAQ,CAACI,KAAT,CAAec,SAAf,CAAyBc,QAAzB,CAAkC,gBAAlC,CAAP,EAA4D;AAC1DhC,MAAAA,QAAQ,CAACI,KAAT,GAAiBJ,QAAQ,CAACI,KAAT,CAAe6B,UAAhC;AACD;;AACDrC,IAAAA,iBAAiB;AAClB;;AAED,WAASsC,YAAT,GAAyB;AACvB,QAAIrC,KAAK,CAACR,MAAN,KAAiB,KAAjB,IAA0BQ,KAAK,CAACR,MAAN,KAAiB,EAA/C,EAAmD;AACjDW,MAAAA,QAAQ,CAACI,KAAT,GAAiB,IAAjB;AACD,KAFD,MAGK,IAAIP,KAAK,CAACR,MAAN,KAAiB,IAArB,EAA2B;AAC9ByC,MAAAA,WAAW,CAAChC,KAAK,CAACqC,GAAN,CAAUF,UAAX,CAAX;AACD,KAFI,MAGA;AACH,UAAIF,EAAE,GAAGlC,KAAK,CAACR,MAAf;;AAEA,UAAI,OAAOQ,KAAK,CAACR,MAAb,KAAwB,QAA5B,EAAsC;AACpC,YAAI;AACF0C,UAAAA,EAAE,GAAGK,QAAQ,CAACC,aAAT,CAAuBxC,KAAK,CAACR,MAA7B,CAAL;AACD,SAFD,CAGA,OAAOiD,GAAP,EAAY;AACVP,UAAAA,EAAE,GAAG,KAAK,CAAV;AACD;AACF;;AAED,UAAIA,EAAE,KAAK,KAAK,CAAZ,IAAiBA,EAAE,KAAK,IAA5B,EAAkC;AAChC/B,QAAAA,QAAQ,CAACI,KAAT,GAAiB2B,EAAE,CAACI,GAAH,IAAUJ,EAA3B;AACAnC,QAAAA,iBAAiB;AAClB,OAHD,MAIK;AACHI,QAAAA,QAAQ,CAACI,KAAT,GAAiB,IAAjB;AACAmC,QAAAA,OAAO,CAACC,KAAR,CAAe,mBAAmB3C,KAAK,CAACR,MAAQ,aAAhD;AACD;AACF;AACF;;AAEDX,EAAAA,KAAK,CAAC,MAAMmB,KAAK,CAACJ,WAAb,EAA0BgD,GAAG,IAAI;AACpC,QAAIzC,QAAQ,CAACI,KAAT,KAAmB,IAAvB,EAA6B;AAC3ByB,MAAAA,mBAAmB;AACnBjC,MAAAA,iBAAiB,CAAC6C,GAAD,CAAjB;AACD;AACF,GALI,CAAL;AAOA/D,EAAAA,KAAK,CAAC,MAAMmB,KAAK,CAACR,MAAb,EAAqB,MAAM;AAC9B,QAAIW,QAAQ,CAACI,KAAT,KAAmB,IAAvB,EAA6B;AAC3ByB,MAAAA,mBAAmB;AACpB;;AAEDK,IAAAA,YAAY;AACb,GANI,CAAL;AAQAxD,EAAAA,KAAK,CAAC,MAAMmB,KAAK,CAACN,aAAb,EAA4BkD,GAAG,IAAI;AACtC,QAAIzC,QAAQ,CAACI,KAAT,KAAmB,IAAvB,EAA6B;AAC3B,UAAIqC,GAAG,KAAK,IAAZ,EAAkB;AAChBZ,QAAAA,mBAAmB;AACpB,OAFD,MAGK;AACHjC,QAAAA,iBAAiB;AAClB;AACF;AACF,GATI,CAAL;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACduD,IAAAA,YAAY;;AAEZ,QAAIvC,SAAS,KAAK,IAAd,IAAsBE,KAAK,CAAC6C,UAAN,KAAqB,IAA3C,IAAmD1C,QAAQ,CAACI,KAAT,KAAmB,IAA1E,EAAgF;AAC9EL,MAAAA,IAAI,CAAC,mBAAD,EAAsB,KAAtB,CAAJ;AACD;AACF,GANQ,CAAT;AAQAnB,EAAAA,eAAe,CAAC,MAAM;AACpB0C,IAAAA,YAAY,CAACrB,UAAD,CAAZ;AACA4B,IAAAA,mBAAmB;AACpB,GAHc,CAAf;AAKA,SAAO;AACL7B,IAAAA,QADK;AAELE,IAAAA,OAFK;AAGLK,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { ref, watch, onMounted, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue'\n\nimport { clearSelection } from '../../utils/private/selection.js'\nimport { addEvt, cleanEvt, prevent } from '../../utils/event.js'\nimport { isKeyCode } from '../../utils/private/key-composition.js'\n\nexport const useAnchorProps = {\n  target: {\n    default: true\n  },\n  noParentEvent: Boolean,\n  contextMenu: Boolean\n}\n\nexport default function ({\n  showing,\n  avoidEmit, // required for QPopupProxy (true)\n  configureAnchorEl // optional\n}) {\n  const { props, proxy, emit } = getCurrentInstance()\n\n  const anchorEl = ref(null)\n\n  let touchTimer\n\n  function canShow (evt) {\n    // abort with no parent configured or on multi-touch\n    return anchorEl.value === null\n      ? false\n      : (evt === void 0 || evt.touches === void 0 || evt.touches.length <= 1)\n  }\n\n  const anchorEvents = {}\n\n  if (configureAnchorEl === void 0) {\n    // default configureAnchorEl is designed for\n    // QMenu & QPopupProxy (which is why it's handled here)\n\n    Object.assign(anchorEvents, {\n      hide (evt) {\n        proxy.hide(evt)\n      },\n\n      toggle (evt) {\n        proxy.toggle(evt)\n        evt.qAnchorHandled = true\n      },\n\n      toggleKey (evt) {\n        isKeyCode(evt, 13) === true && anchorEvents.toggle(evt)\n      },\n\n      contextClick (evt) {\n        proxy.hide(evt)\n        prevent(evt)\n        nextTick(() => {\n          proxy.show(evt)\n          evt.qAnchorHandled = true\n        })\n      },\n\n      prevent,\n\n      mobileTouch (evt) {\n        anchorEvents.mobileCleanup(evt)\n\n        if (canShow(evt) !== true) {\n          return\n        }\n\n        proxy.hide(evt)\n        anchorEl.value.classList.add('non-selectable')\n\n        const target = evt.target\n        addEvt(anchorEvents, 'anchor', [\n          [ target, 'touchmove', 'mobileCleanup', 'passive' ],\n          [ target, 'touchend', 'mobileCleanup', 'passive' ],\n          [ target, 'touchcancel', 'mobileCleanup', 'passive' ],\n          [ anchorEl.value, 'contextmenu', 'prevent', 'notPassive' ]\n        ])\n\n        touchTimer = setTimeout(() => {\n          proxy.show(evt)\n          evt.qAnchorHandled = true\n        }, 300)\n      },\n\n      mobileCleanup (evt) {\n        anchorEl.value.classList.remove('non-selectable')\n        clearTimeout(touchTimer)\n\n        if (showing.value === true && evt !== void 0) {\n          clearSelection()\n        }\n      }\n    })\n\n    configureAnchorEl = function (context = props.contextMenu) {\n      if (props.noParentEvent === true || anchorEl.value === null) { return }\n\n      let evts\n\n      if (context === true) {\n        if (proxy.$q.platform.is.mobile === true) {\n          evts = [\n            [ anchorEl.value, 'touchstart', 'mobileTouch', 'passive' ]\n          ]\n        }\n        else {\n          evts = [\n            [ anchorEl.value, 'mousedown', 'hide', 'passive' ],\n            [ anchorEl.value, 'contextmenu', 'contextClick', 'notPassive' ]\n          ]\n        }\n      }\n      else {\n        evts = [\n          [ anchorEl.value, 'click', 'toggle', 'passive' ],\n          [ anchorEl.value, 'keyup', 'toggleKey', 'passive' ]\n        ]\n      }\n\n      addEvt(anchorEvents, 'anchor', evts)\n    }\n  }\n\n  function unconfigureAnchorEl () {\n    cleanEvt(anchorEvents, 'anchor')\n  }\n\n  function setAnchorEl (el) {\n    anchorEl.value = el\n    while (anchorEl.value.classList.contains('q-anchor--skip')) {\n      anchorEl.value = anchorEl.value.parentNode\n    }\n    configureAnchorEl()\n  }\n\n  function pickAnchorEl () {\n    if (props.target === false || props.target === '') {\n      anchorEl.value = null\n    }\n    else if (props.target === true) {\n      setAnchorEl(proxy.$el.parentNode)\n    }\n    else {\n      let el = props.target\n\n      if (typeof props.target === 'string') {\n        try {\n          el = document.querySelector(props.target)\n        }\n        catch (err) {\n          el = void 0\n        }\n      }\n\n      if (el !== void 0 && el !== null) {\n        anchorEl.value = el.$el || el\n        configureAnchorEl()\n      }\n      else {\n        anchorEl.value = null\n        console.error(`Anchor: target \"${ props.target }\" not found`)\n      }\n    }\n  }\n\n  watch(() => props.contextMenu, val => {\n    if (anchorEl.value !== null) {\n      unconfigureAnchorEl()\n      configureAnchorEl(val)\n    }\n  })\n\n  watch(() => props.target, () => {\n    if (anchorEl.value !== null) {\n      unconfigureAnchorEl()\n    }\n\n    pickAnchorEl()\n  })\n\n  watch(() => props.noParentEvent, val => {\n    if (anchorEl.value !== null) {\n      if (val === true) {\n        unconfigureAnchorEl()\n      }\n      else {\n        configureAnchorEl()\n      }\n    }\n  })\n\n  onMounted(() => {\n    pickAnchorEl()\n\n    if (avoidEmit !== true && props.modelValue === true && anchorEl.value === null) {\n      emit('update:modelValue', false)\n    }\n  })\n\n  onBeforeUnmount(() => {\n    clearTimeout(touchTimer)\n    unconfigureAnchorEl()\n  })\n\n  return {\n    anchorEl,\n    canShow,\n    anchorEvents\n  }\n}\n"]},"metadata":{},"sourceType":"module"}