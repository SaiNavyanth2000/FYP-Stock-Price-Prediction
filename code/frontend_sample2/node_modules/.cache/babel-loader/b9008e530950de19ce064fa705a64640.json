{"ast":null,"code":"import defineReactivePlugin from './utils/private/define-reactive-plugin.js'; // no extension on purpose for next one:\n\nimport defaultLang from '../lang/en-US';\n\nfunction getLocale() {\n  if (__QUASAR_SSR_SERVER__) {\n    return;\n  }\n\n  const val = Array.isArray(navigator.languages) === true && navigator.languages.length > 0 ? navigator.languages[0] : navigator.language;\n\n  if (typeof val === 'string') {\n    return val.split(/[-_]/).map((v, i) => i === 0 ? v.toLowerCase() : i > 1 || v.length < 4 ? v.toUpperCase() : v[0].toUpperCase() + v.slice(1).toLowerCase()).join('-');\n  }\n}\n\nconst Plugin = defineReactivePlugin({\n  __langPack: {}\n}, {\n  getLocale,\n\n  set(langObject = defaultLang, ssrContext) {\n    const lang = { ...langObject,\n      rtl: langObject.rtl === true,\n      getLocale\n    };\n\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: Quasar.lang.set(lang, ssrContext)');\n        return;\n      }\n\n      const dir = lang.rtl === true ? 'rtl' : 'ltr';\n      const attrs = `lang=${lang.isoName} dir=${dir}`;\n      lang.set = ssrContext.$q.lang.set;\n      ssrContext._meta.htmlAttrs = ssrContext.__qPrevLang !== void 0 ? ssrContext._meta.htmlAttrs.replace(ssrContext.__qPrevLang, attrs) : attrs;\n      ssrContext.__qPrevLang = attrs;\n      ssrContext.$q.lang = lang;\n    } else {\n      const el = document.documentElement;\n      el.setAttribute('dir', lang.rtl === true ? 'rtl' : 'ltr');\n      el.setAttribute('lang', lang.isoName);\n      lang.set = Plugin.set;\n      Object.assign(Plugin.__langPack, lang);\n      Plugin.props = lang;\n      Plugin.isoName = lang.isoName;\n      Plugin.nativeName = lang.nativeName;\n    }\n  },\n\n  install({\n    $q,\n    lang,\n    ssrContext\n  }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialLang = lang || defaultLang;\n      $q.lang = {};\n\n      $q.lang.set = langObject => {\n        this.set(langObject, ssrContext);\n      };\n\n      $q.lang.set(initialLang); // one-time SSR server operation\n\n      if (this.isoName !== initialLang.isoName) {\n        this.isoName = initialLang.isoName;\n        this.nativeName = initialLang.nativeName;\n        this.props = initialLang;\n      }\n    } else {\n      $q.lang = Plugin.__langPack;\n\n      if (this.__installed === true) {\n        lang !== void 0 && this.set(lang);\n      } else {\n        this.set(lang || defaultLang);\n      }\n    }\n  }\n\n});\nexport default Plugin;\nexport { defaultLang };","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/lang.js"],"names":["defineReactivePlugin","defaultLang","getLocale","__QUASAR_SSR_SERVER__","val","Array","isArray","navigator","languages","length","language","split","map","v","i","toLowerCase","toUpperCase","slice","join","Plugin","__langPack","set","langObject","ssrContext","lang","rtl","console","error","dir","attrs","isoName","$q","_meta","htmlAttrs","__qPrevLang","replace","el","document","documentElement","setAttribute","Object","assign","props","nativeName","install","initialLang","__installed"],"mappings":"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","sourcesContent":["import defineReactivePlugin from './utils/private/define-reactive-plugin.js'\n// no extension on purpose for next one:\nimport defaultLang from '../lang/en-US'\n\nfunction getLocale () {\n  if (__QUASAR_SSR_SERVER__) { return }\n\n  const val = Array.isArray(navigator.languages) === true && navigator.languages.length > 0\n    ? navigator.languages[ 0 ]\n    : navigator.language\n\n  if (typeof val === 'string') {\n    return val.split(/[-_]/).map((v, i) => (\n      i === 0\n        ? v.toLowerCase()\n        : (\n            i > 1 || v.length < 4\n              ? v.toUpperCase()\n              : (v[ 0 ].toUpperCase() + v.slice(1).toLowerCase())\n          )\n    )).join('-')\n  }\n}\n\nconst Plugin = defineReactivePlugin({\n  __langPack: {}\n}, {\n  getLocale,\n\n  set (langObject = defaultLang, ssrContext) {\n    const lang = {\n      ...langObject,\n      rtl: langObject.rtl === true,\n      getLocale\n    }\n\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: Quasar.lang.set(lang, ssrContext)')\n        return\n      }\n\n      const dir = lang.rtl === true ? 'rtl' : 'ltr'\n      const attrs = `lang=${ lang.isoName } dir=${ dir }`\n\n      lang.set = ssrContext.$q.lang.set\n\n      ssrContext._meta.htmlAttrs = ssrContext.__qPrevLang !== void 0\n        ? ssrContext._meta.htmlAttrs.replace(ssrContext.__qPrevLang, attrs)\n        : attrs\n\n      ssrContext.__qPrevLang = attrs\n      ssrContext.$q.lang = lang\n    }\n    else {\n      const el = document.documentElement\n      el.setAttribute('dir', lang.rtl === true ? 'rtl' : 'ltr')\n      el.setAttribute('lang', lang.isoName)\n\n      lang.set = Plugin.set\n\n      Object.assign(Plugin.__langPack, lang)\n\n      Plugin.props = lang\n      Plugin.isoName = lang.isoName\n      Plugin.nativeName = lang.nativeName\n    }\n  },\n\n  install ({ $q, lang, ssrContext }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialLang = lang || defaultLang\n\n      $q.lang = {}\n      $q.lang.set = langObject => {\n        this.set(langObject, ssrContext)\n      }\n\n      $q.lang.set(initialLang)\n\n      // one-time SSR server operation\n      if (this.isoName !== initialLang.isoName) {\n        this.isoName = initialLang.isoName\n        this.nativeName = initialLang.nativeName\n        this.props = initialLang\n      }\n    }\n    else {\n      $q.lang = Plugin.__langPack\n\n      if (this.__installed === true) {\n        lang !== void 0 && this.set(lang)\n      }\n      else {\n        this.set(lang || defaultLang)\n      }\n    }\n  }\n})\n\nexport default Plugin\nexport { defaultLang }\n"]},"metadata":{},"sourceType":"module"}