{"ast":null,"code":"import axios from 'axios';\nimport Chart from './ChartHelper.vue';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport MultiLstm from './MultiLstm.vue';\nimport lstm from './LSModel.vue';\nimport customANN from './customANN.vue';\nexport default {\n  components: {\n    Chart,\n    MultiLstm,\n    customANN,\n    lstm\n  },\n\n  data() {\n    return {\n      selected: this.$router.currentRoute.params.selected,\n      model_type: 'lstm',\n      prediction: null,\n      stockPrice: null,\n      previousDayPrice: null,\n      past50days: null,\n      color: null,\n      loading: true,\n      months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n      options: [{\n        value: 'lstm',\n        text: 'LSTM'\n      }, {\n        value: 'customANN',\n        text: 'Custom ANN'\n      }, {\n        value: 'MultiLstm',\n        text: 'Multivariate LSTM'\n      }]\n    };\n  },\n\n  methods: {\n    back() {\n      this.$router.push('/');\n    },\n\n    async getData() {\n      const path = 'http://127.0.0.1:5000/predict';\n      console.log(path, this.selected);\n      axios.get(path, {\n        params: {\n          ticker: this.selected,\n          model_type: this.model_type\n        }\n      }).then(response => {\n        this.loading = false;\n        this.stockPrice = response;\n        console.log(this.prediction, this.stockPrice);\n        this.prediction = this.stockPrice.data.prediction_value;\n        console.log(this.prediction);\n        this.past50days = JSON.parse(this.stockPrice.data.past_50_days);\n        console.log('past 50 days data');\n        console.log(this.past50days); // console.log(Object.values(this.past50days['Adj Close']));\n\n        const array = Object.values(JSON.parse(this.stockPrice.data.past_50_days));\n        console.log(this.previousDayPrice, array);\n        this.previousDayPrice = array[array.length - 1];\n        console.log(this.previousDayPrice);\n\n        if (this.previousDayPrice > this.prediction) {\n          this.color = 'red';\n          console.log(this.color);\n        } else {\n          this.color = 'green';\n          console.log(this.color);\n        }\n      }).catch(err => {\n        console.log(err);\n      }); // this.$router.push('/predict');\n    }\n\n  },\n  computed: {\n    stockData() {\n      return {\n        // converted date string in the right format this way: https://www.codegrepper.com/code-examples/javascript/convert+timestamp+to+dd%2Fmm%2Fyyyy+in+javascript\n        labels: Object.keys(JSON.parse(this.stockPrice.data.past_50_days)).map(a => new Date(a / 1)).map(a => `${a.getDate()} ${this.months[a.getMonth()]} ${a.getFullYear()}`),\n        datasets: [{\n          label: `Price of ${this.selected}`,\n          // backgroundColor: '#f87979',\n          data: Object.values(JSON.parse(this.stockPrice.data.past_50_days)),\n          backgroundColor: '#5a96ee',\n          borderColor: 'white'\n        }]\n      };\n    }\n\n  },\n  watch: {\n    model_type() {\n      this.loading = true;\n      this.getData(); // this.loading = false\n    }\n\n  },\n\n  async created() {\n    await this.getData();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","Chart","MultiLstm","lstm","customANN","components","data","selected","$router","currentRoute","params","model_type","prediction","stockPrice","previousDayPrice","past50days","color","loading","months","options","value","text","methods","back","push","getData","path","console","log","get","ticker","then","response","prediction_value","JSON","parse","past_50_days","array","Object","values","length","catch","err","computed","stockData","labels","keys","map","a","Date","getDate","getMonth","getFullYear","datasets","label","backgroundColor","borderColor","watch","created"],"sourceRoot":"","sources":["C:\\Users\\saina\\OneDrive - City University of Hong Kong\\Desktop\\cityu\\Cityu Year 4\\FYP\\code\\frontend_sample2\\src\\components\\PredictPrice.vue"],"sourcesContent":["<template>\n  <!-- https://stackoverflow.com/questions/11895476/bootstrap-element-100-width -->\n  <div id=\"container\">\n    <h3 v-if=\"!loading\">Stock Price Prediction</h3>\n    <div class=\"row\" style=\"padding: 2vw\">\n      <div class=\"col-2\"></div>\n      <div class=\"col-6\">\n        <div class=\"row\" style=\"max-width: 100%\">\n          <Chart v-if=\"!loading\" :chartData=\"stockData\" />\n        </div>\n        <br /><br />\n        <div class=\"row\">\n          <br />\n          <br />\n          <br />\n          <!-- <MultiLstm v-if=\"!loading\" :stockdata=\"past50days\" />\n          <customANN v-if=\"!loading\" :stockdata=\"past50days\" />\n          <lstm v-if=\"!loading\" :stockdata=\"past50days\" /> -->\n          <component :is=\"model_type\" v-if=\"!loading\" :stockdata=\"past50days\"></component>\n        </div>\n      </div>\n\n      <div class=\"col-2\" v-if=\"!loading\">\n        <h4 style=\"margin-left: 0\">Select which model you would want to run your code on:</h4>\n        <b-form-select\n          v-model=\"model_type\"\n          :options=\"options\"\n          size=\"lg\"\n          class=\"mt-3\"\n          placeholder=\"Select one model\"\n        ></b-form-select>\n\n        <br /><br /><br /><br /><br /><br /><br /><br />\n        <h4 v-if=\"!loading\" style=\"margin-left: 0\">\n          The predicted price of {{ selected }} for tomorrow is:\n          <span id=\"prediction\" :style=\"`color:${color}`\"> ${{ prediction }}</span>\n        </h4>\n        <b-button\n          v-if=\"!loading\"\n          @click=\"back\"\n          id=\"button-2\"\n          style=\"margin-left: 10\"\n          type=\"button\"\n          variant=\"dark\"\n          >Back\n        </b-button>\n      </div>\n      <div v-if=\"loading\" class=\"d-flex justify-content-center mb-3\">\n        <b-spinner v-if=\"loading\" class=\"m-50 flex flex-center\"></b-spinner>\n      </div>\n      <div class=\"col-2\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Chart from './ChartHelper.vue';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport MultiLstm from './MultiLstm.vue';\nimport lstm from './LSModel.vue';\nimport customANN from './customANN.vue';\n\nexport default {\n  components: {\n    Chart,\n    MultiLstm,\n    customANN,\n    lstm,\n  },\n  data() {\n    return {\n      selected: this.$router.currentRoute.params.selected,\n      model_type: 'lstm',\n      prediction: null,\n      stockPrice: null,\n      previousDayPrice: null,\n      past50days: null,\n      color: null,\n      loading: true,\n      months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n      options: [\n        { value: 'lstm', text: 'LSTM' },\n        { value: 'customANN', text: 'Custom ANN' },\n        { value: 'MultiLstm', text: 'Multivariate LSTM' },\n      ],\n    };\n  },\n  methods: {\n    back() {\n      this.$router.push('/');\n    },\n    async getData() {\n      const path = 'http://127.0.0.1:5000/predict';\n      console.log(path, this.selected);\n      axios\n        .get(path, {\n          params: {\n            ticker: this.selected,\n            model_type: this.model_type,\n          },\n        })\n        .then((response) => {\n          this.loading = false;\n          this.stockPrice = response;\n          console.log(this.prediction, this.stockPrice);\n          this.prediction = this.stockPrice.data.prediction_value;\n          console.log(this.prediction);\n          this.past50days = JSON.parse(this.stockPrice.data.past_50_days);\n          console.log('past 50 days data');\n          console.log(this.past50days);\n          // console.log(Object.values(this.past50days['Adj Close']));\n          const array = Object.values(JSON.parse(this.stockPrice.data.past_50_days));\n          console.log(this.previousDayPrice, array);\n          this.previousDayPrice = array[array.length - 1];\n          console.log(this.previousDayPrice);\n\n          if (this.previousDayPrice > this.prediction) {\n            this.color = 'red';\n            console.log(this.color);\n          } else {\n            this.color = 'green';\n            console.log(this.color);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      // this.$router.push('/predict');\n    },\n  },\n  computed: {\n    stockData() {\n      return {\n        // converted date string in the right format this way: https://www.codegrepper.com/code-examples/javascript/convert+timestamp+to+dd%2Fmm%2Fyyyy+in+javascript\n        labels: Object.keys(JSON.parse(this.stockPrice.data.past_50_days))\n          .map((a) => new Date(a / 1))\n          .map((a) => `${a.getDate()} ${this.months[a.getMonth()]} ${a.getFullYear()}`),\n        datasets: [\n          {\n            label: `Price of ${this.selected}`,\n            // backgroundColor: '#f87979',\n            data: Object.values(JSON.parse(this.stockPrice.data.past_50_days)),\n            backgroundColor: '#5a96ee',\n            borderColor: 'white',\n          },\n        ],\n      };\n    },\n  },\n  watch: {\n    model_type() {\n      this.loading = true;\n      this.getData();\n      // this.loading = false\n    },\n  },\n  async created() {\n    await this.getData();\n  },\n};\n</script>\n<style>\n#button-2 {\n  margin-left: 0%;\n  margin-top: 1%;\n}\n#container {\n  margin: 2vw;\n}\nh3 {\n  font-family: sohne, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: '800';\n}\n#chart {\n  text-align: right;\n  border: 'solid red 1px';\n}\nh4,\np,\nspan {\n  font-family: 'Castoro', serif;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}