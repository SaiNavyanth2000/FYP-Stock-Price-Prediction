{"ast":null,"code":"import { h, ref, reactive, computed, watch, provide, onUnmounted, getCurrentInstance } from 'vue';\nimport { isRuntimeSsrPreHydration } from '../../plugins/Platform.js';\nimport QScrollObserver from '../scroll-observer/QScrollObserver.js';\nimport QResizeObserver from '../resize-observer/QResizeObserver.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { getScrollbarWidth } from '../../utils/scroll.js';\nimport { hMergeSlot } from '../../utils/private/render.js';\nimport { layoutKey } from '../../utils/private/symbols.js';\nexport default createComponent({\n  name: 'QLayout',\n  props: {\n    container: Boolean,\n    view: {\n      type: String,\n      default: 'hhh lpr fff',\n      validator: v => /^(h|l)h(h|r) lpr (f|l)f(f|r)$/.test(v.toLowerCase())\n    },\n    onScroll: Function,\n    onScrollHeight: Function,\n    onResize: Function\n  },\n\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const {\n      proxy: {\n        $q\n      }\n    } = getCurrentInstance();\n    const rootRef = ref(null); // page related\n\n    const height = ref($q.screen.height);\n    const width = ref(props.container === true ? 0 : $q.screen.width);\n    const scroll = ref({\n      position: 0,\n      direction: 'down',\n      inflectionPoint: 0\n    }); // container only prop\n\n    const containerHeight = ref(0);\n    const scrollbarWidth = ref(isRuntimeSsrPreHydration.value === true ? 0 : getScrollbarWidth());\n    const classes = computed(() => 'q-layout q-layout--' + (props.container === true ? 'containerized' : 'standard'));\n    const style = computed(() => props.container === false ? {\n      minHeight: $q.screen.height + 'px'\n    } : null); // used by container only\n\n    const targetStyle = computed(() => scrollbarWidth.value !== 0 ? {\n      [$q.lang.rtl === true ? 'left' : 'right']: `${scrollbarWidth.value}px`\n    } : null);\n    const targetChildStyle = computed(() => scrollbarWidth.value !== 0 ? {\n      [$q.lang.rtl === true ? 'right' : 'left']: 0,\n      [$q.lang.rtl === true ? 'left' : 'right']: `-${scrollbarWidth.value}px`,\n      width: `calc(100% + ${scrollbarWidth.value}px)`\n    } : null);\n\n    function onPageScroll(data) {\n      if (props.container === true || document.qScrollPrevented !== true) {\n        const info = {\n          position: data.position.top,\n          direction: data.direction,\n          directionChanged: data.directionChanged,\n          inflectionPoint: data.inflectionPoint.top,\n          delta: data.delta.top\n        };\n        scroll.value = info;\n        props.onScroll !== void 0 && emit('scroll', info);\n      }\n    }\n\n    function onPageResize(data) {\n      const {\n        height: newHeight,\n        width: newWidth\n      } = data;\n      let resized = false;\n\n      if (height.value !== newHeight) {\n        resized = true;\n        height.value = newHeight;\n        props.onScrollHeight !== void 0 && emit('scroll-height', newHeight);\n        updateScrollbarWidth();\n      }\n\n      if (width.value !== newWidth) {\n        resized = true;\n        width.value = newWidth;\n      }\n\n      if (resized === true && props.onResize !== void 0) {\n        emit('resize', data);\n      }\n    }\n\n    function onContainerResize({\n      height\n    }) {\n      if (containerHeight.value !== height) {\n        containerHeight.value = height;\n        updateScrollbarWidth();\n      }\n    }\n\n    function updateScrollbarWidth() {\n      if (props.container === true) {\n        const width = height.value > containerHeight.value ? getScrollbarWidth() : 0;\n\n        if (scrollbarWidth.value !== width) {\n          scrollbarWidth.value = width;\n        }\n      }\n    }\n\n    let timer;\n    const $layout = {\n      instances: {},\n      view: computed(() => props.view),\n      isContainer: computed(() => props.container),\n      rootRef,\n      height,\n      containerHeight,\n      scrollbarWidth,\n      totalWidth: computed(() => width.value + scrollbarWidth.value),\n      rows: computed(() => {\n        const rows = props.view.toLowerCase().split(' ');\n        return {\n          top: rows[0].split(''),\n          middle: rows[1].split(''),\n          bottom: rows[2].split('')\n        };\n      }),\n      header: reactive({\n        size: 0,\n        offset: 0,\n        space: false\n      }),\n      right: reactive({\n        size: 300,\n        offset: 0,\n        space: false\n      }),\n      footer: reactive({\n        size: 0,\n        offset: 0,\n        space: false\n      }),\n      left: reactive({\n        size: 300,\n        offset: 0,\n        space: false\n      }),\n      scroll,\n\n      animate() {\n        if (timer !== void 0) {\n          clearTimeout(timer);\n        } else {\n          document.body.classList.add('q-body--layout-animate');\n        }\n\n        timer = setTimeout(() => {\n          document.body.classList.remove('q-body--layout-animate');\n          timer = void 0;\n        }, 155);\n      },\n\n      update(part, prop, val) {\n        $layout[part][prop] = val;\n      }\n\n    };\n    provide(layoutKey, $layout); // prevent scrollbar flicker while resizing window height\n    // if no page scrollbar is already present\n\n    if (__QUASAR_SSR_SERVER__ !== true && getScrollbarWidth() > 0) {\n      let timer = null;\n      const el = document.body;\n\n      function restoreScrollbar() {\n        timer = null;\n        el.classList.remove('hide-scrollbar');\n      }\n\n      function hideScrollbar() {\n        if (timer === null) {\n          // if it has no scrollbar then there's nothing to do\n          if (el.scrollHeight > $q.screen.height) {\n            return;\n          }\n\n          el.classList.add('hide-scrollbar');\n        } else {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(restoreScrollbar, 300);\n      }\n\n      function updateScrollEvent(action) {\n        if (timer !== null && action === 'remove') {\n          clearTimeout(timer);\n          restoreScrollbar();\n        }\n\n        window[`${action}EventListener`]('resize', hideScrollbar);\n      }\n\n      watch(() => props.container !== true ? 'add' : 'remove', updateScrollEvent);\n      props.container !== true && updateScrollEvent('add');\n      onUnmounted(() => {\n        updateScrollEvent('remove');\n      });\n    }\n\n    return () => {\n      const content = hMergeSlot(slots.default, [h(QScrollObserver, {\n        onScroll: onPageScroll\n      }), h(QResizeObserver, {\n        onResize: onPageResize\n      })]);\n      const layout = h('div', {\n        class: classes.value,\n        style: style.value,\n        ref: props.container === true ? void 0 : rootRef\n      }, content);\n\n      if (props.container === true) {\n        return h('div', {\n          class: 'q-layout-container overflow-hidden',\n          ref: rootRef\n        }, [h(QResizeObserver, {\n          onResize: onContainerResize\n        }), h('div', {\n          class: 'absolute-full',\n          style: targetStyle.value\n        }, [h('div', {\n          class: 'scroll',\n          style: targetChildStyle.value\n        }, [layout])])]);\n      }\n\n      return layout;\n    };\n  }\n\n});","map":{"version":3,"sources":["C:/Users/saina/OneDrive - City University of Hong Kong/Desktop/cityu/Cityu Year 4/FYP/code/frontend_sample2/node_modules/quasar/src/components/layout/QLayout.js"],"names":["h","ref","reactive","computed","watch","provide","onUnmounted","getCurrentInstance","isRuntimeSsrPreHydration","QScrollObserver","QResizeObserver","createComponent","getScrollbarWidth","hMergeSlot","layoutKey","name","props","container","Boolean","view","type","String","default","validator","v","test","toLowerCase","onScroll","Function","onScrollHeight","onResize","setup","slots","emit","proxy","$q","rootRef","height","screen","width","scroll","position","direction","inflectionPoint","containerHeight","scrollbarWidth","value","classes","style","minHeight","targetStyle","lang","rtl","targetChildStyle","onPageScroll","data","document","qScrollPrevented","info","top","directionChanged","delta","onPageResize","newHeight","newWidth","resized","updateScrollbarWidth","onContainerResize","timer","$layout","instances","isContainer","totalWidth","rows","split","middle","bottom","header","size","offset","space","right","footer","left","animate","clearTimeout","body","classList","add","setTimeout","remove","update","part","prop","val","__QUASAR_SSR_SERVER__","el","restoreScrollbar","hideScrollbar","scrollHeight","updateScrollEvent","action","window","content","layout","class"],"mappings":"AAAA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,WAArD,EAAkEC,kBAAlE,QAA4F,KAA5F;AAEA,SAASC,wBAAT,QAAyC,2BAAzC;AAEA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AAEA,eAAeH,eAAe,CAAC;AAC7BI,EAAAA,IAAI,EAAE,SADuB;AAG7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEC,OADN;AAELC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEC,MADF;AAEJC,MAAAA,OAAO,EAAE,aAFL;AAGJC,MAAAA,SAAS,EAAEC,CAAC,IAAI,gCAAgCC,IAAhC,CAAqCD,CAAC,CAACE,WAAF,EAArC;AAHZ,KAFD;AAQLC,IAAAA,QAAQ,EAAEC,QARL;AASLC,IAAAA,cAAc,EAAED,QATX;AAULE,IAAAA,QAAQ,EAAEF;AAVL,GAHsB;;AAgB7BG,EAAAA,KAAK,CAAEf,KAAF,EAAS;AAAEgB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAT,EAA0B;AAC7B,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAAT,QAAoB5B,kBAAkB,EAA5C;AAEA,UAAM6B,OAAO,GAAGnC,GAAG,CAAC,IAAD,CAAnB,CAH6B,CAK7B;;AACA,UAAMoC,MAAM,GAAGpC,GAAG,CAACkC,EAAE,CAACG,MAAH,CAAUD,MAAX,CAAlB;AACA,UAAME,KAAK,GAAGtC,GAAG,CAACe,KAAK,CAACC,SAAN,KAAoB,IAApB,GAA2B,CAA3B,GAA+BkB,EAAE,CAACG,MAAH,CAAUC,KAA1C,CAAjB;AACA,UAAMC,MAAM,GAAGvC,GAAG,CAAC;AAAEwC,MAAAA,QAAQ,EAAE,CAAZ;AAAeC,MAAAA,SAAS,EAAE,MAA1B;AAAkCC,MAAAA,eAAe,EAAE;AAAnD,KAAD,CAAlB,CAR6B,CAU7B;;AACA,UAAMC,eAAe,GAAG3C,GAAG,CAAC,CAAD,CAA3B;AACA,UAAM4C,cAAc,GAAG5C,GAAG,CAACO,wBAAwB,CAACsC,KAAzB,KAAmC,IAAnC,GAA0C,CAA1C,GAA8ClC,iBAAiB,EAAhE,CAA1B;AAEA,UAAMmC,OAAO,GAAG5C,QAAQ,CAAC,MACvB,yBACGa,KAAK,CAACC,SAAN,KAAoB,IAApB,GAA2B,eAA3B,GAA6C,UADhD,CADsB,CAAxB;AAKA,UAAM+B,KAAK,GAAG7C,QAAQ,CAAC,MACrBa,KAAK,CAACC,SAAN,KAAoB,KAApB,GACI;AAAEgC,MAAAA,SAAS,EAAEd,EAAE,CAACG,MAAH,CAAUD,MAAV,GAAmB;AAAhC,KADJ,GAEI,IAHgB,CAAtB,CAnB6B,CAyB7B;;AACA,UAAMa,WAAW,GAAG/C,QAAQ,CAAC,MAC3B0C,cAAc,CAACC,KAAf,KAAyB,CAAzB,GACI;AAAE,OAAEX,EAAE,CAACgB,IAAH,CAAQC,GAAR,KAAgB,IAAhB,GAAuB,MAAvB,GAAgC,OAAlC,GAA8C,GAAGP,cAAc,CAACC,KAAO;AAAzE,KADJ,GAEI,IAHsB,CAA5B;AAMA,UAAMO,gBAAgB,GAAGlD,QAAQ,CAAC,MAChC0C,cAAc,CAACC,KAAf,KAAyB,CAAzB,GACI;AACE,OAAEX,EAAE,CAACgB,IAAH,CAAQC,GAAR,KAAgB,IAAhB,GAAuB,OAAvB,GAAiC,MAAnC,GAA6C,CAD/C;AAEE,OAAEjB,EAAE,CAACgB,IAAH,CAAQC,GAAR,KAAgB,IAAhB,GAAuB,MAAvB,GAAgC,OAAlC,GAA8C,IAAIP,cAAc,CAACC,KAAO,IAF1E;AAGEP,MAAAA,KAAK,EAAG,eAAeM,cAAc,CAACC,KAAO;AAH/C,KADJ,GAMI,IAP2B,CAAjC;;AAUA,aAASQ,YAAT,CAAuBC,IAAvB,EAA6B;AAC3B,UAAIvC,KAAK,CAACC,SAAN,KAAoB,IAApB,IAA4BuC,QAAQ,CAACC,gBAAT,KAA8B,IAA9D,EAAoE;AAClE,cAAMC,IAAI,GAAG;AACXjB,UAAAA,QAAQ,EAAEc,IAAI,CAACd,QAAL,CAAckB,GADb;AAEXjB,UAAAA,SAAS,EAAEa,IAAI,CAACb,SAFL;AAGXkB,UAAAA,gBAAgB,EAAEL,IAAI,CAACK,gBAHZ;AAIXjB,UAAAA,eAAe,EAAEY,IAAI,CAACZ,eAAL,CAAqBgB,GAJ3B;AAKXE,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,CAAWF;AALP,SAAb;AAQAnB,QAAAA,MAAM,CAACM,KAAP,GAAeY,IAAf;AACA1C,QAAAA,KAAK,CAACW,QAAN,KAAmB,KAAK,CAAxB,IAA6BM,IAAI,CAAC,QAAD,EAAWyB,IAAX,CAAjC;AACD;AACF;;AAED,aAASI,YAAT,CAAuBP,IAAvB,EAA6B;AAC3B,YAAM;AAAElB,QAAAA,MAAM,EAAE0B,SAAV;AAAqBxB,QAAAA,KAAK,EAAEyB;AAA5B,UAAyCT,IAA/C;AACA,UAAIU,OAAO,GAAG,KAAd;;AAEA,UAAI5B,MAAM,CAACS,KAAP,KAAiBiB,SAArB,EAAgC;AAC9BE,QAAAA,OAAO,GAAG,IAAV;AACA5B,QAAAA,MAAM,CAACS,KAAP,GAAeiB,SAAf;AACA/C,QAAAA,KAAK,CAACa,cAAN,KAAyB,KAAK,CAA9B,IAAmCI,IAAI,CAAC,eAAD,EAAkB8B,SAAlB,CAAvC;AACAG,QAAAA,oBAAoB;AACrB;;AACD,UAAI3B,KAAK,CAACO,KAAN,KAAgBkB,QAApB,EAA8B;AAC5BC,QAAAA,OAAO,GAAG,IAAV;AACA1B,QAAAA,KAAK,CAACO,KAAN,GAAckB,QAAd;AACD;;AAED,UAAIC,OAAO,KAAK,IAAZ,IAAoBjD,KAAK,CAACc,QAAN,KAAmB,KAAK,CAAhD,EAAmD;AACjDG,QAAAA,IAAI,CAAC,QAAD,EAAWsB,IAAX,CAAJ;AACD;AACF;;AAED,aAASY,iBAAT,CAA4B;AAAE9B,MAAAA;AAAF,KAA5B,EAAwC;AACtC,UAAIO,eAAe,CAACE,KAAhB,KAA0BT,MAA9B,EAAsC;AACpCO,QAAAA,eAAe,CAACE,KAAhB,GAAwBT,MAAxB;AACA6B,QAAAA,oBAAoB;AACrB;AACF;;AAED,aAASA,oBAAT,GAAiC;AAC/B,UAAIlD,KAAK,CAACC,SAAN,KAAoB,IAAxB,EAA8B;AAC5B,cAAMsB,KAAK,GAAGF,MAAM,CAACS,KAAP,GAAeF,eAAe,CAACE,KAA/B,GACVlC,iBAAiB,EADP,GAEV,CAFJ;;AAIA,YAAIiC,cAAc,CAACC,KAAf,KAAyBP,KAA7B,EAAoC;AAClCM,UAAAA,cAAc,CAACC,KAAf,GAAuBP,KAAvB;AACD;AACF;AACF;;AAED,QAAI6B,KAAJ;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE,EADG;AAEdnD,MAAAA,IAAI,EAAEhB,QAAQ,CAAC,MAAMa,KAAK,CAACG,IAAb,CAFA;AAGdoD,MAAAA,WAAW,EAAEpE,QAAQ,CAAC,MAAMa,KAAK,CAACC,SAAb,CAHP;AAKdmB,MAAAA,OALc;AAOdC,MAAAA,MAPc;AAQdO,MAAAA,eARc;AASdC,MAAAA,cATc;AAUd2B,MAAAA,UAAU,EAAErE,QAAQ,CAAC,MAAMoC,KAAK,CAACO,KAAN,GAAcD,cAAc,CAACC,KAApC,CAVN;AAYd2B,MAAAA,IAAI,EAAEtE,QAAQ,CAAC,MAAM;AACnB,cAAMsE,IAAI,GAAGzD,KAAK,CAACG,IAAN,CAAWO,WAAX,GAAyBgD,KAAzB,CAA+B,GAA/B,CAAb;AACA,eAAO;AACLf,UAAAA,GAAG,EAAEc,IAAI,CAAE,CAAF,CAAJ,CAAUC,KAAV,CAAgB,EAAhB,CADA;AAELC,UAAAA,MAAM,EAAEF,IAAI,CAAE,CAAF,CAAJ,CAAUC,KAAV,CAAgB,EAAhB,CAFH;AAGLE,UAAAA,MAAM,EAAEH,IAAI,CAAE,CAAF,CAAJ,CAAUC,KAAV,CAAgB,EAAhB;AAHH,SAAP;AAKD,OAPa,CAZA;AAqBdG,MAAAA,MAAM,EAAE3E,QAAQ,CAAC;AAAE4E,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE,CAAnB;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAD,CArBF;AAsBdC,MAAAA,KAAK,EAAE/E,QAAQ,CAAC;AAAE4E,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,CAArB;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OAAD,CAtBD;AAuBdE,MAAAA,MAAM,EAAEhF,QAAQ,CAAC;AAAE4E,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE,CAAnB;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAD,CAvBF;AAwBdG,MAAAA,IAAI,EAAEjF,QAAQ,CAAC;AAAE4E,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,CAArB;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OAAD,CAxBA;AA0BdxC,MAAAA,MA1Bc;;AA4Bd4C,MAAAA,OAAO,GAAI;AACT,YAAIhB,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBiB,UAAAA,YAAY,CAACjB,KAAD,CAAZ;AACD,SAFD,MAGK;AACHZ,UAAAA,QAAQ,CAAC8B,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,wBAA5B;AACD;;AAEDpB,QAAAA,KAAK,GAAGqB,UAAU,CAAC,MAAM;AACvBjC,UAAAA,QAAQ,CAAC8B,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,wBAA/B;AACAtB,UAAAA,KAAK,GAAG,KAAK,CAAb;AACD,SAHiB,EAGf,GAHe,CAAlB;AAID,OAxCa;;AA0CduB,MAAAA,MAAM,CAAEC,IAAF,EAAQC,IAAR,EAAcC,GAAd,EAAmB;AACvBzB,QAAAA,OAAO,CAAEuB,IAAF,CAAP,CAAiBC,IAAjB,IAA0BC,GAA1B;AACD;;AA5Ca,KAAhB;AA+CAzF,IAAAA,OAAO,CAACS,SAAD,EAAYuD,OAAZ,CAAP,CAjJ6B,CAmJ7B;AACA;;AACA,QAAI0B,qBAAqB,KAAK,IAA1B,IAAkCnF,iBAAiB,KAAK,CAA5D,EAA+D;AAC7D,UAAIwD,KAAK,GAAG,IAAZ;AACA,YAAM4B,EAAE,GAAGxC,QAAQ,CAAC8B,IAApB;;AAEA,eAASW,gBAAT,GAA6B;AAC3B7B,QAAAA,KAAK,GAAG,IAAR;AACA4B,QAAAA,EAAE,CAACT,SAAH,CAAaG,MAAb,CAAoB,gBAApB;AACD;;AAED,eAASQ,aAAT,GAA0B;AACxB,YAAI9B,KAAK,KAAK,IAAd,EAAoB;AAClB;AAEA,cAAI4B,EAAE,CAACG,YAAH,GAAkBhE,EAAE,CAACG,MAAH,CAAUD,MAAhC,EAAwC;AACtC;AACD;;AAED2D,UAAAA,EAAE,CAACT,SAAH,CAAaC,GAAb,CAAiB,gBAAjB;AACD,SARD,MASK;AACHH,UAAAA,YAAY,CAACjB,KAAD,CAAZ;AACD;;AAEDA,QAAAA,KAAK,GAAGqB,UAAU,CAACQ,gBAAD,EAAmB,GAAnB,CAAlB;AACD;;AAED,eAASG,iBAAT,CAA4BC,MAA5B,EAAoC;AAClC,YAAIjC,KAAK,KAAK,IAAV,IAAkBiC,MAAM,KAAK,QAAjC,EAA2C;AACzChB,UAAAA,YAAY,CAACjB,KAAD,CAAZ;AACA6B,UAAAA,gBAAgB;AACjB;;AAEDK,QAAAA,MAAM,CAAG,GAAGD,MAAQ,eAAd,CAAN,CAAqC,QAArC,EAA+CH,aAA/C;AACD;;AAED9F,MAAAA,KAAK,CACH,MAAOY,KAAK,CAACC,SAAN,KAAoB,IAApB,GAA2B,KAA3B,GAAmC,QADvC,EAEHmF,iBAFG,CAAL;AAKApF,MAAAA,KAAK,CAACC,SAAN,KAAoB,IAApB,IAA4BmF,iBAAiB,CAAC,KAAD,CAA7C;AAEA9F,MAAAA,WAAW,CAAC,MAAM;AAChB8F,QAAAA,iBAAiB,CAAC,QAAD,CAAjB;AACD,OAFU,CAAX;AAGD;;AAED,WAAO,MAAM;AACX,YAAMG,OAAO,GAAG1F,UAAU,CAACmB,KAAK,CAACV,OAAP,EAAgB,CACxCtB,CAAC,CAACS,eAAD,EAAkB;AAAEkB,QAAAA,QAAQ,EAAE2B;AAAZ,OAAlB,CADuC,EAExCtD,CAAC,CAACU,eAAD,EAAkB;AAAEoB,QAAAA,QAAQ,EAAEgC;AAAZ,OAAlB,CAFuC,CAAhB,CAA1B;AAKA,YAAM0C,MAAM,GAAGxG,CAAC,CAAC,KAAD,EAAQ;AACtByG,QAAAA,KAAK,EAAE1D,OAAO,CAACD,KADO;AAEtBE,QAAAA,KAAK,EAAEA,KAAK,CAACF,KAFS;AAGtB7C,QAAAA,GAAG,EAAEe,KAAK,CAACC,SAAN,KAAoB,IAApB,GAA2B,KAAK,CAAhC,GAAoCmB;AAHnB,OAAR,EAIbmE,OAJa,CAAhB;;AAMA,UAAIvF,KAAK,CAACC,SAAN,KAAoB,IAAxB,EAA8B;AAC5B,eAAOjB,CAAC,CAAC,KAAD,EAAQ;AACdyG,UAAAA,KAAK,EAAE,oCADO;AAEdxG,UAAAA,GAAG,EAAEmC;AAFS,SAAR,EAGL,CACDpC,CAAC,CAACU,eAAD,EAAkB;AAAEoB,UAAAA,QAAQ,EAAEqC;AAAZ,SAAlB,CADA,EAEDnE,CAAC,CAAC,KAAD,EAAQ;AACPyG,UAAAA,KAAK,EAAE,eADA;AAEPzD,UAAAA,KAAK,EAAEE,WAAW,CAACJ;AAFZ,SAAR,EAGE,CACD9C,CAAC,CAAC,KAAD,EAAQ;AACPyG,UAAAA,KAAK,EAAE,QADA;AAEPzD,UAAAA,KAAK,EAAEK,gBAAgB,CAACP;AAFjB,SAAR,EAGE,CAAE0D,MAAF,CAHF,CADA,CAHF,CAFA,CAHK,CAAR;AAeD;;AAED,aAAOA,MAAP;AACD,KA/BD;AAgCD;;AApP4B,CAAD,CAA9B","sourcesContent":["import { h, ref, reactive, computed, watch, provide, onUnmounted, getCurrentInstance } from 'vue'\n\nimport { isRuntimeSsrPreHydration } from '../../plugins/Platform.js'\n\nimport QScrollObserver from '../scroll-observer/QScrollObserver.js'\nimport QResizeObserver from '../resize-observer/QResizeObserver.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { getScrollbarWidth } from '../../utils/scroll.js'\nimport { hMergeSlot } from '../../utils/private/render.js'\nimport { layoutKey } from '../../utils/private/symbols.js'\n\nexport default createComponent({\n  name: 'QLayout',\n\n  props: {\n    container: Boolean,\n    view: {\n      type: String,\n      default: 'hhh lpr fff',\n      validator: v => /^(h|l)h(h|r) lpr (f|l)f(f|r)$/.test(v.toLowerCase())\n    },\n\n    onScroll: Function,\n    onScrollHeight: Function,\n    onResize: Function\n  },\n\n  setup (props, { slots, emit }) {\n    const { proxy: { $q } } = getCurrentInstance()\n\n    const rootRef = ref(null)\n\n    // page related\n    const height = ref($q.screen.height)\n    const width = ref(props.container === true ? 0 : $q.screen.width)\n    const scroll = ref({ position: 0, direction: 'down', inflectionPoint: 0 })\n\n    // container only prop\n    const containerHeight = ref(0)\n    const scrollbarWidth = ref(isRuntimeSsrPreHydration.value === true ? 0 : getScrollbarWidth())\n\n    const classes = computed(() =>\n      'q-layout q-layout--'\n      + (props.container === true ? 'containerized' : 'standard')\n    )\n\n    const style = computed(() => (\n      props.container === false\n        ? { minHeight: $q.screen.height + 'px' }\n        : null\n    ))\n\n    // used by container only\n    const targetStyle = computed(() => (\n      scrollbarWidth.value !== 0\n        ? { [ $q.lang.rtl === true ? 'left' : 'right' ]: `${ scrollbarWidth.value }px` }\n        : null\n    ))\n\n    const targetChildStyle = computed(() => (\n      scrollbarWidth.value !== 0\n        ? {\n            [ $q.lang.rtl === true ? 'right' : 'left' ]: 0,\n            [ $q.lang.rtl === true ? 'left' : 'right' ]: `-${ scrollbarWidth.value }px`,\n            width: `calc(100% + ${ scrollbarWidth.value }px)`\n          }\n        : null\n    ))\n\n    function onPageScroll (data) {\n      if (props.container === true || document.qScrollPrevented !== true) {\n        const info = {\n          position: data.position.top,\n          direction: data.direction,\n          directionChanged: data.directionChanged,\n          inflectionPoint: data.inflectionPoint.top,\n          delta: data.delta.top\n        }\n\n        scroll.value = info\n        props.onScroll !== void 0 && emit('scroll', info)\n      }\n    }\n\n    function onPageResize (data) {\n      const { height: newHeight, width: newWidth } = data\n      let resized = false\n\n      if (height.value !== newHeight) {\n        resized = true\n        height.value = newHeight\n        props.onScrollHeight !== void 0 && emit('scroll-height', newHeight)\n        updateScrollbarWidth()\n      }\n      if (width.value !== newWidth) {\n        resized = true\n        width.value = newWidth\n      }\n\n      if (resized === true && props.onResize !== void 0) {\n        emit('resize', data)\n      }\n    }\n\n    function onContainerResize ({ height }) {\n      if (containerHeight.value !== height) {\n        containerHeight.value = height\n        updateScrollbarWidth()\n      }\n    }\n\n    function updateScrollbarWidth () {\n      if (props.container === true) {\n        const width = height.value > containerHeight.value\n          ? getScrollbarWidth()\n          : 0\n\n        if (scrollbarWidth.value !== width) {\n          scrollbarWidth.value = width\n        }\n      }\n    }\n\n    let timer\n\n    const $layout = {\n      instances: {},\n      view: computed(() => props.view),\n      isContainer: computed(() => props.container),\n\n      rootRef,\n\n      height,\n      containerHeight,\n      scrollbarWidth,\n      totalWidth: computed(() => width.value + scrollbarWidth.value),\n\n      rows: computed(() => {\n        const rows = props.view.toLowerCase().split(' ')\n        return {\n          top: rows[ 0 ].split(''),\n          middle: rows[ 1 ].split(''),\n          bottom: rows[ 2 ].split('')\n        }\n      }),\n\n      header: reactive({ size: 0, offset: 0, space: false }),\n      right: reactive({ size: 300, offset: 0, space: false }),\n      footer: reactive({ size: 0, offset: 0, space: false }),\n      left: reactive({ size: 300, offset: 0, space: false }),\n\n      scroll,\n\n      animate () {\n        if (timer !== void 0) {\n          clearTimeout(timer)\n        }\n        else {\n          document.body.classList.add('q-body--layout-animate')\n        }\n\n        timer = setTimeout(() => {\n          document.body.classList.remove('q-body--layout-animate')\n          timer = void 0\n        }, 155)\n      },\n\n      update (part, prop, val) {\n        $layout[ part ][ prop ] = val\n      }\n    }\n\n    provide(layoutKey, $layout)\n\n    // prevent scrollbar flicker while resizing window height\n    // if no page scrollbar is already present\n    if (__QUASAR_SSR_SERVER__ !== true && getScrollbarWidth() > 0) {\n      let timer = null\n      const el = document.body\n\n      function restoreScrollbar () {\n        timer = null\n        el.classList.remove('hide-scrollbar')\n      }\n\n      function hideScrollbar () {\n        if (timer === null) {\n          // if it has no scrollbar then there's nothing to do\n\n          if (el.scrollHeight > $q.screen.height) {\n            return\n          }\n\n          el.classList.add('hide-scrollbar')\n        }\n        else {\n          clearTimeout(timer)\n        }\n\n        timer = setTimeout(restoreScrollbar, 300)\n      }\n\n      function updateScrollEvent (action) {\n        if (timer !== null && action === 'remove') {\n          clearTimeout(timer)\n          restoreScrollbar()\n        }\n\n        window[ `${ action }EventListener` ]('resize', hideScrollbar)\n      }\n\n      watch(\n        () => (props.container !== true ? 'add' : 'remove'),\n        updateScrollEvent\n      )\n\n      props.container !== true && updateScrollEvent('add')\n\n      onUnmounted(() => {\n        updateScrollEvent('remove')\n      })\n    }\n\n    return () => {\n      const content = hMergeSlot(slots.default, [\n        h(QScrollObserver, { onScroll: onPageScroll }),\n        h(QResizeObserver, { onResize: onPageResize })\n      ])\n\n      const layout = h('div', {\n        class: classes.value,\n        style: style.value,\n        ref: props.container === true ? void 0 : rootRef\n      }, content)\n\n      if (props.container === true) {\n        return h('div', {\n          class: 'q-layout-container overflow-hidden',\n          ref: rootRef\n        }, [\n          h(QResizeObserver, { onResize: onContainerResize }),\n          h('div', {\n            class: 'absolute-full',\n            style: targetStyle.value\n          }, [\n            h('div', {\n              class: 'scroll',\n              style: targetChildStyle.value\n            }, [ layout ])\n          ])\n        ])\n      }\n\n      return layout\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"module"}